{"version":3,"sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/webpack/bootstrap","webpack://Ae/./node_modules/@babel/runtime/regenerator/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Ae/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Ae/./es/tx/builder/schema.js","webpack://Ae/./node_modules/ramda/src/merge.js","webpack://Ae/./es/utils/crypto.js","webpack://Ae/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Ae/external {\"commonjs\":\"@stamp/required\",\"commonjs2\":\"@stamp/required\"}","webpack://Ae/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\"}","webpack://Ae/./node_modules/ramda/src/head.js","webpack://Ae/./es/tx/builder/helpers.js","webpack://Ae/./es/tx/builder/index.js","webpack://Ae/./node_modules/ramda/src/internal/_curry2.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Ae/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Ae/external {\"commonjs\":\"@stamp/it\",\"commonjs2\":\"@stamp/it\"}","webpack://Ae/./node_modules/ramda/src/internal/_curry1.js","webpack://Ae/./es/utils/bytes.js","webpack://Ae/external {\"commonjs\":\"joi-browser\",\"commonjs2\":\"joi-browser\"}","webpack://Ae/./es/ae/index.js","webpack://Ae/./es/node-pool/helpers.js","webpack://Ae/./es/node-pool/index.js","webpack://Ae/./es/utils/async-init.js","webpack://Ae/./es/utils/string.js","webpack://Ae/./node_modules/buffer/index.js","webpack://Ae/./node_modules/ramda/src/keys.js","webpack://Ae/./node_modules/ramda/src/path.js","webpack://Ae/./es/account/index.js","webpack://Ae/./es/ae/contract.js","webpack://Ae/./node_modules/ramda/src/fromPairs.js","webpack://Ae/./node_modules/ramda/src/contains.js","webpack://Ae/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\"}","webpack://Ae/./node_modules/ramda/src/internal/_has.js","webpack://Ae/./node_modules/ramda/src/join.js","webpack://Ae/./node_modules/ramda/src/toString.js","webpack://Ae/./es/utils/json-big.js","webpack://Ae/./node_modules/ramda/src/type.js","webpack://Ae/./node_modules/ramda/src/pluck.js","webpack://Ae/./node_modules/ramda/src/internal/_dispatchable.js","webpack://Ae/./node_modules/ramda/src/internal/_xfBase.js","webpack://Ae/external {\"commonjs\":\"tweetnacl\",\"commonjs2\":\"tweetnacl\"}","webpack://Ae/./node_modules/ramda/src/mapObjIndexed.js","webpack://Ae/./es/accounts.js","webpack://Ae/./es/tx/index.js","webpack://Ae/./es/chain/index.js","webpack://Ae/./es/ae/aens.js","webpack://Ae/./es/contract/index.js","webpack://Ae/./node_modules/ramda/src/prop.js","webpack://Ae/./node_modules/ramda/src/last.js","webpack://Ae/external {\"commonjs\":\"rlp\",\"commonjs2\":\"rlp\"}","webpack://Ae/./node_modules/ramda/src/internal/_reduce.js","webpack://Ae/./node_modules/ramda/src/internal/_curry3.js","webpack://Ae/./node_modules/ramda/src/reject.js","webpack://Ae/./es/account/memory.js","webpack://Ae/./node_modules/ramda/src/isNil.js","webpack://Ae/./node_modules/ramda/src/values.js","webpack://Ae/./node_modules/ramda/src/pick.js","webpack://Ae/./node_modules/ramda/src/internal/_includes.js","webpack://Ae/./node_modules/ramda/src/internal/_isPlaceholder.js","webpack://Ae/./node_modules/ramda/src/curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_arity.js","webpack://Ae/./es/account/selector.js","webpack://Ae/./es/tx/validator.js","webpack://Ae/./es/contract/aci/helpers.js","webpack://Ae/./es/contract/aci/index.js","webpack://Ae/./es/utils/swagger.js","webpack://Ae/./es/node.js","webpack://Ae/./es/utils/http.js","webpack://Ae/./es/contract/compiler.js","webpack://Ae/./node_modules/ramda/src/flatten.js","webpack://Ae/./es/oracle/index.js","webpack://Ae/./es/utils/semver-satisfies.js","webpack://Ae/./es/contract/aci/transformation.js","webpack://Ae/external {\"commonjs\":\"@aeternity/bip39\",\"commonjs2\":\"@aeternity/bip39\"}","webpack://Ae/./node_modules/ramda/src/internal/_curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_isArray.js","webpack://Ae/./node_modules/ramda/src/invoker.js","webpack://Ae/./node_modules/ramda/src/flip.js","webpack://Ae/./node_modules/ramda/src/curry.js","webpack://Ae/external {\"commonjs\":\"bs58check\",\"commonjs2\":\"bs58check\"}","webpack://Ae/./es/utils/mptree.js","webpack://Ae/./node_modules/ramda/src/toUpper.js","webpack://Ae/./node_modules/ramda/src/defaultTo.js","webpack://Ae/./node_modules/ramda/src/toPairs.js","webpack://Ae/./node_modules/ramda/src/mergeDeepRight.js","webpack://Ae/./node_modules/ramda/src/groupBy.js","webpack://Ae/./node_modules/ramda/src/identity.js","webpack://Ae/./node_modules/ramda/src/indexBy.js","webpack://Ae/external {\"commonjs\":\"tweetnacl-auth\",\"commonjs2\":\"tweetnacl-auth\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Ae/./node_modules/ramda/src/internal/_includesWith.js","webpack://Ae/./node_modules/ramda/src/internal/_objectIs.js","webpack://Ae/./node_modules/ramda/src/internal/_isObject.js","webpack://Ae/./node_modules/ramda/src/internal/_isArrayLike.js","webpack://Ae/./node_modules/ramda/src/internal/_isString.js","webpack://Ae/./node_modules/ramda/src/internal/_map.js","webpack://Ae/./node_modules/ramda/src/internal/_objectAssign.js","webpack://Ae/./node_modules/ramda/src/nth.js","webpack://Ae/./node_modules/ramda/src/internal/_checkForMethod.js","webpack://Ae/./node_modules/ramda/src/reduceBy.js","webpack://Ae/./node_modules/ramda/src/slice.js","webpack://Ae/./node_modules/ramda/src/internal/_reduced.js","webpack://Ae/./es/utils/hd-wallet.js","webpack://Ae/external {\"commonjs\":\"blakejs\",\"commonjs2\":\"blakejs\"}","webpack://Ae/external {\"commonjs\":\"aes-js\",\"commonjs2\":\"aes-js\"}","webpack://Ae/external {\"commonjs\":\"sha.js\",\"commonjs2\":\"sha.js\"}","webpack://Ae/./node_modules/ramda/src/without.js","webpack://Ae/./node_modules/ramda/src/uniqWith.js","webpack://Ae/./node_modules/ramda/src/identical.js","webpack://Ae/./node_modules/ramda/src/toLower.js","webpack://Ae/./node_modules/ramda/src/difference.js","webpack://Ae/./node_modules/ramda/src/mergeAll.js","webpack://Ae/./node_modules/ramda/src/assoc.js","webpack://Ae/./node_modules/ramda/src/has.js","webpack://Ae/./node_modules/ramda/src/drop.js","webpack://Ae/./node_modules/ramda/src/dropLast.js","webpack://Ae/./node_modules/ramda/src/zipObj.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toArray.js","webpack://Ae/external {\"commonjs\":\"websocket\",\"commonjs2\":\"websocket\"}","webpack://Ae/./node_modules/events/events.js","webpack://Ae/./node_modules/ramda/src/once.js","webpack://Ae/./node_modules/ramda/src/pickBy.js","webpack://Ae/./node_modules/ramda/src/reduce.js","webpack://Ae/external {\"commonjs\":\"bip32-path\",\"commonjs2\":\"bip32-path\"}","webpack://Ae/./node_modules/uuid/v4.js","webpack://Ae/./node_modules/ramda/src/call.js","webpack://Ae/./node_modules/ramda/src/find.js","webpack://Ae/(webpack)/buildin/global.js","webpack://Ae/./node_modules/base64-js/index.js","webpack://Ae/./node_modules/ieee754/index.js","webpack://Ae/./node_modules/isarray/index.js","webpack://Ae/./node_modules/regenerator-runtime/runtime.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Ae/./node_modules/process/browser.js","webpack://Ae/./node_modules/ramda/src/internal/_indexOf.js","webpack://Ae/./node_modules/ramda/src/equals.js","webpack://Ae/./node_modules/ramda/src/internal/_equals.js","webpack://Ae/./node_modules/ramda/src/internal/_arrayFromIterator.js","webpack://Ae/./node_modules/ramda/src/internal/_functionName.js","webpack://Ae/./node_modules/ramda/src/internal/_isArguments.js","webpack://Ae/./node_modules/ramda/src/internal/_complement.js","webpack://Ae/./node_modules/ramda/src/filter.js","webpack://Ae/./node_modules/ramda/src/internal/_isTransformer.js","webpack://Ae/./node_modules/ramda/src/internal/_filter.js","webpack://Ae/./node_modules/ramda/src/internal/_xwrap.js","webpack://Ae/./node_modules/ramda/src/bind.js","webpack://Ae/./node_modules/ramda/src/internal/_xfilter.js","webpack://Ae/./node_modules/ramda/src/internal/_makeFlat.js","webpack://Ae/./node_modules/ramda/src/internal/_isFunction.js","webpack://Ae/./node_modules/ramda/src/internal/_toString.js","webpack://Ae/./node_modules/ramda/src/internal/_quote.js","webpack://Ae/./node_modules/ramda/src/internal/_toISOString.js","webpack://Ae/./node_modules/ramda/src/internal/_Set.js","webpack://Ae/./node_modules/ramda/src/mergeDeepWithKey.js","webpack://Ae/./node_modules/ramda/src/mergeWithKey.js","webpack://Ae/./node_modules/ramda/src/internal/_xreduceBy.js","webpack://Ae/./node_modules/ramda/src/map.js","webpack://Ae/./node_modules/ramda/src/internal/_xmap.js","webpack://Ae/./node_modules/ramda/src/internal/_identity.js","webpack://Ae/./node_modules/ramda/src/hasPath.js","webpack://Ae/./node_modules/ramda/src/internal/_xdrop.js","webpack://Ae/./node_modules/ramda/src/internal/_dropLast.js","webpack://Ae/./node_modules/ramda/src/take.js","webpack://Ae/./node_modules/ramda/src/internal/_xtake.js","webpack://Ae/./node_modules/ramda/src/internal/_xdropLast.js","webpack://Ae/./node_modules/uuid/lib/rng-browser.js","webpack://Ae/./node_modules/uuid/lib/bytesToUuid.js","webpack://Ae/./node_modules/ramda/src/internal/_xfind.js","webpack://Ae/./es/oracle/node.js","webpack://Ae/./es/utils/amount-formatter.js","webpack://Ae/./es/chain/node.js","webpack://Ae/./es/tx/tx.js","webpack://Ae/./es/contract/ga/helpers.js","webpack://Ae/./es/contract/ga/index.js","webpack://Ae/./es/rpc/server.js","webpack://Ae/./es/ae/wallet.js","webpack://Ae/./es/rpc/client.js","webpack://Ae/./es/ae/oracle.js","webpack://Ae/./es/ae/aepp.js","webpack://Ae/./es/channel/internal.js","webpack://Ae/./es/channel/handlers.js","webpack://Ae/./es/channel/index.js","webpack://Ae/./es/ae/universal.js","webpack://Ae/./es/index.js"],"names":["root","factory","exports","module","require","define","amd","undefined","window","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__15__","__WEBPACK_EXTERNAL_MODULE__18__","__WEBPACK_EXTERNAL_MODULE__30__","__WEBPACK_EXTERNAL_MODULE__39__","__WEBPACK_EXTERNAL_MODULE__48__","__WEBPACK_EXTERNAL_MODULE__69__","__WEBPACK_EXTERNAL_MODULE__75__","__WEBPACK_EXTERNAL_MODULE__84__","__WEBPACK_EXTERNAL_MODULE__101__","__WEBPACK_EXTERNAL_MODULE__102__","__WEBPACK_EXTERNAL_MODULE__103__","__WEBPACK_EXTERNAL_MODULE__116__","__WEBPACK_EXTERNAL_MODULE__121__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","VSN","OBJECT_TAG_SIGNED_TRANSACTION","TX_FIELD","type","prefix","TX_SCHEMA_FIELD","schema","objectId","MIN_GAS_PRICE","MAX_AUTH_FUN_GAS","TX_TYPE","account","signed","spend","nameClaim","namePreClaim","nameUpdate","nameRevoke","nameTransfer","contract","contractCreate","contractCall","contractCallResult","oracleRegister","oracleExtend","oracleQuery","oracleResponse","channelCreate","channelCloseMutual","channelCloseSolo","channelSlash","channelDeposit","channelWithdraw","channelSettle","channelOffChain","channel","channelSnapshotSolo","channelOffChainUpdateTransfer","channelOffChainUpdateDeposit","channelOffChainUpdateWithdrawal","channelOffChainCreateContract","channelOffChainCallContract","proofOfInclusion","stateTrees","merklePatriciaTree","merklePatriciaTreeValue","contractsTree","contractCallsTree","channelsTree","nameserviceTree","oraclesTree","accountsTree","gaAttach","gaMeta","sophiaByteCode","VM_VERSIONS","ABI_VERSIONS","NO_ABI","SOPHIA","SOLIDITY","PROTOCOL_VM_ABI","1","_VM_ABI_MAP_ROMA","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","vmVersion","abiVersion","2","_VM_ABI_MAP_MINERVA","3","_VM_ABI_MAP_FORTUNA","OBJECT_ID_TX_TYPE","_OBJECT_ID_TX_TYPE","FIELD_TYPES","int","id","ids","string","binary","rlpBinary","rlpBinaries","rawBinary","bool","hex","signatures","pointers","offChainUpdates","callStack","mptree","callReturnType","ctVersion","sophiaCodeTypeInfo","payload","DEFAULT_FEE","TX_FEE_BASE_GAS","txType","BigNumber","TX_FEE_OTHER_GAS","_ref3","txSize","relativeTtl","times","plus","Math","ceil","floor","PREFIX_ID_TAG","ak","nm","cm","ok","ct","ch","ID_TAG_PREFIX","entries","reduce","acc","_ref","_ref2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","VALIDATION_ERROR","msg","VALIDATION_MESSAGE","_VALIDATION_MESSAGE","_ref4","isMinusValue","concat","_ref5","_ref6","_ref7","_ref8","_ref9","BASE_TX","ACCOUNT_TX","CONTRACT_BYTE_CODE_MINERVA","CONTRACT_BYTE_CODE_ROMA","ACCOUNT_TX_2","SPEND_TX","SIGNED_TX","NAME_PRE_CLAIM_TX","NAME_CLAIM_TX","NAME_UPDATE_TX","NAME_TRANSFER_TX","NAME_REVOKE_TX","CONTRACT_TX","GA_ATTACH_TX","GA_META_TX","CONTRACT_CREATE_TX","CONTRACT_CALL_TX","CONTRACT_CALL_RESULT_TX","ORACLE_REGISTER_TX","ORACLE_EXTEND_TX","ORACLE_QUERY_TX","ORACLE_RESPOND_TX","CHANNEL_CREATE_TX","CHANNEL_DEPOSIT_TX","CHANNEL_WITHDRAW_TX","CHANNEL_CLOSE_MUTUAL_TX","CHANNEL_CLOSE_SOLO_TX","CHANNEL_SLASH_TX","CHANNEL_SETTLE_TX","CHANNEL_OFFCHAIN_TX","CHANNEL_OFFCHAIN_TX_2","CHANNEL_TX","CHANNEL_TX_2","CHANNEL_SNAPSHOT_SOLO_TX","CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX","CHANNEL_OFFCHAIN_CALL_CONTRACT_TX","CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX","CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX","CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX","PROOF_OF_INCLUSION_TX","mptrees","STATE_TREES_TX","MERKLE_PATRICIA_TREE_TX","MERKLE_PATRICIA_TREE_VALUE_TX","CONTRACTS_TREE_TX","CONTRACT_CALLS_TREE_TX","CHANNELS_TREE_TX","NAMESERVICE_TREE_TX","ORACLES_TREE_TX","ACCOUNTS_TREE_TX","TX_SERIALIZATION_SCHEMA","_TX_SERIALIZATION_SCH","TX_DESERIALIZATION_SCHEMA","_TX_DESERIALIZATION_S","ERROR_TYPE","VERIFICATION_FIELD","verificationFn","VALIDATORS","ERRORS","invalidSignature","txKey","insufficientFee","expiredTTL","insufficientBalanceForAmountFee","insufficientBalanceForAmount","nonceUsed","nonceHigh","minGasPrice","vmAndAbiVersion","SIGNATURE_VERIFICATION_SCHEMA","CONTRACT_VERIFICATION_SCHEMA","_ref10","consensusProtocolVersion","JSON","stringify","BASE_VERIFICATION_SCHEMA","_ref11","minFee","_ref12","height","_ref13","balance","_ref14","_ref15","accountNonce","_ref16","_objectAssign","merge","_curry2","Ecb","aesjs","ModeOfOperation","ecb","isBase64","str","index","length","match","indexOf","slice","ADDRESS_FORMAT","sophia","api","raw","formatAddress","format","address","decodeNode","toString","isAddressValid","isValid","decodeBase58Check","assertedType","e","addressToHex","base58CheckAddress","addressFromDecimal","decimalAddress","aeEncodeKey","toBytes","hash","input","Buffer","from","blake2b","nameId","buf","allocUnsafe","fill","labels","split","sha256hash","shajs","update","digest","salt","random","Number","MAX_SAFE_INTEGER","encodeBase64Check","buffer","checksum","checkSumFn","decodeBase64Check","newChecksum","equals","decodeRaw","Error","encodeBase58Check","bs58check","encode","decode","hexStringToByte","Uint8Array","a","len","push","parseInt","substr","encodeUnsigned","writeUInt32BE","findIndex","encodeContractAddress","owner","nonce","publicKey","generateKeyPairFromSecret","secret","nacl","sign","keyPair","fromSecretKey","generateKeyPair","publicBuffer","secretBuffer","secretKey","encryptPublicKey","password","binaryKey","encryptKey","rightPad","encryptPrivateKey","leftPad","binaryData","hashedPasswordBytes","encrypt","decryptKey","encrypted","encryptedBytes","aesEcb","decrypt","data","privateKey","detached","verify","signature","prepareTx","personalMessageToBinary","message","signPersonalMessage","verifyPersonalMessage","pubKeyAddress","generateSaveWallet","keys","decryptPrivateKey","decryptPubKey","forceError","RegExp","test","decodeTx","txHash","RLP","encodeTx","txData","encodedTx","isValidKeypair","envKeypair","env","force","keypair","rlp","OBJECT_TAGS","CHANNEL_OFFCHAIN_UPDATE_TRANSFER","objectTag","tag","pretty","entry","find","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","readInt","readIntBE","readId","4","5","6","readUIntBE","readSignatures","deserializeOffChainUpdate","opts","prettyTags","version","assign","to","amount","readOffChainTXUpdates","updates","deserialize","tx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","ttl","fee","channelId","round","state","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","head","nth","createSalt","base64Types","buildContractId","ownerId","ownerIdAndNonce","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default","buildHash","oracleQueryId","senderId","oracleId","val","nonceBE","alloc","formatSalt","padStart","commitmentHash","_x","_commitmentHash","_callee","_args","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","abrupt","stop","includes","writeId","hashId","idTag","writeInt","buildPointers","map","readPointers","__webpack_exports__","ORACLE_TTL_TYPES","delta","block","getOracleRelativeTtl","params","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","_ref8$1$value","calculateMinFee","_ref11$gas","gas","multiplier","actualFee","buildFee","_objectSpread","expected","eq","buildTx","rlpEncoded","calculateFee","_ref13$gas","_ref13$showWarning","showWarning","console","warn","gt","validateParams","_ref14$excludeKeys","excludeKeys","filter","_ref17","_ref18","assert","valid","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default","isNaN","isBigNumber","lt","gte","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default","Array","isArray","validateField","buildRawTx","_ref19$excludeKeys","oracleTtlType","oracleTtlValue","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","transformParams","_ref20","_ref22","_ref23","fieldType","mpt","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","serializeField","unpackRawTx","_ref24","_ref25","_value","vm","abi","unpackTx","v","funHash","fnName","argType","outType","deserializeField","_ref26","_ref26$excludeKeys","_ref26$prefix","txObject","fromRlpBinary","objId","vsn","buildTxHash","rawTx","_curry1","_isPlaceholder","f2","b","_b","_a","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof2","iterator","constructor","_typeof","f1","bigNumberToByteArray","bignumber_js__WEBPACK_IMPORTED_MODULE_0__","inputBuffer","fillArray","x","hexString","big","isInteger","options","opt","gaId","authFun","ramda_src_merge__WEBPACK_IMPORTED_MODULE_2___default","Ae","defaults","t0","t1","sent","getAccount","contractId","signUsingGA","t2","signTransaction","sendTransaction","_callee2","authData","_args2","_context2","createMetaTx","_callee3","recipientId","spendTx","_args3","_context3","t3","t4","t5","t6","t7","send","_callee4","percentage","requestTransferAmount","_TxBuilder$unpackTx","_args4","_context4","excludeFee","t8","t9","t10","t11","t12","TxBuilder","minus","t13","t14","t15","t16","t17","t18","t19","t20","stampit","Tx","Account","Chain","methods","transferFunds","destroyInstance","_this","forEach","deepProps","deepConfiguration","prepareNodeObject","node","instance","url","internalUrl","networkId","nodeNetworkId","_init","NodePool","AsyncInit","compose","init","asyncToGenerator_default","regenerator_default","mark","_ref$nodes","nodes","_ref$url","_ref$internalUrl","pool","Map","validateNodes","set","selectNode","Node","addNode","propertyDescriptors","currentNode","getterForCurrentNode","selectedNode","nodeInstance","select","has","getNetworkId","isNodeConnected","getNodeInfo","getNodesInPool","slicedToArray_default","nodeProps","typeof_default","k","prop","props","asyncInit","stamp","initializers","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default","ret","_x2","deepConf","composers","composables","ramda_src_without__WEBPACK_IMPORTED_MODULE_4___default","ramda_src_uniqWith__WEBPACK_IMPORTED_MODULE_3___default","ramda_src_identical__WEBPACK_IMPORTED_MODULE_2___default","ramda_src_flatten__WEBPACK_IMPORTED_MODULE_1___default","ramda_src_path__WEBPACK_IMPORTED_MODULE_0___default","snakeToPascal","replace","ramda_src_toUpper__WEBPACK_IMPORTED_MODULE_1___default","pascalToSnake","ramda_src_toLower__WEBPACK_IMPORTED_MODULE_0___default","isHex","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","encodingOrOffset","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","y","list","pos","swap16","swap32","swap64","inspect","max","join","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","_has","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","idx","nIdx","ks","checkArgsLength","path","paths","DEFAULT_NETWORK_ID","rlpBinaryTx","txWithNetworkId","Crypto","required","result","_decodedError","decodedError","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","returnValue","ramda_src_merge__WEBPACK_IMPORTED_MODULE_3___default","contractDecodeDataAPI","source","contractEncodeCallDataAPI","callValue","callResult","contractDecodeCallResultAPI","top","_ref$options","callerId","dryRunAmount","dryRunAccount","_results","_results$","status","callObj","reason","returnType","onAccount","pub","getKeyBlock","contractEncodeCall","callData","contractCallTx","pubKey","txDryRun","results","handleCallError","contractDecodeData","_callee5","_this2","_args5","_context5","getTxInfo","_callee8","initState","_this3","_args8","_context8","contractCreateTx","freeze","transaction","_call","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default","_callee6","_args6","_context6","_x19","callStatic","_callStatic","_callee7","_args7","_context7","contractCallStatic","_x20","createdAt","Date","_callee11","bytecode","_this4","_args11","_context11","compileContractAPI","encodeCall","_encodeCall","_callee9","_context9","_x21","_x22","deploy","_deploy","_callee10","_args10","_context10","contractDeploy","_x23","ContractAPI","ContractBase","ContractACI","contractCompile","deposit","gasPrice","Contract","ContractWithCompiler","ContractCompilerAPI","fromPairs","pairs","_includes","invoker","_toString","at","text","_options","escapee","number","white","gap","indent","rep","escapable","meta","\b","\t","\n","\f","\r","\"","\\","quote","lastIndex","replacer","space","holder","partial","mind","","parse","strict","storeAsString","/","f","charAt","uffff","word","reviver","walk","pluck","_isArray","_isTransformer","methodNames","xf","pop","transducer","_reduce","mapObjIndexed","accounts","selectAccount","Accounts","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_ref$accounts","ramda_src_fromPairs__WEBPACK_IMPORTED_MODULE_1___default","all","_x5","process","MemoryAccount","Selector","addAccount","_acc","_x4","signWith","removeAccount","setKeypair","priv","setSecret","addresses","_stamp_it__WEBPACK_IMPORTED_MODULE_0__","_stamp_it__WEBPACK_IMPORTED_MODULE_0___default","_stamp_required__WEBPACK_IMPORTED_MODULE_1__","namePreclaimTx","nameClaimTx","nameTransferTx","nameUpdateTx","nameRevokeTx","oracleRegisterTx","oracleExtendTx","oraclePostQueryTx","oracleRespondTx","getAccountNonce","channelCloseSoloTx","channelSlashTx","channelSettleTx","channelSnapshotSoloTx","gaAttachTx","getVmVersion","prepareTxParams","_oracle__WEBPACK_IMPORTED_MODULE_0__","Oracle","waitMined","statics","awaitHeight","topBlock","poll","mempool","accountId","classify","klass","getName","_update2","aensUpdate","aensQuery","_x10","_x11","transfer","_transfer2","aensTransfer","_x12","_x13","revoke","_revoke2","aensRevoke","_x14","claimTx","nameSalt","_salt","preclaimTx","_args9","commitmentId","claim","aensClaim","Aens","aensPreclaim","clientTtl","nameTtl","contractGetACI","setCompilerUrl","getCompilerVersion","last","_isArrayLike","_xwrap","_iterableReduce","iter","step","_methodReduce","methodName","symIterator","_arrayReduce","f3","_c","_complement","pred","filterable","secrets","WeakMap","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","pubBuffer","validateKeyPair","isNil","values","vals","pick","names","_indexOf","_arity","_curryN","curryN","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","ownerPublicKey","_ref$networkId","lte","_ref4$amount","_ref5$amount","supportedProtocol","txProtocol","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_4___default","resolveDataForBase","chain","accountBalance","getAccountByPubkey","log","getCurrentKeyBlockHeight","verifySchema","validatorKey","_ref16$","_unpackTx","unpackedTx","_unpackedTx$encodedTx","_txType","rlpEncodedTx","verifyTx","validation","getOwnerPublicKey","resolvedData","signatureVerification","baseVerification","customVerification","TransactionValidator","unpackAndVerify","getFunctionACI","aci","functions","bindings","typedef","type_defs","contractName","buildContractMethods","_getFunctionACI","aciArgs","_parseArguments","parseArguments","stateful","defineProperty_default","_parseArguments2","_parseArguments3","_parseArguments4","last_default","prepareArgsForEncode","validateArguments","transform","_x6","contractAddress","defaultOptions","skipArgsConvert","skipTransformDecoded","interface","defaultTo_default","prop_default","path_default","compiled","deployInfo","merge_default","compilerVersion","setOptions","compile","client","fnACI","aci_objectSpread","transformDecodedData","returns","decodedResult","getContractInstance","expandPath","replacements","toPairs_default","lookupType","spec","types","conformTypes","integer","type_default","enum","contains_default","join_default","properties","pascalizeKeys","missing","difference_default","keys_default","mapObjIndexed_default","extendingErrorPath","conform","reject_default","isNil_default","pick_default","items","$ref","allOf","mergeAll_default","conformDispatch","httpConfig","headers","Content-Type","transformResponse","JsonBig","transformRequest","httpClients","config","axios","mergeDeepRight_default","post","classifyParameters","parameters","_R$groupBy","groupBy_default","req","_R$groupBy2","query","body","pathArgs","pluck_default","queryArgs","bodyArgs","pascalizeParameters","assoc_default","traverseKeys","curry_default","fromPairs_default","identity_default","snakizeKeys","operationSignature","assertOne","coll","head_default","destructureClientError","_error$config","method","_error$response","response","has_default","toString_default","toUpperCase","Swagger","_ref7$swag","swag","axiosConfig","definitions","indexBy_default","flatten_default","values_default","definition","errorHandler","operationId","description","drop_default","pascalized","_classifyParameters","optNames","indexedParameters","conformed","expandedPath","_arguments","dropLast_default","debug","zipObj_default","axiosError","fullResponse","defineProperties","operation","op","urlFor","basePath","txEncoding","debugSwagger","remoteSwag","loader","tags","protocols","_protocols$reduce","getCurrentKeyBlock","effectiveAtHeight","_init2","_ref2$url","_ref2$internalUrl","_ref2$axiosConfig","_x3","handler","getConsensusProtocolVersion","_ref3$forceCompatibil","forceCompatibility","revision","genesisHash","getStatus","nodeRevision","genesisKeyBlockHash","semverSatisfies","NODE_GE_VERSION","NODE_LT_VERSION","processResponse","baseUrl","put","statusText","Http","changeBaseUrl","newUrl","delete","http","isInit","function","calldata","call-result","call-value","sophia-type","checkCompatibility","COMPILER_GE_VERSION","COMPILER_LT_VERSION","_ref$compilerUrl","compilerUrl","_x17","contractDecodeCallDataByCodeAPI","contractDecodeCallDataBySourceAPI","flatten","_makeFlat","_stamp_required__WEBPACK_IMPORTED_MODULE_0__","_stamp_it__WEBPACK_IMPORTED_MODULE_1__","OracleBase","getOracle","getOracleQueries","getOracleQuery","geVersion","ltVersion","versionComponents","geComponents","ltComponents","base","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","toNumber","components","reverse","vNumber","geNumber","ltNumber","SOPHIA_TYPES","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default","linkTypeDefs","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3___default","typeDef","aciType","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default","vars","_Object$entries","_Object$entries2","_Object$entries2$","baseType","generic","_Object$entries3","_Object$entries4","_Object$entries4$","varianValue","variant","el","_Object$entries$","injectVars","readType","_Object$entries5","_Object$entries6","_Object$entries6$","_transform","_readType3","optionV","tuple","option","record","_x9","_ref21","transformMap","transformVariant","_ref25$","variantArgs","_Object$entries11","_Object$entries12","_Object$entries12$","_x15","_x16","_x7","_x8","_transformMap","_ref28","_ref27","_ref29","_x18","_ref12$skipTransformD","addressPrefix","_readType","_generic","keyT","valueT","_Object$entries7","_Object$entries8","_Object$entries8$","variantType","genericMap","getJoiErrorMsg","errors","context","label","JoiBinary","Joi","extend","joi","any","pre","convert","rules","validate","createError","validationSchema","ordered","_ref19","prepareSchema","_Joi$string","_Joi$object","_readType2","alternatives","_Object$entries9","_Object$entries10","_Object$entries10$","g","or","regex","bufferCheck","abortEarly","received","combined","argsIdx","left","combinedIdx","_isFunction","arity","flip","curry","rootHash","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","serialize","tree","mptHash","toUpper","defaultTo","toPairs","mergeDeepWithKey","mergeDeepRight","lObj","rObj","lVal","rVal","_checkForMethod","groupBy","reduceBy","identity","indexBy","elem","is","_isString","nodeType","functor","output","nextKey","methodname","_dispatchable","valueFn","valueAcc","keyFn","elt","_curry3","fromIndex","toIndex","@@transducer/value","@@transducer/reduced","tweetnacl__WEBPACK_IMPORTED_MODULE_0__","tweetnacl__WEBPACK_IMPORTED_MODULE_0___default","tweetnacl_auth__WEBPACK_IMPORTED_MODULE_1__","bip32_path__WEBPACK_IMPORTED_MODULE_2__","_aeternity_bip39__WEBPACK_IMPORTED_MODULE_3__","_crypto__WEBPACK_IMPORTED_MODULE_4__","ED25519_CURVE","HARDENED_OFFSET","derivePathFromKey","segments","toPathArray","segment","parentKey","deriveChild","getMasterKeyFromSeed","seed","I","hmac","chainCode","indexBuffer","getSaveHDWalletAccounts","saveHDWallet","accountCount","walletKey","_","formatAccount","fromSeed","generateSaveHDWallet","mnemonic","validateMnemonic","masterKey","derivePathFromSeed","mnemonicToSeed","generateMnemonic","genMnemonic","without","xs","_includesWith","uniqWith","_objectIs","identical","toLower","_Set","difference","first","second","firstLen","secondLen","toFilterOut","add","mergeAll","assoc","hasPath","_xdrop","drop","_dropLast","dropLast","zipObj","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","_addListener","listener","prepend","events","existing","warning","newListener","emit","unshift","warned","w","emitter","count","_onceWrap","fired","wrapFn","wrapped","removeListener","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","on","prependListener","once","prependOnceListener","position","originalListener","shift","spliceOne","off","removeAllListeners","rawListeners","eventNames","called","pickBy","rng","bytesToUuid","rnds","ii","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","async","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","_n","_d","_e","_s","_i","arr2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","versions","binding","cwd","chdir","umask","inf","_equals","_arrayFromIterator","_functionName","_uniqContentEquals","aIterator","bIterator","stackA","stackB","aItem","typeA","valueOf","ignoreCase","multiline","sticky","unicode","keysA","extendedStackA","extendedStackB","_filter","_isObject","_xfilter","XWrap","thisObj","_xfBase","XFilter","recursive","flatt","jlen","ilen","_map","_quote","_toISOString","seen","recur","mapPairs","sort","repr","pad","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","bIdx","mergeWithKey","XReduceBy","inputs","_xreduceBy","_xmap","XMap","_path","XDrop","take","_xtake","_reduced","XTake","XDropLast","full","store","_xdropLast","getRandomValues","crypto","msCrypto","rnds8","byteToHex","bth","XFind","_xfind","getOracleByPubkey","getOracleQueriesByPubkey","queryId","getOracleQueryByPubkeyAndQueryId","OracleNodeAPI","prefixes","magnitude","amount_formatter","exponent","shiftedBy","precision","_R$merge","verifyTxBeforeSend","errorData","postTransaction","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","_ref5$format","formatBalance","getTransactionByHash","pause","duration","h","_ref7$interval","interval","_ref7$attempts","attempts","probe","_probe","current","getTopBlock","th","_ref10$blocks","blocks","_ref10$interval","_probe2","blockHeight","_callee12","_context12","getTransactionInfoByHash","callInfo","_callee13","_context13","getPendingTransactions","_callee14","_context14","getCurrentGeneration","_callee15","hashOrHeight","_context15","getGenerationByHash","getGenerationByHeight","_callee16","_context16","getMicroBlockTransactionsByHash","transactions","_callee17","_context17","getKeyBlockByHash","getKeyBlockByHeight","_callee18","_context18","getMicroBlockHeaderByHash","_callee19","txs","_context19","dryRunTxs","_callee20","_context20","getContractCode","_callee21","_context21","getNameEntryByName","ChainNode","_ref$verifyTx","getGeneration","getMicroBlockHeader","getMicroBlockTransactions","getContractByteCode","_ref$payload","tx_objectSpread","nativeMode","postSpend","postNamePreclaim","postNameClaim","postNameTransfer","_ref30","postNameUpdate","_ref31","_ref32","postNameRevoke","_ref7$gasPrice","_ref33","postContractCreate","_ref8$gasPrice","_ref34","_ref35","postContractCall","queryFormat","responseFormat","queryFee","oracleTtl","_this$getVmVersion","_ref36","_ref37","postOracleRegister","_ref38","_ref39","postOracleExtend","responseTtl","queryTtl","_ref40","_ref41","postOracleQuery","_ref42","_ref43","_args12","postOracleRespond","fromId","poi","_ref44","_ref45","_args13","postChannelCloseSolo","_ref46","_ref47","_args14","postChannelSlash","initiatorAmountFinal","responderAmountFinal","_ref48","_ref49","_args15","postChannelSettle","_ref50","_ref51","_args16","postChannelSnapshotSolo","_ref17$gasPrice","_ref52","_args17","calculateTtl","relative","_ref53","_args18","_ref54","absoluteTtl","_args20","Transaction","_ref20$nativeMode","_ref20$showWarning","protocolForTX","prepareGaParams","ins","authFnName","authCallData","getContractAuthFan","typeInfo","wrapInEmptySignedTx","GeneralizeAccount","createGeneralizeAccount","isGA","gaContractId","rawTransaction","_wrapInEmptySignedTx","_buildTx","metaTxRlp","_wrapInEmptySignedTx2","ga_objectSpread","origin","session","jsonrpc","call_default","rpcMethods","rpcSessions","server_objectSpread","postMessage","RpcServer","_ref2$self","receive","addEventListener","destroyServer","removeEventListener","createSession","uuid","hello","flip_default","handlers","Rpc","deepProperties","_R$find","find_default","Wallet","_ref3$onTx","onTx","_ref3$onChain","onChain","_ref3$onAccount","_ref3$onContract","onContract","toConsumableArray_default","rpc","RpcClient","_ref$parent","parent","_ref$self","sequence","callbacks","_data$result","destroyClient","_len","_key","getOracleObject","oracle","queries","oracleQueries","oracle_objectSpread","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","_getQuery","getQueryObject","respond","pollForResponse","pollForQueryResponse","_ref$attempts","_ref$interval","emptyResponse","_pause","registerOracle","_pollForQueryResponse","Aepp","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","rpcCallbacks","pingTimeoutId","pongTimeoutId","channelURL","paramString","encodeURIComponent","_eventEmitters$get","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","JSONBig","enqueueAction","guard","action","locked","handleMessage","_fsm$get","dequeueMessage","_queue","toArray_default","ping","disconnect","onMessage","callback","channel_id","_ref2$","details","wrapCallErrorMessage","close","WebSocket","fireOnce","once_default","original","ws","W3CWebSocket","initialize","channelOptions","optionsKeys","wsUrl","pickBy_default","internal_objectSpread","protocol","awaitingConnection","onopen","onclose","onmessage","encodeRlpTx","appendSignature","signFn","_unpackTx$tx","signedTx","handleUnexpectedMessage","wsMessage","channelOpen","event","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","channelClosed","_awaitingChannelCreateTx","_signedTx","role","awaitingOnChainTx","signed_tx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","_channelOpen","awaitingTxSignRequest","awaitingOffChainTx","_awaitingOffChainTx","_signedTx2","_message$error$data","awaitingOffChainUpdate","accepted","_awaitingTxSignRequest","_signedTx3","awaitingUpdateConflict","awaitingShutdownTx","_awaitingShutdownTx","_signedTx4","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","_awaitingWithdrawTx","_signedTx5","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","_awaitingDepositTx","_signedTx6","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","_x24","_x25","_x26","_awaitingNewContractTx","_signedTx7","awaitingNewContractCompletion","awaitingCallContractUpdateTx","_x27","_x28","_x29","_awaitingCallContractUpdateTx","_signedTx8","awaitingCallContractCompletion","awaitingCallsPruned","channels","snakeToPascalObjKeys","channel_objectSpread","contracts","reduce_default","call_data","contract_id","abi_version","caller","caller_id","pubkey","Channel","channelStatus","balances","leave","shutdown","sendMessage","recipient","withdraw","_this5","createContract","_this6","vm_version","callContract","_this7","callContractStatic","getContractCall","getContractState","channelDisconnect","cleanContractCalls","_this8","Universal","es_account","es_accounts","ae","aens","aepp","ae_contract","compiler","chain_node","es_channel","utils_crypto","ga","hd_wallet","memory","es_node","node_pool","ae_oracle","selector","tx_tx","validator","es_tx","builder","helpers","universal","wallet"],"mappings":"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","file":"aepp-sdk.browser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@stamp/required\"), require(\"bignumber.js\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , , , , , , , , , , , , , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"@stamp/required\"), require(\"bignumber.js\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__18__, __WEBPACK_EXTERNAL_MODULE__30__, __WEBPACK_EXTERNAL_MODULE__39__, __WEBPACK_EXTERNAL_MODULE__48__, __WEBPACK_EXTERNAL_MODULE__69__, __WEBPACK_EXTERNAL_MODULE__75__, __WEBPACK_EXTERNAL_MODULE__84__, __WEBPACK_EXTERNAL_MODULE__101__, __WEBPACK_EXTERNAL_MODULE__102__, __WEBPACK_EXTERNAL_MODULE__103__, __WEBPACK_EXTERNAL_MODULE__116__, __WEBPACK_EXTERNAL_MODULE__121__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 168);\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","/**\n * Transaction Schema for TxBuilder\n * @module @aeternity/aepp-sdk/es/tx/builder/schema\n * @export TxSchema\n * @example import TxSchema from '@aeternity/aepp-sdk/es/tx/builder/schema'\n */\n/* eslint-disable no-unused-vars */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js'\n\nexport const VSN = 1\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\n// # OBJECT tags\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\nconst OBJECT_TAG_ACCOUNT = 10\nexport const OBJECT_TAG_SIGNED_TRANSACTION = 11\nconst OBJECT_TAG_SPEND_TRANSACTION = 12\nconst OBJECT_TAG_ORACLE_REGISTER_TRANSACTION = 22\nconst OBJECT_TAG_ORACLE_QUERY_TRANSACTION = 23\nconst OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION = 24\nconst OBJECT_TAG_ORACLE_EXTEND_TRANSACTION = 25\nconst OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION = 32\nconst OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION = 33\nconst OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION = 34\nconst OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION = 35\nconst OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION = 36\nconst OBJECT_TAG_CONTRACT = 40\nconst OBJECT_TAG_CONTRACT_CALL = 41\nconst OBJECT_TAG_CONTRACT_CREATE_TRANSACTION = 42\nconst OBJECT_TAG_CONTRACT_CALL_TRANSACTION = 43\nconst OBJECT_TAG_CHANNEL_CREATE_TX = 50\nconst OBJECT_TAG_CHANNEL_DEPOSIT_TX = 51\nconst OBJECT_TAG_CHANNEL_WITHRAW_TX = 52\nconst OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX = 53\nconst OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX = 54\nconst OBJECT_TAG_CHANNEL_SLASH_TX = 55\nconst OBJECT_TAG_CHANNEL_SETTLE_TX = 56\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_TX = 57\nconst OBJECT_TAG_CHANNEL = 58\nconst OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX = 59\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = 570\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = 571\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = 572\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = 573\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = 574\nconst OBJECT_TAG_PROOF_OF_INCLUSION = 60\nconst OBJECT_TAG_STATE_TREES = 62\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE = 63\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE = 64\nconst OBJECT_TAG_CONTRACTS_TREE = 621\nconst OBJECT_TAG_CONTRACT_CALLS_TREE = 622\nconst OBJECT_TAG_CHANNELS_TREE = 623\nconst OBJECT_TAG_NAMESERVICE_TREE = 624\nconst OBJECT_TAG_ORACLES_TREE = 625\nconst OBJECT_TAG_ACCOUNTS_TREE = 626\nconst OBJECT_TAG_GA_ATTACH = 80\nconst OBJECT_TAG_GA_META = 81\nconst OBJECT_TAG_SOPHIA_BYTE_CODE = 70\n\nconst TX_FIELD = (name, type, prefix) => [name, type, prefix]\nconst TX_SCHEMA_FIELD = (schema, objectId) => [schema, objectId]\n\nexport const MIN_GAS_PRICE = 1000000000 // min gasPrice 1e9\nexport const MAX_AUTH_FUN_GAS = 50000 // min gasPrice 1e9\n\nconst revertObject = (obj) => Object.entries(obj).reduce((acc, [key, v]) => (acc[v] = key) && acc, {})\n\n/**\n * @constant\n * @description Object with transaction types\n * @type {Object} TX_TYPE\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/schema\n * @property {String} signed\n * @property {String} spend\n * @property {String} nameClaim\n * @property {String} namePreClaim\n * @property {String} nameUpdate\n * @property {String} nameRevoke\n * @property {String} nameTransfer\n * @property {String} contractCreate\n * @property {String} contractCall\n * @property {String} oracleRegister\n * @property {String} oracleExtend\n * @property {String} oracleQuery\n * @property {String} oracleResponse\n */\nexport const TX_TYPE = {\n  account: 'account',\n  signed: 'signedTx',\n  spend: 'spendTx',\n  // AENS\n  nameClaim: 'nameClaimTx',\n  namePreClaim: 'namePreClaimTx',\n  nameUpdate: 'nameUpdateTx',\n  nameRevoke: 'nameRevokeTx',\n  nameTransfer: 'nameTransfer',\n  // CONTRACT\n  contract: 'contract',\n  contractCreate: 'contractCreateTx',\n  contractCall: 'contractCallTx',\n  contractCallResult: 'contractCallResult',\n  // ORACLE\n  oracleRegister: 'oracleRegister',\n  oracleExtend: 'oracleExtend',\n  oracleQuery: 'oracleQuery',\n  oracleResponse: 'oracleResponse',\n  // STATE CHANNEL\n  channelCreate: 'channelCreate',\n  channelCloseMutual: 'channelCloseMutual',\n  channelCloseSolo: 'channelCloseSolo',\n  channelSlash: 'channelSlash',\n  channelDeposit: 'channelDeposit',\n  channelWithdraw: 'channelWithdraw',\n  channelSettle: 'channelSettle',\n  channelOffChain: 'channelOffChain',\n  channel: 'channel',\n  channelSnapshotSolo: 'channelSnapshotSolo',\n  channelOffChainUpdateTransfer: 'channelOffChainUpdateTransfer',\n  channelOffChainUpdateDeposit: 'channelOffChainUpdateDeposit',\n  channelOffChainUpdateWithdrawal: 'channelOffChainUpdateWithdrawal',\n  channelOffChainCreateContract: 'channelOffChainCreateContract',\n  channelOffChainCallContract: 'channelOffChainCallContract',\n  proofOfInclusion: 'proofOfInclusion',\n  stateTrees: 'stateTrees',\n  merklePatriciaTree: 'merklePatriciaTree',\n  merklePatriciaTreeValue: 'merklePatriciaTreeValue',\n  contractsTree: 'contractsTree',\n  contractCallsTree: 'contractCallsTree',\n  channelsTree: 'channelsTree',\n  nameserviceTree: 'nameserviceTree',\n  oraclesTree: 'oraclesTree',\n  accountsTree: 'accountsTree',\n  // GA ACCOUNTS\n  gaAttach: 'gaAttach',\n  gaMeta: 'gaMeta',\n  sophiaByteCode: 'sophiaByteCode'\n}\n\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const VM_VERSIONS = {\n  NO_VM: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  SOPHIA_IMPROVEMENTS_MINERVA: 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA: 4\n}\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const ABI_VERSIONS = {\n  NO_ABI: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2\n}\n\nexport const VM_ABI_MAP_ROMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_MINERVA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA, VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_FORTUNA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const PROTOCOL_VM_ABI = {\n  // Roma\n  '1': VM_ABI_MAP_ROMA,\n  // Minerva\n  '2': VM_ABI_MAP_MINERVA,\n  // Fortuna\n  '3': VM_ABI_MAP_FORTUNA\n}\n\nexport const OBJECT_ID_TX_TYPE = {\n  [OBJECT_TAG_ACCOUNT]: TX_TYPE.account,\n  [OBJECT_TAG_SIGNED_TRANSACTION]: TX_TYPE.signed,\n  [OBJECT_TAG_SPEND_TRANSACTION]: TX_TYPE.spend,\n  // AENS\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: TX_TYPE.nameClaim,\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: TX_TYPE.namePreClaim,\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: TX_TYPE.nameUpdate,\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: TX_TYPE.nameRevoke,\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: TX_TYPE.nameTransfer,\n  // CONTRACT\n  [OBJECT_TAG_CONTRACT]: TX_TYPE.contract,\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: TX_TYPE.contractCreate,\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: TX_TYPE.contractCall,\n  [OBJECT_TAG_CONTRACT_CALL]: TX_TYPE.contractCallResult,\n  // ORACLE\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: TX_TYPE.oracleRegister,\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: TX_TYPE.oracleExtend,\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: TX_TYPE.oracleQuery,\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: TX_TYPE.oracleResponse,\n  // STATE CHANNEL\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: TX_TYPE.channelCreate,\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: TX_TYPE.channelCloseMutual,\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: TX_TYPE.channelCloseSolo,\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: TX_TYPE.channelSlash,\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: TX_TYPE.channelDeposit,\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: TX_TYPE.channelWithdraw,\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: TX_TYPE.channelSettle,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: TX_TYPE.channelOffChain,\n  [OBJECT_TAG_CHANNEL]: TX_TYPE.channel,\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: TX_TYPE.channelSnapshotSolo,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: TX_TYPE.channelOffChainUpdateTransfer,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: TX_TYPE.channelOffChainUpdateDeposit,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: TX_TYPE.channelOffChainUpdateWithdrawal,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: TX_TYPE.channelOffChainCreateContract,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: TX_TYPE.channelOffChainCallContract,\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: TX_TYPE.proofOfInclusion,\n  [OBJECT_TAG_STATE_TREES]: TX_TYPE.stateTrees,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: TX_TYPE.merklePatriciaTree,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: TX_TYPE.merklePatriciaTreeValue,\n  [OBJECT_TAG_CONTRACTS_TREE]: TX_TYPE.contractsTree,\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: TX_TYPE.contractCallsTree,\n  [OBJECT_TAG_CHANNELS_TREE]: TX_TYPE.channelsTree,\n  [OBJECT_TAG_NAMESERVICE_TREE]: TX_TYPE.nameserviceTree,\n  [OBJECT_TAG_ORACLES_TREE]: TX_TYPE.oraclesTree,\n  [OBJECT_TAG_ACCOUNTS_TREE]: TX_TYPE.accountsTree,\n  // GA Accounts\n  [OBJECT_TAG_GA_ATTACH]: TX_TYPE.gaAttach,\n  [OBJECT_TAG_GA_META]: TX_TYPE.gaMeta,\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: TX_TYPE.sophiaByteCode\n}\n\nexport const FIELD_TYPES = {\n  int: 'int',\n  id: 'id',\n  ids: 'ids',\n  string: 'string',\n  binary: 'binary',\n  rlpBinary: 'rlpBinary',\n  rlpBinaries: 'rlpBinaries',\n  rawBinary: 'rawBinary',\n  bool: 'bool',\n  hex: 'hex',\n  signatures: 'signatures',\n  pointers: 'pointers',\n  offChainUpdates: 'offChainUpdates',\n  callStack: 'callStack',\n  proofOfInclusion: 'proofOfInclusion',\n  mptree: 'mptree',\n  callReturnType: 'callReturnType',\n  ctVersion: 'ctVersion',\n  sophiaCodeTypeInfo: 'sophiaCodeTypeInfo',\n  payload: 'payload'\n}\n\n// FEE CALCULATION\nexport const BASE_GAS = 15000\nexport const GAS_PER_BYTE = 20\nexport const DEFAULT_FEE = 20000\nexport const KEY_BLOCK_INTERVAL = 3\n\n// MAP WITH FEE CALCULATION https://github.com/aeternity/protocol/blob/master/consensus/consensus.md#gas\nexport const TX_FEE_BASE_GAS = (txType) => {\n  switch (txType) {\n    // case TX_TYPE.gaMeta: // TODO investigate MetaTx calculation\n    case TX_TYPE.gaAttach:\n    case TX_TYPE.contractCreate:\n      return BigNumber(5 * BASE_GAS)\n    // Todo Implement meta tx fee calculation\n    case TX_TYPE.gaMeta:\n    case TX_TYPE.contractCall:\n      return BigNumber(30 * BASE_GAS)\n    default:\n      return BigNumber(BASE_GAS)\n  }\n}\n\nexport const TX_FEE_OTHER_GAS = (txType) => ({ txSize, relativeTtl }) => {\n  switch (txType) {\n    case TX_TYPE.oracleRegister:\n    case TX_TYPE.oracleExtend:\n    case TX_TYPE.oracleQuery:\n    case TX_TYPE.oracleResponse:\n      return BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil(32000 * relativeTtl / Math.floor(60 * 24 * 365 / KEY_BLOCK_INTERVAL))\n        )\n    default:\n      return BigNumber(txSize).times(GAS_PER_BYTE)\n  }\n}\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\nexport const PREFIX_ID_TAG = {\n  'ak': ID_TAG.account,\n  'nm': ID_TAG.name,\n  'cm': ID_TAG.commitment,\n  'ok': ID_TAG.oracle,\n  'ct': ID_TAG.contract,\n  'ch': ID_TAG.channel\n}\nexport const ID_TAG_PREFIX = revertObject(PREFIX_ID_TAG)\nconst VALIDATION_ERROR = (msg) => msg\n\nexport const VALIDATION_MESSAGE = {\n  [FIELD_TYPES.int]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.id]: ({ value, prefix }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}' or ID_TAG for prefix not found`),\n  [FIELD_TYPES.binary]: ({ prefix, value }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}'`),\n  [FIELD_TYPES.string]: ({ value }) => VALIDATION_ERROR(`Not a string`),\n  [FIELD_TYPES.pointers]: ({ value }) => VALIDATION_ERROR(`Value must be of type Array and contains only object's like '{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}'`),\n  [FIELD_TYPES.ctVersion]: ({ value }) => VALIDATION_ERROR(`Value must be an object with \"vmVersion\" and \"abiVersion\" fields`)\n}\n\nconst BASE_TX = [\n  TX_FIELD('tag', FIELD_TYPES.int),\n  TX_FIELD('VSN', FIELD_TYPES.int)\n]\n\nconst ACCOUNT_TX = [\n  ...BASE_TX,\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int)\n]\n\nexport const CONTRACT_BYTE_CODE_MINERVA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string)\n]\n\nexport const CONTRACT_BYTE_CODE_ROMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary)\n]\n\nconst ACCOUNT_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('flags', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int),\n  TX_FIELD('gaContract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gaAuthFun', FIELD_TYPES.binary, 'cb')\n]\n\nconst SPEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('payload', FIELD_TYPES.payload)\n]\n\nconst SIGNED_TX = [\n  ...BASE_TX,\n  TX_FIELD('signatures', FIELD_TYPES.signatures),\n  TX_FIELD('encodedTx', FIELD_TYPES.rlpBinary)\n]\n\nconst NAME_PRE_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('commitmentId', FIELD_TYPES.id, 'cm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_UPDATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('nameTtl', FIELD_TYPES.int),\n  TX_FIELD('pointers', FIELD_TYPES.pointers),\n  TX_FIELD('clientTtl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_REVOKE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('log', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('active', FIELD_TYPES.bool),\n  TX_FIELD('referers', FIELD_TYPES.ids, 'ak'),\n  TX_FIELD('deposit', FIELD_TYPES.int)\n]\n\nconst GA_ATTACH_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('authFun', FIELD_TYPES.rawBinary),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst GA_META_TX = [\n  ...BASE_TX,\n  TX_FIELD('gaId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('authData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('tx', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_RESULT_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('callerNonce', FIELD_TYPES.int),\n  TX_FIELD('height', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasUsed', FIELD_TYPES.int),\n  TX_FIELD('returnValue', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('returnType', FIELD_TYPES.callReturnType),\n  // TODO: add serialization for <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n  TX_FIELD('log', FIELD_TYPES.rawBinary)\n]\n\nconst ORACLE_REGISTER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryFormat', FIELD_TYPES.string),\n  TX_FIELD('responseFormat', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('abiVersion', FIELD_TYPES.int)\n]\n\nconst ORACLE_EXTEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst ORACLE_QUERY_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('query', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('queryTtlType', FIELD_TYPES.int),\n  TX_FIELD('queryTtlValue', FIELD_TYPES.int),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\nconst ORACLE_RESPOND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryId', FIELD_TYPES.binary, 'oq'),\n  TX_FIELD('response', FIELD_TYPES.string),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.string),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_WITHDRAW_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('toId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_MUTUAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SLASH_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SETTLE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('updates', FIELD_TYPES.offChainUpdates),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_OFFCHAIN_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int)\n]\n\nconst CHANNEL_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int),\n  TX_FIELD('initiatorAuth', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('responderAuth', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_SNAPSHOT_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('caller', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('contract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('callStack', FIELD_TYPES.callStack),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasLimit', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('to', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst PROOF_OF_INCLUSION_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.mptrees),\n  TX_FIELD('calls', FIELD_TYPES.mptrees),\n  TX_FIELD('channels', FIELD_TYPES.mptrees),\n  TX_FIELD('contracts', FIELD_TYPES.mptrees),\n  TX_FIELD('ns', FIELD_TYPES.mptrees),\n  TX_FIELD('oracles', FIELD_TYPES.mptrees)\n]\n\nconst STATE_TREES_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary),\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary),\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary),\n  TX_FIELD('ns', FIELD_TYPES.rlpBinary),\n  TX_FIELD('oracles', FIELD_TYPES.rlpBinary),\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nconst MERKLE_PATRICIA_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('values', FIELD_TYPES.rlpBinaries)\n]\n\nconst MERKLE_PATRICIA_TREE_VALUE_TX = [\n  ...BASE_TX,\n  TX_FIELD('key', FIELD_TYPES.hex),\n  TX_FIELD('value', FIELD_TYPES.rawBinary)\n]\n\nconst CONTRACTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CALLS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary)\n]\n\nconst CHANNELS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary)\n]\n\nconst NAMESERVICE_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('mtree', FIELD_TYPES.rlpBinary)\n]\n\nconst ORACLES_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('otree', FIELD_TYPES.rlpBinary)\n]\n\nconst ACCOUNTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nexport const TX_SERIALIZATION_SCHEMA = {\n  [TX_TYPE.account]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [TX_TYPE.signed]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [TX_TYPE.spend]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [TX_TYPE.namePreClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameUpdate]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [TX_TYPE.nameTransfer]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [TX_TYPE.nameRevoke]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [TX_TYPE.contract]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [TX_TYPE.contractCreate]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [TX_TYPE.contractCall]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [TX_TYPE.contractCallResult]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [TX_TYPE.oracleRegister]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [TX_TYPE.oracleExtend]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [TX_TYPE.oracleQuery]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [TX_TYPE.oracleResponse]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [TX_TYPE.channelCreate]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [TX_TYPE.channelCloseMutual]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [TX_TYPE.channelCloseSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [TX_TYPE.channelSlash]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [TX_TYPE.channelDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelWithdraw]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [TX_TYPE.channelSettle]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [TX_TYPE.channelOffChain]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [TX_TYPE.channel]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [TX_TYPE.channelSnapshotSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateTransfer]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateWithdrawal]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [TX_TYPE.channelOffChainCreateContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [TX_TYPE.channelOffChainCallContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [TX_TYPE.proofOfInclusion]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [TX_TYPE.stateTrees]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [TX_TYPE.merklePatriciaTree]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [TX_TYPE.merklePatriciaTreeValue]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [TX_TYPE.contractsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [TX_TYPE.contractCallsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [TX_TYPE.channelsTree]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [TX_TYPE.nameserviceTree]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [TX_TYPE.oraclesTree]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [TX_TYPE.accountsTree]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [TX_TYPE.gaAttach]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [TX_TYPE.gaMeta]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  }\n}\n\nexport const TX_DESERIALIZATION_SCHEMA = {\n  [OBJECT_TAG_ACCOUNT]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [OBJECT_TAG_SIGNED_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [OBJECT_TAG_SPEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [OBJECT_TAG_CHANNEL]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [OBJECT_TAG_STATE_TREES]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [OBJECT_TAG_CONTRACTS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [OBJECT_TAG_CHANNELS_TREE]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [OBJECT_TAG_NAMESERVICE_TREE]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [OBJECT_TAG_ORACLES_TREE]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [OBJECT_TAG_ACCOUNTS_TREE]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [OBJECT_TAG_GA_ATTACH]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [OBJECT_TAG_GA_META]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  },\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_ROMA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    2: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_MINERVA, OBJECT_TAG_SOPHIA_BYTE_CODE)\n  }\n}\n\n// VERIFICATION SCHEMA\n\nconst ERROR_TYPE = { ERROR: 'error', WARNING: 'warning' }\nconst VERIFICATION_FIELD = (msg, verificationFn, error) => [msg, verificationFn, error]\n\nconst VALIDATORS = {\n  signature: 'signature',\n  insufficientFee: 'insufficientFee',\n  expiredTTL: 'expiredTTL',\n  insufficientBalanceForAmountFee: 'insufficientBalanceForAmountFee',\n  insufficientBalanceForAmount: 'insufficientBalanceForAmount',\n  nonceUsed: 'nonceUsed',\n  nonceHigh: 'nonceHigh',\n  minGasPrice: 'minGasPrice',\n  vmAndAbiVersion: 'vmAndAbiVersion'\n}\n\nconst ERRORS = {\n  invalidSignature: { key: 'InvalidSignature', type: ERROR_TYPE.ERROR, txKey: 'signature' },\n  insufficientFee: { key: 'InsufficientFee', type: ERROR_TYPE.ERROR, txKey: 'fee' },\n  expiredTTL: { key: 'ExpiredTTL', type: ERROR_TYPE.ERROR, txKey: 'ttl' },\n  insufficientBalanceForAmountFee: { key: 'InsufficientBalanceForAmountFee', type: ERROR_TYPE.WARNING, txKey: 'fee' },\n  insufficientBalanceForAmount: { key: 'InsufficientBalanceForAmount', type: ERROR_TYPE.WARNING, txKey: 'amount' },\n  nonceUsed: { key: 'NonceUsed', type: ERROR_TYPE.ERROR, txKey: 'nonce' },\n  nonceHigh: { key: 'NonceHigh', type: ERROR_TYPE.WARNING, txKey: 'nonce' },\n  minGasPrice: { key: 'minGasPrice', type: ERROR_TYPE.ERROR, txKey: 'gasPrice' },\n  vmAndAbiVersion: { key: 'vmAndAbiVersion', type: ERROR_TYPE.ERROR, txKey: 'ctVersion' }\n}\n\nexport const SIGNATURE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    () => `The signature cannot be verified, please verify that you used the correct network id and the correct private key for the sender address`,\n    VALIDATORS.signature,\n    ERRORS.invalidSignature\n  )\n]\nexport const CONTRACT_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ ctVersion, consensusProtocolVersion, txType }) => `Wrong abi/vm version, Supported is: ${PROTOCOL_VM_ABI[consensusProtocolVersion] ? JSON.stringify(PROTOCOL_VM_ABI[consensusProtocolVersion][txType]) : ' None for this protocol ' + consensusProtocolVersion}`,\n    VALIDATORS.vmAndAbiVersion,\n    ERRORS.vmAndAbiVersion\n  ),\n  VERIFICATION_FIELD(\n    () => `The gasPrice must be bigger then ${MIN_GAS_PRICE}`,\n    VALIDATORS.minGasPrice,\n    ERRORS.minGasPrice\n  )\n]\nexport const BASE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ minFee }) => `The fee for the transaction is too low, the minimum fee for this transaction is ${minFee}`,\n    VALIDATORS.insufficientFee,\n    ERRORS.insufficientFee\n  ),\n  VERIFICATION_FIELD(\n    ({ height }) => `The TTL is already expired, the current height is ${height}`,\n    VALIDATORS.expiredTTL,\n    ERRORS.expiredTTL\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmountFee,\n    ERRORS.insufficientBalanceForAmountFee\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmount,\n    ERRORS.insufficientBalanceForAmount\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is invalid(already used). Next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceUsed,\n    ERRORS.nonceUsed\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is technically valid but will not be processed immediately by the node (next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceHigh,\n    ERRORS.nonceHigh\n  )\n]\n","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nmodule.exports = merge;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Crypto module\n * @module @aeternity/aepp-sdk/es/utils/crypto\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/crypto'\n */\n\nimport bs58check from 'bs58check'\nimport * as RLP from 'rlp'\nimport { blake2b } from 'blakejs'\nimport nacl from 'tweetnacl'\nimport aesjs from 'aes-js'\nimport { leftPad, rightPad, toBytes } from './bytes'\nimport shajs from 'sha.js'\nimport { decode as decodeNode } from '../tx/builder/helpers'\n\nconst Ecb = aesjs.ModeOfOperation.ecb\n\n/**\n * Check whether a string is valid base-64.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid base-64, false otherwise.\n */\nexport function isBase64 (str) {\n  let index\n  // eslint-disable-next-line no-useless-escape\n  if (str.length % 4 > 0 || str.match(/[^0-9a-z+\\/=]/i)) return false\n  index = str.indexOf('=')\n  return !!(index === -1 || str.slice(index).match(/={1,2}/))\n}\n\nexport const ADDRESS_FORMAT = {\n  sophia: 1,\n  api: 2,\n  raw: 3\n}\n\n/**\n * Format account address\n * @rtype (format: String, address: String) => tx: Promise[String]\n * @param {String} format - Format type\n * @param {String} address - Base58check account address\n * @return {String} Formatted address\n */\nexport function formatAddress (format = ADDRESS_FORMAT.api, address) {\n  switch (format) {\n    case ADDRESS_FORMAT.api:\n      return address\n    case ADDRESS_FORMAT.sophia:\n      return `0x${decodeNode(address, 'ak').toString('hex')}`\n  }\n}\n\n/**\n * Check if address is valid\n * @rtype (input: String) => valid: Boolean\n * @param {String} address - Address\n * @return {Boolean} valid\n */\nexport function isAddressValid (address) {\n  let isValid\n  try {\n    isValid = decodeBase58Check(assertedType(address, 'ak')).length === 32\n  } catch (e) {\n    isValid = false\n  }\n  return isValid\n}\n\n/**\n * Convert base58Check address to hex string\n * @rtype (base58CheckAddress: String) => hexAddress: String\n * @param {String} base58CheckAddress - Address\n * @return {String} Hex string\n */\nexport function addressToHex (base58CheckAddress) {\n  return `0x${decodeBase58Check(assertedType(base58CheckAddress, 'ak')).toString('hex')}`\n}\n\n/**\n * Parse decimal address and return base58Check encoded address with prefix 'ak'\n * @rtype (input: String) => address: String\n * @param {String} decimalAddress - Address\n * @return {String} address\n */\nexport function addressFromDecimal (decimalAddress) {\n  return aeEncodeKey(toBytes(decimalAddress, true))\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String|Buffer} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function hash (input) {\n  return Buffer.from(blake2b(input, null, 32)) // 256 bits\n}\n\n/**\n * Calculate 256bits Blake2b nameId of `input`\n * as defined in https://github.com/aeternity/protocol/blob/master/AENS.md#hashing\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function nameId (input) {\n  let buf = Buffer.allocUnsafe(32).fill(0)\n  if (!input) {\n    return buf\n  } else {\n    const labels = input.split('.')\n    for (let i = 0; i < labels.length; i++) {\n      buf = hash(Buffer.concat([buf, hash(labels[i])]))\n    }\n    return buf\n  }\n}\n\n/**\n * Calculate SHA256 hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {String} Hash\n */\nexport function sha256hash (input) {\n  return shajs('sha256').update(input).digest()\n}\n\n/**\n * Generate a random salt (positive integer)\n * @rtype () => salt: Number\n * @return {Number} random salt\n */\nexport function salt () {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER))\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String} input - Data to encode\n * @return {Buffer} Base64check encoded data\n */\nexport function encodeBase64Check (input) {\n  const buffer = Buffer.from(input)\n  const checksum = checkSumFn(input)\n  const payloadWithChecksum = Buffer.concat([buffer, checksum], buffer.length + 4)\n  return payloadWithChecksum.toString('base64')\n}\n\nexport function checkSumFn (payload) {\n  return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nfunction decodeRaw (buffer) {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = checkSumFn(payload)\n\n  if (!checksum.equals(newChecksum)) return\n\n  return payload\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nexport function decodeBase64Check (str) {\n  const buffer = Buffer.from(str, 'base64')\n  const payload = decodeRaw(buffer)\n  if (!payload) throw new Error('Invalid checksum')\n  return Buffer.from(payload)\n}\n\n/**\n * Base58 encode given `input`\n * @rtype (input: String) => String\n * @param {String} input - Data to encode\n * @return {String} Base58 encoded data\n */\nexport function encodeBase58Check (input) {\n  return bs58check.encode(Buffer.from(input))\n}\n\n/**\n * Base58 decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58 decoded data\n */\nexport function decodeBase58Check (str) {\n  return bs58check.decode(str)\n}\n\n/**\n * Conver hex string to Uint8Array\n * @rtype (str: String) => Uint8Array\n * @param {String} str - Data to conver\n * @return {Uint8Array} - converted data\n */\nexport function hexStringToByte (str) {\n  if (!str) {\n    return new Uint8Array()\n  }\n\n  var a = []\n  for (var i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16))\n  }\n\n  return new Uint8Array(a)\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @rtype (value: Number) => Buffer\n * @param {Number} value - Value to encode\n * @return {Buffer} - Encoded data\n */\nexport function encodeUnsigned (value) {\n  const binary = Buffer.allocUnsafe(4)\n  binary.writeUInt32BE(value)\n  return binary.slice(binary.findIndex(i => i !== 0))\n}\n\n/**\n * Compute contract address\n * @rtype (owner: String, nonce: Number) => String\n * @param {String} owner - Address of contract owner\n * @param {Number} nonce - Round when contract was created\n * @return {String} - Contract address\n */\nexport function encodeContractAddress (owner, nonce) {\n  const publicKey = decodeBase58Check(assertedType(owner, 'ak'))\n  const binary = Buffer.concat([publicKey, encodeUnsigned(nonce)])\n  return `ct_${encodeBase58Check(hash(binary))}`\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @rtype (secret: Uint8Array) => KeyPair\n * @param {Uint8Array} secret - secret key\n * @return {Object} - Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret (secret) {\n  return nacl.sign.keyPair.fromSecretKey(secret)\n}\n\n/**\n * Generate a random ED25519 keypair\n * @rtype (raw: Boolean) => {publicKey: String, secretKey: String} | {publicKey: Buffer, secretKey: Buffer}\n * @param {Boolean} raw - Whether to return raw (binary) keys\n * @return {Object} Key pair\n */\nexport function generateKeyPair (raw = false) {\n  // <node>/apps/aens/test/aens_test_utils.erl\n  const keyPair = nacl.sign.keyPair()\n\n  const publicBuffer = Buffer.from(keyPair.publicKey)\n  const secretBuffer = Buffer.from(keyPair.secretKey)\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer\n    }\n  } else {\n    return {\n      publicKey: `ak_${encodeBase58Check(publicBuffer)}`,\n      secretKey: secretBuffer.toString('hex')\n    }\n  }\n}\n\n/**\n * Encrypt given public key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPublicKey (password, binaryKey) {\n  return encryptKey(password, rightPad(32, binaryKey))\n}\n\n/**\n * Encrypt given private key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPrivateKey (password, binaryKey) {\n  return encryptKey(password, leftPad(64, binaryKey))\n}\n\n/**\n * Encrypt given data using `password`\n * @rtype (password: String, binaryData: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryData - Data to encrypt\n * @return {Uint8Array} Encrypted data\n */\nexport function encryptKey (password, binaryData) {\n  let hashedPasswordBytes = sha256hash(password)\n  let aesEcb = new Ecb(hashedPasswordBytes)\n  return aesEcb.encrypt(binaryData)\n}\n\n/**\n * Decrypt given data using `password`\n * @rtype (password: String, encrypted: String) => Uint8Array\n * @param {String} password - Password to decrypt with\n * @param {String} encrypted - Data to decrypt\n * @return {Buffer} Decrypted data\n */\nexport function decryptKey (password, encrypted) {\n  const encryptedBytes = Buffer.from(encrypted)\n  let hashedPasswordBytes = sha256hash(password)\n  let aesEcb = new Ecb(hashedPasswordBytes)\n  return Buffer.from(aesEcb.decrypt(encryptedBytes))\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @rtype (data: String|Buffer, privateKey: Buffer) => Buffer\n * @param {String|Buffer} data - Data to sign\n * @param {String|Buffer} privateKey - Key to sign with\n * @return {Buffer} Signature\n */\nexport function sign (data, privateKey) {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey))\n}\n\n/**\n * Verify that signature was signed by public key\n * @rtype (str: String, signature: Buffer, publicKey: Buffer) => Boolean\n * @param {String} str - Data to verify\n * @param {Buffer} signature - Signature to verify\n * @param {Buffer} publicKey - Key to verify against\n * @return {Boolean} Valid?\n */\nexport function verify (str, signature, publicKey) {\n  return nacl.sign.detached.verify(new Uint8Array(str), signature, publicKey)\n}\n\n/**\n * @typedef {Array} Transaction\n * @rtype Transaction: [tag: Buffer, version: Buffer, [signature: Buffer], data: Buffer]\n */\n\n/**\n * Prepare a transaction for posting to the blockchain\n * @rtype (signature: Buffer | String, data: Buffer) => Transaction\n * @param {Buffer} signature - Signature of `data`\n * @param {Buffer} data - Transaction data\n * @return {Transaction} Transaction\n */\nexport function prepareTx (signature, data) {\n  // the signed tx deserializer expects a 4-tuple:\n  // <tag, version, signatures_array, binary_tx>\n  return [Buffer.from([11]), Buffer.from([1]), [Buffer.from(signature)], data]\n}\n\nexport function personalMessageToBinary (message) {\n  const p = Buffer.from('æternity Signed Message:\\n', 'utf8')\n  const msg = Buffer.from(message, 'utf8')\n  if (msg.length >= 0xFD) throw new Error('message too long')\n  return Buffer.concat([Buffer.from([p.length]), p, Buffer.from([msg.length]), msg])\n}\n\nexport function signPersonalMessage (message, privateKey) {\n  return sign(personalMessageToBinary(message), privateKey)\n}\n\nexport function verifyPersonalMessage (str, signature, publicKey) {\n  return verify(personalMessageToBinary(str), signature, publicKey)\n}\n\n/**\n * æternity readable public keys are the base58-encoded public key, prepended\n * with 'ak_'\n * @rtype (binaryKey: Buffer) => String\n * @param {Buffer} binaryKey - Key to encode\n * @return {String} Encoded key\n */\nexport function aeEncodeKey (binaryKey) {\n  const publicKeyBuffer = Buffer.from(binaryKey, 'hex')\n  const pubKeyAddress = encodeBase58Check(publicKeyBuffer)\n  return `ak_${pubKeyAddress}`\n}\n\n/**\n * Generate a new key pair using {@link generateKeyPair} and encrypt it using `password`\n * @rtype (password: String) => {publicKey: Uint8Array, secretKey: Uint8Array}\n * @param {String} password - Password to encrypt with\n * @return {Object} Encrypted key pair\n */\nexport function generateSaveWallet (password) {\n  let keys = generateKeyPair(true)\n  return {\n    publicKey: encryptPublicKey(password, keys.publicKey),\n    secretKey: encryptPrivateKey(password, keys.secretKey)\n  }\n}\n\n/**\n * Decrypt an encrypted private key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPrivateKey (password, encrypted) {\n  return decryptKey(password, encrypted)\n}\n\n/**\n * Decrypt an encrypted public key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPubKey (password, encrypted) {\n  return decryptKey(password, encrypted).slice(0, 65)\n}\n\n/**\n * Assert base58 encoded type and return its payload\n * @rtype (data: String, type: String) => String, throws: Error\n * @param {String} data - ae data\n * @param {String} type - Prefix\n * @param forceError\n * @return {String|Boolean} Payload\n */\nexport function assertedType (data, type, forceError = false) {\n  if (RegExp(`^${type}_.+$`).test(data)) {\n    return data.split('_')[1]\n  } else {\n    if (!forceError) throw Error(`Data doesn't match expected type ${type}`)\n    return false\n  }\n}\n\n/**\n * Decode a transaction\n * @rtype (txHash: String) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Array} Decoded transaction\n */\nexport function decodeTx (txHash) {\n  return RLP.decode(Buffer.from(decodeBase64Check(assertedType(txHash, 'tx'))))\n}\n\n/**\n * Encode a transaction\n * @rtype (txData: Transaction) => String\n * @param {Transaction} txData - Transaction to encode\n * @return {String} Encoded transaction\n */\nexport function encodeTx (txData) {\n  const encodedTxData = RLP.encode(txData)\n  const encodedTx = encodeBase64Check(encodedTxData)\n  return `tx_${encodedTx}`\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @rtype (privateKey: Buffer, publicKey: Buffer) => Boolean\n * @param {Buffer} privateKey - Private key to verify\n * @param {Buffer} publicKey - Public key to verify\n * @return {Boolean} Valid?\n */\nexport function isValidKeypair (privateKey, publicKey) {\n  const message = Buffer.from('TheMessage')\n  const signature = sign(message, privateKey)\n  return verify(message, signature, publicKey)\n}\n\n/**\n * Obtain key pair from `env`\n *\n * Designed to be used with `env` from nodejs. Assumes enviroment variables\n * `WALLET_PRIV` and `WALLET_PUB`.\n * @rtype (env: Object) => {publicKey: String, secretKey: String}, throws: Error\n * @param {Object} env - Environment\n * @return {Object} Key pair\n */\nexport function envKeypair (env, force = false) {\n  const keypair = {\n    secretKey: env['WALLET_PRIV'],\n    publicKey: env['WALLET_PUB']\n  }\n\n  if (keypair.publicKey && keypair.secretKey) {\n    return keypair\n  } else {\n    if (!force) throw Error('Environment variables WALLET_PRIV and WALLET_PUB need to be set')\n  }\n}\n\n/**\n * RLP decode\n * @rtype (data: Any) => Buffer[]\n * @param {Buffer|String|Integer|Array} data - Data to decode\n * @return {Array} Array of Buffers containing the original message\n */\nexport const decode = RLP.decode\nexport const encode = RLP.encode\nexport const rlp = RLP\n\nconst OBJECT_TAGS = {\n  SIGNED_TX: 11,\n  CHANNEL_CREATE_TX: 50,\n  CHANNEL_CLOSE_MUTUAL_TX: 53,\n  CHANNEL_OFFCHAIN_TX: 57,\n  CHANNEL_OFFCHAIN_UPDATE_TRANSFER: 570\n}\n\nfunction objectTag (tag, pretty) {\n  if (pretty) {\n    const entry = Object.entries(OBJECT_TAGS).find(([key, value]) => tag === value)\n    return entry ? entry[0] : tag\n  }\n  return tag\n}\n\nfunction readInt (buf) {\n  return buf.readIntBE(0, buf.length)\n}\n\nfunction readId (buf) {\n  const type = buf.readUIntBE(0, 1)\n  const prefix = {\n    1: 'ak',\n    2: 'nm',\n    3: 'cm',\n    4: 'ok',\n    5: 'ct',\n    6: 'ch'\n  }[type]\n  const hash = encodeBase58Check(buf.slice(1, buf.length))\n  return `${prefix}_${hash}`\n}\n\nfunction readSignatures (buf) {\n  const signatures = []\n\n  for (let i = 0; i < buf.length; i++) {\n    signatures.push(encodeBase58Check(buf[i]))\n  }\n\n  return signatures\n}\n\nfunction deserializeOffChainUpdate (binary, opts) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_UPDATE_TRANSFER:\n      return Object.assign(obj, {\n        from: readId(binary[2]),\n        to: readId(binary[3]),\n        amount: readInt(binary[4])\n      })\n  }\n\n  return obj\n}\n\nfunction readOffChainTXUpdates (buf, opts) {\n  const updates = []\n\n  for (let i = 0; i < buf.length; i++) {\n    updates.push(deserializeOffChainUpdate(decode(buf[i]), opts))\n  }\n\n  return updates\n}\n\n/**\n * Deserialize `binary` state channel transaction\n * @rtype (binary: String) => Object\n * @param {String} binary - Data to deserialize\n * @param {Object} opts - Options\n * @return {Object} Channel data\n */\nexport function deserialize (binary, opts = { prettyTags: false }) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.SIGNED_TX:\n      return Object.assign(obj, {\n        signatures: readSignatures(binary[2]),\n        tx: deserialize(decode(binary[3]), opts)\n      })\n\n    case OBJECT_TAGS.CHANNEL_CREATE_TX:\n      return Object.assign(obj, {\n        initiator: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responder: readId(binary[4]),\n        responderAmount: readInt(binary[5]),\n        channelReserve: readInt(binary[6]),\n        lockPeriod: readInt(binary[7]),\n        ttl: readInt(binary[8]),\n        fee: readInt(binary[9])\n      })\n\n    case OBJECT_TAGS.CHANNEL_CLOSE_MUTUAL_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responderAmount: readInt(binary[4]),\n        ttl: readInt(binary[5]),\n        fee: readInt(binary[6]),\n        nonce: readInt(binary[7])\n      })\n\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        round: readInt(binary[3]),\n        updates: readOffChainTXUpdates(binary[4], opts),\n        state: encodeBase58Check(binary[5])\n      })\n  }\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head = /*#__PURE__*/nth(0);\nmodule.exports = head;","import {\n  assertedType,\n  decodeBase58Check,\n  decodeBase64Check,\n  encodeBase58Check, encodeBase64Check,\n  hash,\n  nameId,\n  salt\n} from '../../utils/crypto'\nimport { toBytes } from '../../utils/bytes'\nimport { ID_TAG_PREFIX, PREFIX_ID_TAG } from './schema'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * JavaScript-based Transaction builder helper function's\n * @module @aeternity/aepp-sdk/es/tx/builder/helpers\n * @export TxBuilderHelper\n * @example import TxBuilderHelper from '@aeternity/aepp-sdk/es/tx/builder/helpers'\n */\n\nexport const createSalt = salt\n\nconst base64Types = ['tx', 'st', 'ss', 'pi', 'ov', 'or', 'cb', 'cs', 'ba']\n\n/**\n * Build a contract public key\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} ownerId The public key of the owner account\n * @param {number} nonce the nonce of the transaction\n * @return {string} Contract public key\n */\nexport function buildContractId (ownerId, nonce) {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId, 'ak'), ...toBytes(nonce)])\n  const b2bHash = hash(ownerIdAndNonce)\n  return encode(b2bHash, 'ct')\n}\n\n/**\n * Build hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} prefix Transaction hash prefix\n * @param {Buffer} data Rlp encoded transaction buffer\n * @return {String} Transaction hash\n */\nexport function buildHash (prefix, data) {\n  return encode(hash(data), prefix)\n}\n\n/**\n * Build a oracle query id\n * @function\n * @function* @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} senderId The public key of the sender account\n * @param {Number} nonce the nonce of the transaction\n * @param {Number} oracleId The oracle public key\n * @return {string} Contract public key\n */\nexport function oracleQueryId (senderId, nonce, oracleId) {\n  function _int32 (val) {\n    const nonceBE = toBytes(val, true)\n    return Buffer.concat([Buffer.alloc(32 - nonceBE.length), nonceBE])\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId, 'ak'), ..._int32(nonce), ...decode(oracleId, 'ok')]))\n  return encode(b2bHash, 'oq')\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {number} salt\n * @return {string} Zero-padded hex string of salt\n */\nexport function formatSalt (salt) {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex')\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n *\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @function commitmentHash\n * @category async\n * @rtype (name: String, salt?: String) => hash: Promise[String]\n * @param {String} name - Name to be registered\n * @param {Number} salt Random salt\n * @return {String} Commitment hash\n */\nexport async function commitmentHash (name, salt = createSalt()) {\n  return `cm_${encodeBase58Check(hash(Buffer.concat([nameId(name), formatSalt(salt)])))}`\n}\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} data  An encoded and prefixed string (ex tx_..., sg_..., ak_....)\n * @param {string} type Prefix of Transaction\n * @return {Buffer} Buffer of decoded Base58check or Base64check data\n */\nexport function decode (data, type) {\n  if (!type) type = data.split('_')[0]\n  return base64Types.includes(type)\n    ? decodeBase64Check(assertedType(data, type))\n    : decodeBase58Check(assertedType(data, type))\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer|String} data  An decoded data\n * @param {string} type Prefix of Transaction\n * @return {String} Encoded string Base58check or Base64check data\n */\nexport function encode (data, type) {\n  return `${type}_${base64Types.includes(type)\n    ? encodeBase64Check(data)\n    : encodeBase58Check(data)}`\n}\n\n/**\n * Utility function to create and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} hashId Encoded hash\n * @return {Buffer} Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId (hashId) {\n  const prefix = hashId.slice(0, 2)\n  const idTag = PREFIX_ID_TAG[prefix]\n  if (!idTag) throw new Error(`Id tag for prefix ${prefix} not found.`)\n  return Buffer.from([...toBytes(idTag), ...decode(hashId, prefix)])\n}\n\n/**\n * Utility function to read and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Data\n * @return {String} Encoided hash string with prefix\n */\nexport function readId (buf) {\n  const tag = buf.readUIntBE(0, 1)\n  const prefix = ID_TAG_PREFIX[tag]\n  if (!prefix) throw new Error(`Prefix for id-tag ${tag} not found.`)\n  return encode(buf.slice(1, buf.length), prefix)\n}\n\n/**\n * Utility function to convert int to bytes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Number|String|BigNumber} val Value\n * @return {Buffer} Buffer Buffer from number(BigEndian)\n */\nexport function writeInt (val) {\n  return toBytes(val, true)\n}\n\n/**\n * Utility function to convert bytes to int\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Value\n * @return {String} Buffer Buffer from number(BigEndian)\n */\nexport function readInt (buf = Buffer.from([])) {\n  return BigNumber(buf.toString('hex'), 16).toString(10)\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Serialized pointers array\n */\nexport function buildPointers (pointers) {\n  return pointers.map(\n    p => [\n      toBytes(p['key']),\n      writeId(p['id'])\n    ]\n  )\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Deserialize pointer array\n */\nexport function readPointers (pointers) {\n  return pointers.map(\n    ([key, id]) => Object.assign({\n      key: key.toString(),\n      id: readId(id)\n    })\n  )\n}\n\nexport default {\n  readPointers,\n  buildPointers,\n  buildContractId,\n  readId,\n  writeId,\n  readInt,\n  writeInt,\n  encode,\n  decode,\n  commitmentHash,\n  formatSalt,\n  oracleQueryId,\n  createSalt,\n  buildHash\n}\n","/* eslint-disable curly */\nimport { BigNumber } from 'bignumber.js'\nimport { assertedType, rlp } from '../../utils/crypto'\n\nimport {\n  DEFAULT_FEE,\n  FIELD_TYPES,\n  OBJECT_ID_TX_TYPE,\n  PREFIX_ID_TAG,\n  TX_DESERIALIZATION_SCHEMA,\n  TX_FEE_BASE_GAS,\n  TX_FEE_OTHER_GAS,\n  TX_SERIALIZATION_SCHEMA,\n  VALIDATION_MESSAGE,\n  VSN\n} from './schema'\nimport { readInt, readId, readPointers, writeId, writeInt, buildPointers, encode, decode, buildHash } from './helpers'\nimport { toBytes } from '../../utils/bytes'\nimport * as mpt from '../../utils/mptree'\n\n/**\n * JavaScript-based Transaction builder\n * @module @aeternity/aepp-sdk/es/tx/builder\n * @export TxBuilder\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/builder'\n */\n\nconst ORACLE_TTL_TYPES = {\n  delta: 'delta',\n  block: 'block'\n}\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField (value, type, prefix) {\n  if (!value) return ''\n  switch (type) {\n    case FIELD_TYPES.ctVersion:\n      // eslint-disable-next-line no-unused-vars\n      const [vm, _, abi] = value\n      return { vmVersion: readInt(Buffer.from([vm])), abiVersion: readInt(Buffer.from([abi])) }\n    case FIELD_TYPES.int:\n      return readInt(value)\n    case FIELD_TYPES.id:\n      return readId(value)\n    case FIELD_TYPES.ids:\n      return value.map(readId)\n    case FIELD_TYPES.bool:\n      return value[0] === 1\n    case FIELD_TYPES.binary:\n      return encode(value, prefix)\n    case FIELD_TYPES.string:\n      return value.toString()\n    case FIELD_TYPES.payload:\n      return encode(value, 'ba')\n    case FIELD_TYPES.pointers:\n      return readPointers(value)\n    case FIELD_TYPES.rlpBinary:\n      return unpackTx(value, true)\n    case FIELD_TYPES.rlpBinaries:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.rawBinary:\n      return value\n    case FIELD_TYPES.hex:\n      return value.toString('hex')\n    case FIELD_TYPES.offChainUpdates:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)]\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.deserialize)\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0': return 'ok'\n        case '1': return 'error'\n        case '2': return 'revert'\n        default: return value\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value\n        .reduce(\n          (acc, [funHash, fnName, argType, outType]) =>\n            ({ ...acc, [fnName.toString()]: { funHash, argType, outType } }),\n          {}\n        )\n    default:\n      return value\n  }\n}\n\nfunction serializeField (value, type, prefix) {\n  switch (type) {\n    case FIELD_TYPES.int:\n      return writeInt(value)\n    case FIELD_TYPES.id:\n      return writeId(value)\n    case FIELD_TYPES.ids:\n      return value.map(writeId)\n    case FIELD_TYPES.bool:\n      return Buffer.from([value ? 1 : 0])\n    case FIELD_TYPES.binary:\n      return decode(value, prefix)\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex')\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from)\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value, 'ba')\n        : toBytes(value)\n    case FIELD_TYPES.string:\n      return toBytes(value)\n    case FIELD_TYPES.pointers:\n      return buildPointers(value)\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.serialize)\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)])\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0)\n        case 'error': return writeInt(1)\n        case 'revert': return writeInt(2)\n        default: return value\n      }\n    default:\n      return value\n  }\n}\n\nfunction validateField (value, key, type, prefix) {\n  const assert = (valid, params) => valid ? {} : { [key]: VALIDATION_MESSAGE[type](params) }\n  // All fields are required\n  if (value === undefined || value === null) return { [key]: 'Field is required' }\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.int:\n      const isMinusValue = (!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).lt(0)\n      return assert((!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).gte(0), { value, isMinusValue })\n    case FIELD_TYPES.id:\n      return assert(assertedType(value, prefix) && PREFIX_ID_TAG[value.split('_')[0]] && value.split('_')[0] === prefix, { value, prefix })\n    case FIELD_TYPES.binary:\n      return assert(value.split('_')[0] === prefix, { prefix, value })\n    case FIELD_TYPES.string:\n      return assert(true)\n    case FIELD_TYPES.ctVersion:\n      return assert(typeof value === 'object' && value.hasOwnProperty('abiVersion') && value.hasOwnProperty('vmVersion'))\n    case FIELD_TYPES.pointers:\n      return assert(Array.isArray(value) && !value.find(e => e !== Object(e)), { value })\n    default:\n      return {}\n  }\n}\n\nfunction transformParams (params) {\n  return Object\n    .entries(params)\n    .reduce(\n      (acc, [key, value]) => {\n        acc[key] = value\n        if (key === 'oracleTtl') acc = {\n          ...acc,\n          oracleTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          oracleTtlValue: value.value\n        }\n        if (key === 'queryTtl') acc = {\n          ...acc,\n          queryTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          queryTtlValue: value.value\n        }\n        if (key === 'responseTtl') acc = {\n          ...acc,\n          responseTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          responseTtlValue: value.value\n        }\n        return acc\n      },\n      {}\n    )\n}\n\n// INTERFACE\n\nfunction getOracleRelativeTtl (params) {\n  // eslint-disable-next-line no-unused-vars\n  const [_, { value = 500 }] = Object.entries(params).find(([key]) => ['oracleTtl', 'queryTtl', 'responseTtl'].includes(key)) || ['', {}]\n  return value // TODO investigate this\n}\n\n/**\n * Calculate min fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/index\n * @rtype (txType, { gas = 0, params }) => String\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateMinFee('spendTx', { gas, params })\n */\nexport function calculateMinFee (txType, { gas = 0, params }) {\n  const multiplier = BigNumber(1e9) // 10^9 GAS_PRICE\n  if (!params) return BigNumber(DEFAULT_FEE).times(multiplier).toString(10)\n\n  let actualFee = buildFee(txType, { params: { ...params, fee: 0 }, multiplier, gas })\n  let expected = BigNumber(0)\n\n  while (!actualFee.eq(expected)) {\n    actualFee = buildFee(txType, { params: { ...params, fee: actualFee }, multiplier, gas })\n    expected = actualFee\n  }\n  return expected.toString(10)\n}\n\n/**\n * Calculate fee based on tx type and params\n * @param txType\n * @param params\n * @param gas\n * @param multiplier\n * @return {BigNumber}\n */\nfunction buildFee (txType, { params, gas = 0, multiplier }) {\n  const { rlpEncoded: txWithOutFee } = buildTx({ ...params }, txType)\n  const txSize = txWithOutFee.length\n  return TX_FEE_BASE_GAS(txType)\n    .plus(TX_FEE_OTHER_GAS(txType)({ txSize, relativeTtl: getOracleRelativeTtl(params) }))\n    .times(multiplier)\n}\n\n/**\n * Calculate fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @rtype (fee, txType, gas = 0) => String\n * @param {String|Number} fee - fee\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateFee(null, 'spendTx', { gas, params })\n */\nexport function calculateFee (fee = 0, txType, { gas = 0, params, showWarning = true } = {}) {\n  if (!params && showWarning) console.warn(`Can't build transaction fee, we will use DEFAULT_FEE(${DEFAULT_FEE})`)\n\n  const minFee = calculateMinFee(txType, { params, gas })\n  if (fee && BigNumber(minFee).gt(BigNumber(fee)) && showWarning) console.warn(`Transaction fee is lower then min fee! Min fee: ${minFee}`)\n\n  return fee || minFee\n}\n\n/**\n * Validate transaction params\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Array} excludeKeys  Array of keys to exclude for validation\n * @return {Object} Object with validation errors\n */\nexport function validateParams (params, schema, { excludeKeys = [] }) {\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key) && key !== 'payload')\n    .reduce(\n      (acc, [key, type, prefix]) => Object.assign(acc, validateField(params[key], key, type, prefix)),\n      {}\n    )\n}\n\n/**\n * Build binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @throws {Error} Validation error\n * @return {Array} Array with binary fields of transaction\n */\nexport function buildRawTx (params, schema, { excludeKeys = [] } = {}) {\n  // Transform params(reason is for do not break current interface of `tx`)\n  params = transformParams(params)\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys })\n  if (Object.keys(valid).length) {\n    throw new Error('Transaction build error. ' + JSON.stringify(valid))\n  }\n\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key))\n    .map(([key, fieldType, prefix]) => serializeField(params[key], fieldType, prefix))\n}\n\n/**\n * Unpack binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Array} binary Array with binary transaction field's\n * @param {Array} schema Transaction schema\n * @return {Object} Object with transaction field's\n */\nexport function unpackRawTx (binary, schema) {\n  return schema\n    .reduce(\n      (\n        acc,\n        [key, fieldType, prefix],\n        index\n      ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n      {}\n    )\n}\n\n/**\n * Build transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {String} type Transaction type\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.prefix] Prefix of transaction\n * @throws {Error} Validation error\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Base64Check transaction hash with 'tx_' prefix, rlp encoded transaction and binary transaction\n */\nexport function buildTx (params, type, { excludeKeys = [], prefix = 'tx' } = {}) {\n  if (!TX_SERIALIZATION_SCHEMA[type]) {\n    throw new Error('Transaction serialization not implemented for ' + type)\n  }\n  if (!TX_SERIALIZATION_SCHEMA[type][VSN]) {\n    throw new Error('Transaction serialization not implemented for ' + type + ' version ' + VSN)\n  }\n  const [schema, tag] = TX_SERIALIZATION_SCHEMA[type][VSN]\n  const binary = buildRawTx({ ...params, VSN, tag }, schema, { excludeKeys }).filter(e => e !== undefined)\n\n  const rlpEncoded = rlp.encode(binary)\n  const tx = encode(rlpEncoded, prefix)\n\n  return { tx, rlpEncoded, binary, txObject: unpackRawTx(binary, schema) }\n}\n\n/**\n * Unpack transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String|Array} encodedTx String or RLP encoded transaction array (if fromRlpBinary flag is true)\n * @param {Boolean} fromRlpBinary Unpack from RLP encoded transaction (default: false)\n * @param {String} prefix - Prefix of data\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Object with transaction param's, rlp encoded transaction and binary transaction\n */\nexport function unpackTx (encodedTx, fromRlpBinary = false, prefix = 'tx') {\n  const rlpEncoded = fromRlpBinary ? encodedTx : decode(encodedTx, prefix)\n  const binary = rlp.decode(rlpEncoded)\n\n  const objId = readInt(binary[0])\n  if (!TX_DESERIALIZATION_SCHEMA[objId]) {\n    return { message: 'Transaction deserialization not implemented for tag ' + objId }\n  }\n  const vsn = readInt(binary[1])\n  if (!TX_DESERIALIZATION_SCHEMA[objId][vsn]) {\n    return { message: 'Transaction deserialization not implemented for tag ' + objId + ' version ' + vsn }\n  }\n  const [schema] = TX_DESERIALIZATION_SCHEMA[objId][vsn]\n\n  return { txType: OBJECT_ID_TX_TYPE[objId], tx: unpackRawTx(binary, schema), rlpEncoded, binary }\n}\n\n/**\n * Build a transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String | Buffer} rawTx base64 or rlp encoded transaction\n * @return {String} Transaction hash\n */\nexport function buildTxHash (rawTx) {\n  if (typeof rawTx === 'string' && rawTx.indexOf('tx_') !== -1) return buildHash('th', unpackTx(rawTx).rlpEncoded)\n  return buildHash('th', rawTx)\n}\n\nexport default { calculateMinFee, calculateFee, unpackTx, unpackRawTx, buildTx, buildRawTx, validateParams, buildTxHash }\n","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Bytes module\n * @module @aeternity/aepp-sdk/es/utils/bytes\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/bytes'\n */\n\n/**\n * Left pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function leftPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([fillArray, inputBuffer])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Right pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function rightPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([inputBuffer, fillArray])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Convert bignumber to byte array\n * @param x bignumber instance\n * @return Buffer\n */\nexport function bigNumberToByteArray (x) {\n  let hexString = x.toString(16)\n  if (hexString.length % 2 > 0) hexString = '0' + hexString\n  return Buffer.from(hexString, 'hex')\n}\nexport function toBytes (val, big = false) {\n  // \"\"\"\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined) return undefined\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = BigNumber(val)\n    return bigNumberToByteArray(val)\n  }\n  if (typeof val === 'string') {\n    return val.toString('utf-8')\n  }\n  throw new Error('Byte serialization not supported')\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Ae module\n * @module @aeternity/aepp-sdk/es/ae\n * @export Ae\n * @example import Ae from '@aeternity/aepp-sdk/es/ae'\n */\n\nimport stampit from '@stamp/it'\nimport Tx from '../tx'\nimport Chain from '../chain'\nimport Account from '../account'\nimport TxBuilder from '../tx/builder'\nimport * as R from 'ramda'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Sign and post a transaction to the chain\n * @instance\n * @category async\n * @rtype (tx: String, options: Object) => Promise[String]\n * @param {String} tx - Transaction\n * @param {Object} [options={}] options - Options\n * @param {Object} [options.verify] verify - Verify transaction before broadcast, throw error if not valid\n * @return {String|String} Transaction or transaction hash\n */\nasync function send (tx, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const { contractId: gaId, authFun } = await this.getAccount(await this.address(opt))\n  const signed = gaId\n    ? await this.signUsingGA(tx, { ...opt, authFun })\n    : await this.signTransaction(tx, options)\n  return this.sendTransaction(signed, options)\n}\n\nasync function signUsingGA (tx, options = {}) {\n  const { authData, authFun } = options\n  return this.createMetaTx(tx, authData, authFun, options)\n}\n\n/**\n * Send tokens to another account\n * @instance\n * @category async\n * @rtype (amount: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} amount - Amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function spend (amount, recipientId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(opt), recipientId, amount: amount }))\n  return this.send(spendTx, opt)\n}\n\n/**\n * Send a percentage of funds to another account\n * @instance\n * @category async\n * @rtype (percentage: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} percentage - Percentage of amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function transferFunds (percentage, recipientId, options = { excludeFee: false }) {\n  if (percentage < 0 || percentage > 1) throw new Error(`Percentage should be a number between 0 and 1, got ${percentage}`)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const requestTransferAmount = BigNumber(await this.balance(await this.address())).times(percentage)\n  let spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount: requestTransferAmount }))\n\n  const { tx: txObject } = TxBuilder.unpackTx(spendTx)\n  // If the requestTransferAmount should include the fee keep calculating the fee\n  let amount = requestTransferAmount\n  if (!options.excludeFee) {\n    while (amount.plus(txObject.fee).gt(requestTransferAmount)) {\n      amount = requestTransferAmount.minus(txObject.fee)\n    }\n  }\n\n  // Rebuild tx\n  spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount }))\n\n  return this.send(spendTx, opt)\n}\n\n/**\n * Remove all listeners for RPC\n * @instance\n * @return {void}\n */\nfunction destroyInstance () {\n  const destroyMethods = ['destroyClient', 'destroyServer'] // Array with destroy function's\n  destroyMethods.forEach(m => this[m] && typeof this[m] === 'function' && this[m]())\n}\n\n/**\n * Basic Ae Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Ae objects are the composition of three basic building blocks:\n * * {@link module:@aeternity/aepp-sdk/es/tx--Tx}\n * * {@link module:@aeternity/aepp-sdk/es/account--Account}\n * * {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * Only by providing the joint functionality of those three, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Ae instance\n */\nconst Ae = stampit(Tx, Account, Chain, {\n  methods: { send, spend, transferFunds, destroyInstance, signUsingGA },\n  deepProps: { Ae: { defaults: {} } },\n  deepConfiguration: { Ae: { methods: ['signUsingGA'] } }\n})\n\nexport default Ae\n","export const DEFAULT_NETWORK_ID = 'ae_mainnet'\n\nexport const getterForCurrentNode = (currentNode) => {\n  if (!currentNode || !currentNode.instance) throw new Error(`You can't use Node API. Node is not connected or not defined!`)\n\n  return currentNode.instance.api\n}\n\nexport const prepareNodeObject = (name, node) => ({\n  name,\n  instance: node,\n  url: node.url,\n  internalUrl: node.internalUrl,\n  networkId: node.nodeNetworkId,\n  version: node.version,\n  consensusProtocolVersion: node.consensusProtocolVersion\n})\n","/**\n * NodePool module\n * @module @aeternity/aepp-sdk/es/node-pool\n * @export NodePool\n * @example import NodePool from '@aeternity/aepp-sdk/es/node-pool'\n */\nimport Node from '../node'\nimport { DEFAULT_NETWORK_ID, getterForCurrentNode, prepareNodeObject } from './helpers'\nimport AsyncInit from '../utils/async-init'\n\n/**\n * Node Pool Stamp\n * This stamp allow you to make basic manipulation(add, remove, select) on list of nodes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node-pool\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.nodes] - Array with Node instances\n * @return {Object} NodePool instance\n */\nexport const NodePool = AsyncInit.compose({\n  async init ({ nodes = [], url = this.url, internalUrl = this.internalUrl } = {}) {\n    this.pool = new Map()\n    this.validateNodes(nodes)\n\n    nodes.forEach(node => {\n      const { name, instance } = node\n      this.pool.set(name, prepareNodeObject(name, instance))\n    })\n    if (nodes.length) this.selectNode(nodes[0].name)\n\n    // DEPRECATED. TODO Remove deprecated param\n    // Prevent BREAKING CHANGES. Support for init params `url`, `internalUrl`\n    if (url) {\n      this.addNode('default', await Node({ url, internalUrl }), true)\n    }\n  },\n  propertyDescriptors: {\n    api: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return getterForCurrentNode(this.selectedNode)\n      }\n    }\n  },\n  methods: {\n    /**\n     * Add Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String, nodeInstance: Object, select: Boolean) => Void\n     * @param {String} name - Node name\n     * @param {Object} nodeInstance - Node instance\n     * @param {Boolean} select - Select this node as current\n     * @return {Void}\n     * @example\n     * nodePool.addNode('testNode', awaitNode({ url, internalUrl }), true) // add and select new node with name 'testNode'\n     */\n    addNode (name, nodeInstance, select = false) {\n      if (this.pool.has(name)) throw new Error(`Node with name ${name} already exist`)\n\n      this.validateNodes([{ name, instance: nodeInstance }])\n\n      this.pool.set(name, prepareNodeObject(name, nodeInstance))\n      if (select || !this.selectedNode) {\n        this.selectNode(name)\n      }\n    },\n    /**\n     * Select Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String) => Void\n     * @param {String} name - Node name\n     * @return {Void}\n     * @example\n     * nodePool.selectNode('testNode')\n     */\n    selectNode (name) {\n      if (!this.pool.has(name)) throw new Error(`Node with name ${name} not in pool`)\n\n      this.selectedNode = this.pool.get(name)\n    },\n    /**\n     * Get NetworkId of current Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => String\n     * @return {String}\n     * @example\n     * nodePool.getNetworkId()\n     */\n    getNetworkId () {\n      return this.networkId || this.selectedNode.networkId || DEFAULT_NETWORK_ID\n    },\n    /**\n     * Check if you have selected node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Boolean\n     * @return {Boolean}\n     * @example\n     * nodePool.isNodeConnected()\n     */\n    isNodeConnected () {\n      return !!this.selectedNode.instance\n    },\n    /**\n     * Get information about node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object\n     * @return {Object}\n     * @example\n     * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n     */\n    getNodeInfo () {\n      if (!this.isNodeConnected()) throw new Error('Can not get node info. Node is not connected')\n      return {\n        name: this.selectedNode.name,\n        ...this.selectedNode.instance.getNodeInfo()\n      }\n    },\n    /**\n     * Get array of available nodes\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object[]\n     * @return {Object[]}\n     * @example\n     * nodePool.getNodesInPool()\n     */\n    getNodesInPool () {\n      return Array.from(this.pool.entries()).map(([name, node]) => ({\n        name,\n        ...node.instance.getNodeInfo()\n      }))\n    },\n    validateNodes (nodes) {\n      const nodeProps = ['Swagger', 'api', 'consensusProtocolVersion', 'genesisHash', 'methods']\n      nodes.forEach((node, index) => {\n        if (typeof node !== 'object') throw new Error('Node must be an object with \"name\" and \"instance\" props')\n        if (['name', 'instance'].find(k => !node[k])) throw new Error(`Node object on index ${index} must contain node \"name\" and \"ins\"`)\n        if (!node.instance || typeof node.instance !== 'object' || nodeProps.find(prop => !(prop in node.instance))) {\n          throw new Error('Invalid node instance object')\n        }\n      })\n    }\n  },\n  props: {\n    selectedNode: {}\n  }\n})\n\nexport default NodePool\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\n\nfunction asyncInit (options = {}, { stamp, args, instance }) {\n  return stamp.compose.deepConfiguration.AsyncInit.initializers.reduce(async (instance, init) => {\n    instance = await Promise.resolve(instance)\n    if (typeof init === 'function') {\n      const ret = await Promise.resolve(init.call(instance, options, { stamp, args, instance }))\n      return ret === undefined ? instance : ret\n    }\n    return instance\n  }, instance)\n}\n\nconst AsyncInit = stampit({\n  deepConf: { AsyncInit: { initializers: [] } },\n  composers ({ stamp, composables }) {\n    const conf = stamp.compose.deepConfiguration.AsyncInit\n    conf.initializers = R.without([asyncInit], R.uniqWith(R.identical, R.flatten(composables.map(c => R.path(['compose', 'deepConfiguration', 'AsyncInit', 'initializers'], c) || (c.compose || c).initializers || []))))\n    stamp.compose.initializers = [asyncInit]\n  }\n})\n\nexport default AsyncInit\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as R from 'ramda'\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeToPascal (s) {\n  return s.replace(/_./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeOrKebabToPascal (s) {\n  return s.replace(/[_|-]./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function pascalToSnake (s) {\n  return s.replace(/[A-Z]/g, match => `_${R.toLower(match)}`)\n}\n\n/**\n * Check whether a string is valid hex.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid hex, false otherwise.\n */\nexport function isHex (str) {\n  return !!(str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i))\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _isArguments = /*#__PURE__*/require('./internal/_isArguments');\n\n// cover IE < 9 keys issues\n\n\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nmodule.exports = keys;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\n\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nmodule.exports = path;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Account module\n * @module @aeternity/aepp-sdk/es/account\n * @export Account\n * @example import Account from '@aeternity/aepp-sdk/es/account'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\nimport * as Crypto from '../utils/crypto'\nimport { buildTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\n\nconst DEFAULT_NETWORK_ID = `ae_mainnet`\n\n/**\n * Sign encoded transaction\n * @instance\n * @category async\n * @rtype (tx: String) => tx: Promise[String], throws: Error\n * @param {String} tx - Transaction to sign\n * @param {Object} opt - Options\n * @return {String} Signed transaction\n */\nasync function signTransaction (tx, opt = {}) {\n  const networkId = this.getNetworkId()\n  const rlpBinaryTx = Crypto.decodeBase64Check(Crypto.assertedType(tx, 'tx'))\n  // Prepend `NETWORK_ID` to begin of data binary\n  const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpBinaryTx])\n\n  const signatures = [await this.sign(txWithNetworkId, opt)]\n  return buildTx({ encodedTx: rlpBinaryTx, signatures }, TX_TYPE.signed).tx\n}\n\n/**\n * Obtain networkId for signing\n * @instance\n * @category async\n * @rtype () => networkId: String\n * @return {String} NetworkId\n */\nfunction getNetworkId () {\n  return this.networkId || (this.selectedNode ? this.selectedNode.networkId : false) || DEFAULT_NETWORK_ID\n}\n\n/**\n * Basic Account Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Account is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides access to a\n * signing key pair.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.networkId - NETWORK_ID using for signing transaction's\n * @return {Object} Account instance\n */\nconst Account = stampit({\n  init ({ networkId }) { // NETWORK_ID using for signing transaction's\n    if (!this.networkId && networkId) {\n      this.networkId = networkId\n    }\n  },\n  methods: { signTransaction, getNetworkId },\n  deepConf: {\n    Ae: {\n      methods: ['sign', 'address', 'signTransaction', 'getNetworkId']\n    }\n  }\n}, required({ methods: {\n  sign: required,\n  address: required\n} }))\n\n/**\n * Sign data blob\n * @function sign\n * @instance\n * @abstract\n * @category async\n * @rtype (data: String) => data: Promise[String]\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\n\n/**\n * Obtain account address\n * @function address\n * @instance\n * @abstract\n * @category async\n * @rtype () => address: Promise[String]\n * @return {String} Public account address\n */\n\nexport default Account\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import Contract from '@aeternity/aepp-sdk/es/ae/contract' (Using tree-shaking)\n * @example import { Contract } from '@aeternity/aepp-sdk' (Using bundle)\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { isBase64 } from '../utils/crypto'\nimport ContractCompilerAPI from '../contract/compiler'\nimport ContractBase from '../contract'\nimport ContractACI from '../contract/aci'\nimport BigNumber from 'bignumber.js'\nimport NodePool from '../node-pool'\n\n/**\n * Handle contract call error\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {Object} result call result object\n * @throws Error Decoded error\n * @return {Promise<void>}\n */\nasync function handleCallError (result) {\n  const error = Buffer.from(result.returnValue).toString()\n  if (isBase64(error.slice(3))) {\n    const decodedError = Buffer.from(error.slice(3), 'base64').toString()\n    throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n  }\n\n  const decodedError = await this.contractDecodeDataAPI('string', error)\n  throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n}\n/**\n * Encode call data for contract call\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call\n * @return {Promise<String>}\n */\nasync function contractEncodeCall (source, name, args) {\n  return this.contractEncodeCallDataAPI(source, name, args)\n}\n\n/**\n * Decode contract call result data\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source - source code\n * @param {String } fn - function name\n * @param {String} callValue - result call data\n * @param {String} callResult - result status\n * @return {Promise<String>} Result object\n * @example\n * const decodedData = await client.contractDecodeData(SourceCode ,'functionName', 'cb_asdasdasd...', 'ok|revert')lt\n * @param options\n */\nasync function contractDecodeData (source, fn, callValue, callResult, options) {\n  return this.contractDecodeCallResultAPI(source, fn, callValue, callResult, options)\n}\n\n/**\n * Static contract call(using dry-run)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args  Argument's for call function\n * @param {Object} options [options={}]  Options\n * @param {String} top [options.top] Block hash on which you want to call contract\n * @param {String} options [options.options]  Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCallStatic(source, address, fnName, args = [], { top, options = {} })\n * {\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCallStatic (source, address, name, args = [], { top, options = {} } = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = opt.onAccount\n    ? await this.address(opt)\n    : await this.address().catch(e => opt.dryRunAccount.pub)\n\n  // Get block hash by height\n  if (top && !isNaN(top)) {\n    top = (await this.getKeyBlock(top)).hash\n  }\n\n  // Prepare `call` transaction\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId,\n    contractId: address,\n    callData: await this.contractEncodeCall(source, name, args),\n    nonce: top ? (await this.getAccount(callerId, { hash: top })).nonce + 1 : undefined\n  }))\n\n  // Dry-run\n  const dryRunAmount = BigNumber(opt.dryRunAccount.amount).gt(BigNumber(opt.amount || 0)) ? opt.dryRunAccount.amount : opt.amount\n  const dryRunAccount = {\n    amount: dryRunAmount,\n    pubKey: callerId\n  }\n  const [{ result: status, callObj, reason }] = (await this.txDryRun([tx], [dryRunAccount], top)).results\n\n  // check response\n  if (status !== 'ok') throw new Error('Dry run error, ' + reason)\n  const { returnType, returnValue } = callObj\n  if (returnType !== 'ok') {\n    await this.handleCallError(callObj)\n  }\n  return {\n    result: callObj,\n    decode: () => this.contractDecodeData(source, name, returnValue, returnType, options)\n  }\n}\n\n/**\n * Call contract function\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call function\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCall(source, address, fnName, args = [], options)\n * {\n *   hash: TX_HASH,\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCall (source, address, name, args = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId: await this.address(opt),\n    contractId: address,\n    callData: await this.contractEncodeCall(source, name, args)\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return {\n      hash,\n      rawTx,\n      result,\n      decode: () => this.contractDecodeData(source, name, result.returnValue, result.returnType)\n    }\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Deploy contract to the node\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} code Compiled contract\n * @param {String} source Contract source code\n * @param {Array} initState Arguments of contract constructor(init) function\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const deployed = await client.contractDeploy(bytecode, source, init = [], options)\n * {\n *   owner: OWNER_PUB_KEY,\n *   transaction: TX_HASH,\n *   address: CONTRACT_ADDRESS,\n *   createdAt: Date,\n *   result: DEPLOY_TX_DATA,\n *   call: (fnName, args = [], options) => Call contract function,\n *   callStatic: (fnName, args = [], options) => Static all contract function\n * }\n */\nasync function contractDeploy (code, source, initState = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callData = await this.contractEncodeCall(source, 'init', initState)\n  const ownerId = await this.address(opt)\n\n  const { tx, contractId } = await this.contractCreateTx(R.merge(opt, {\n    callData,\n    code,\n    ownerId\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return Object.freeze({\n      result,\n      owner: ownerId,\n      transaction: hash,\n      rawTx,\n      address: contractId,\n      call: async (name, args = [], options) => this.contractCall(source, contractId, name, args, R.merge(opt, options)),\n      callStatic: async (name, args = [], options = {}) => this.contractCallStatic(source, contractId, name, args, { ...options, options: { onAccount: opt.onAccount, ...options.options } }),\n      createdAt: new Date()\n    })\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Compile contract source code\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract sourece code\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const compiled = await client.contractCompile(SOURCE_CODE)\n * {\n *   bytecode: CONTRACT_BYTE_CODE,\n *   deploy: (init = [], options = {}) => Deploy Contract,\n *   encodeCall: (fnName, args = []) => Prepare callData\n * }\n */\nasync function contractCompile (source, options = {}) {\n  const bytecode = await this.compileContractAPI(source, options)\n  return Object.freeze(Object.assign({\n    encodeCall: async (name, args) => this.contractEncodeCall(source, name, args),\n    deploy: async (init, options = {}) => this.contractDeploy(bytecode, source, init, options)\n  }, { bytecode }))\n}\n\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import Transaction from '@aeternity/aepp-sdk/es/tx/tx\n * import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory\n * import ChainNode from '@aeternity/aepp-sdk/es/chain/node\n * import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler\n * // or using bundle\n * import {\n *   Transaction,\n *   MemoryAccount,\n *   ChainNode,\n *   ContractCompilerAPI\n * } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n *    .compose(ContractCompilerAPI) // ContractBase implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\nexport const ContractAPI = Ae.compose(ContractBase, ContractACI, {\n  methods: {\n    contractCompile,\n    contractCallStatic,\n    contractDeploy,\n    contractCall,\n    contractEncodeCall,\n    contractDecodeData,\n    handleCallError\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        deposit: 0,\n        gasPrice: 1000000000, // min gasPrice 1e9\n        amount: 0,\n        gas: 1600000 - 21000,\n        options: '',\n        dryRunAccount: { pub: 'ak_11111111111111111111111111111111273Yts', amount: '100000000000000000000000000000000000' }\n      }\n    }\n  }\n})\n\nexport const Contract = ContractAPI.compose(NodePool)\nexport const ContractWithCompiler = Contract.compose(ContractCompilerAPI)\nexport default ContractWithCompiler\n","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = fromPairs;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains = /*#__PURE__*/_curry2(_includes);\nmodule.exports = contains;","module.exports = __WEBPACK_EXTERNAL_MODULE__30__;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nmodule.exports = _has;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join = /*#__PURE__*/invoker(1, 'join');\nmodule.exports = join;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _toString = /*#__PURE__*/require('./internal/_toString');\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nmodule.exports = toString;","import BigNumber from 'bignumber.js'\n\n/* eslint-disable */\nexport default {\n  stringify: (function () {\n    'use strict';\n\n    function f(n) {\n      // Format integers to have at least two digits.\n      return n < 10 ? '0' + n : n;\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      gap,\n      indent,\n      meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      },\n      rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n      escapable.lastIndex = 0;\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string'\n          ? c\n          : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n      var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key],\n        isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value) || BigNumber(value).toString(10) === value);\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n      if (value && typeof value === 'object' &&\n        typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n      }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n      if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n      }\n\n// What happens next depends on the value's type.\n\n      switch (typeof value) {\n        case 'string':\n          if (isBigNumber) {\n            return value;\n          } else {\n            return quote(value);\n          }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n          return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n          return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n          if (!value) {\n            return 'null';\n          }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n          gap += indent;\n          partial = [];\n\n// Is the value an array?\n\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n            length = value.length;\n            for (i = 0; i < length; i += 1) {\n              partial[i] = str(i, value) || 'null';\n            }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n            v = partial.length === 0\n              ? '[]'\n              : gap\n                ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                : '[' + partial.join(',') + ']';\n            gap = mind;\n            return v;\n          }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n          if (rep && typeof rep === 'object') {\n            length = rep.length;\n            for (i = 0; i < length; i += 1) {\n              if (typeof rep[i] === 'string') {\n                k = rep[i];\n                v = str(k, value);\n                if (v) {\n                  partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                }\n              }\n            }\n          } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n            Object.keys(value).forEach(function(k) {\n              var v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v);\n              }\n            });\n          }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n          v = partial.length === 0\n            ? '{}'\n            : gap\n              ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n              : '{' + partial.join(',') + '}';\n          gap = mind;\n          return v;\n      }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    return function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n      var i;\n      gap = '';\n      indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n      if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n          indent += ' ';\n        }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === 'string') {\n        indent = space;\n      }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== 'function' &&\n        (typeof replacer !== 'object' ||\n          typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n      }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n      return str('', {'': value});\n    };\n  }()),\n  parse: ((options) => {\n    // This is a function that can parse a JSON text, producing a JavaScript\n    // data structure. It is a simple, recursive descent parser. It does not use\n    // eval or regular expressions, so it can be used as a model for implementing\n    // a JSON parser in other languages.\n\n    // We are defining the function inside of another function to avoid creating\n    // global letiables.\n\n    // Default options one can override by passing options to the parse()\n    const _options = {\n      'strict': false, // not being strict means do not generate syntax errors for \"duplicate key\"\n      'storeAsString': false // toggles whether the values should be stored as BigNumber (default) or a string\n    }\n\n    const escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t'\n    }\n\n    // If there are options, then use them to override the default _options\n    if (options !== undefined && options !== null) {\n      if (options.strict === true) {\n        _options.strict = true\n      }\n      if (options.storeAsString === true) {\n        _options.storeAsString = true\n      }\n    }\n\n    let at\n    // The index of the current character\n\n    let ch\n    // The current character\n\n    let text\n\n    let error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text\n      }\n    }\n\n    let next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error('Expected \\'' + c + '\\' instead of \\'' + ch + '\\'')\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at)\n      at += 1\n      return ch\n    }\n\n    let number = function () {\n      // Parse a number value.\n\n      let number\n\n      let string = ''\n\n      if (ch === '-') {\n        string = '-'\n        next('-')\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch\n        next()\n      }\n      if (ch === '.') {\n        string += '.'\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch\n        next()\n        if (ch === '-' || ch === '+') {\n          string += ch\n          next()\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch\n          next()\n        }\n      }\n      number = +string\n      if (!isFinite(number)) {\n        error('Bad number')\n      } else {\n        // if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15) { return string }\n        return number\n      }\n    }\n\n    let string = function () {\n      // Parse a string value.\n\n      let hex\n\n      let i\n\n      let string = ''\n\n      let uffff\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        while (next()) {\n          if (ch === '\"') {\n            next()\n            return string\n          }\n          if (ch === '\\\\') {\n            next()\n            if (ch === 'u') {\n              uffff = 0\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16)\n                if (!isFinite(hex)) {\n                  break\n                }\n                uffff = uffff * 16 + hex\n              }\n              string += String.fromCharCode(uffff)\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch]\n            } else {\n              break\n            }\n          } else {\n            string += ch\n          }\n        }\n      }\n      error('Bad string')\n    }\n\n    let white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next()\n      }\n    }\n\n    let word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t')\n          next('r')\n          next('u')\n          next('e')\n          return true\n        case 'f':\n          next('f')\n          next('a')\n          next('l')\n          next('s')\n          next('e')\n          return false\n        case 'n':\n          next('n')\n          next('u')\n          next('l')\n          next('l')\n          return null\n      }\n      error('Unexpected \\'' + ch + '\\'')\n    }\n\n    let value\n    // Place holder for the value function.\n\n    let array = function () {\n      // Parse an array value.\n\n      let array = []\n\n      if (ch === '[') {\n        next('[')\n        white()\n        if (ch === ']') {\n          next(']')\n          return array // empty array\n        }\n        while (ch) {\n          array.push(value())\n          white()\n          if (ch === ']') {\n            next(']')\n            return array\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad array')\n    }\n\n    let object = function () {\n      // Parse an object value.\n\n      let key\n\n      let object = {}\n\n      if (ch === '{') {\n        next('{')\n        white()\n        if (ch === '}') {\n          next('}')\n          return object // empty object\n        }\n        while (ch) {\n          key = string()\n          white()\n          next(':')\n          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {\n            error('Duplicate key \"' + key + '\"')\n          }\n          object[key] = value()\n          white()\n          if (ch === '}') {\n            next('}')\n            return object\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad object')\n    }\n\n    value = function () {\n      // Parse a JSON value. It could be an object, an array, a string, a number,\n      // or a word.\n\n      white()\n      switch (ch) {\n        case '{':\n          return object()\n        case '[':\n          return array()\n        case '\"':\n          return string()\n        case '-':\n          return number()\n        default:\n          return ch >= '0' && ch <= '9' ? number() : word()\n      }\n    }\n\n    // Return the json_parse function. It will have access to all of the above\n    // functions and letiables.\n\n    return function (source, reviver) {\n      let result\n\n      text = source + ''\n      at = 0\n      ch = ' '\n      result = value()\n      white()\n      if (ch) {\n        error('Syntax error')\n      }\n\n      // If there is a reviver function, we recursively walk the new structure,\n      // passing each name/value pair to the reviver function for possible\n      // transformation, starting with a temporary root object that holds the result\n      // in an empty key. If there is not a reviver function, we simply return the\n      // result.\n\n      return typeof reviver === 'function'\n        ? (function walk (holder, key) {\n          let k; let v; let value = holder[key]\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k)\n              if (v !== undefined) {\n                value[k] = v\n              } else {\n                delete value[k]\n              }\n            })\n          }\n          return reviver.call(holder, key, value)\n        }({ '': result }, ''))\n        : result\n    }\n  })()\n}\n","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nmodule.exports = type;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar map = /*#__PURE__*/require('./map');\n\nvar prop = /*#__PURE__*/require('./prop');\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nmodule.exports = pluck;","var _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isTransformer = /*#__PURE__*/require('./_isTransformer');\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__39__;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nmodule.exports = mapObjIndexed;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts module\n * @module @aeternity/aepp-sdk/es/accounts\n * @export Accounts\n * @example import Accounts from '@aeternity/aepp-sdk/es/accounts'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from './utils/async-init'\nimport * as R from 'ramda'\nimport MemoryAccount from './account/memory'\nimport Selector from './account/selector'\nimport { envKeypair, generateKeyPair } from './utils/crypto'\n\n/**\n * Select specific account\n * @deprecated\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (keypair: {publicKey: String, secretKey: String}) => Void\n * @param {Object} keypair - Key pair to use\n * @param {String} keypair.publicKey - Public key\n * @param {String} keypair.secretKey - Private key\n * @return {Void}\n * @example setKeypair(keypair)\n */\nfunction setKeypair (keypair) {\n  const acc = this.accounts[this.Selector.address] || this._acc\n  if (keypair.hasOwnProperty('priv') && keypair.hasOwnProperty('pub')) {\n    keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n    console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n  }\n  acc.setSecret(keypair)\n  this.accounts[keypair.publicKey] = acc\n  delete this.accounts[this.Selector.address]\n  this.selectAccount(keypair.publicKey)\n}\n\n/**\n * Sign data blob with specific key\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (address: String, data: String) => data: Promise[String], throws: Error\n * @param {String} address - Public key of account to sign with\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\nasync function signWith (address, data) {\n  const account = this.accounts[address]\n\n  if (account === undefined) {\n    throw Error(`Account for ${address} not available`)\n  }\n\n  return account.sign(data)\n}\n\n/**\n * Add specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (account: Account, { select: Boolean }) => Void\n * @param {Object} account - Account instance\n * @param {Object} [options={}] - Options\n * @param {Boolean} [options.select] - Select account\n * @return {Void}\n * @example addAccount(account)\n */\nasync function addAccount (account, { select } = {}) {\n  const address = await account.address()\n  this.accounts[address] = account\n  if (select) this.selectAccount(address)\n}\n\n/**\n * Remove specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to remove\n * @return {Void}\n * @example removeAccount(address)\n */\nfunction removeAccount (address) {\n  if (this.accounts[address]) delete this.accounts[address]\n  if (this.Selector.address === address) this.Selector.address = undefined\n}\n\n/**\n * Get accounts addresses\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype () => String[]\n * @return {String[]}\n * @example addresses()\n */\nfunction addresses () {\n  return Object.keys(this.accounts)\n}\n\n/**\n * Accounts Stamp\n *\n * The purpose of the Accounts Stamp is to wrap up\n * {@link module:@aeternity/aepp-sdk/es/account--Account} objects and provide a\n * common interface to all of them. Accounts are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @return {Object} Accounts instance\n * @example\n * const accounts = await Accounts({ accounts: [ MemmoryAccount({ keypair: 'keypair_object' }) ] })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\nconst Accounts = stampit(AsyncInit, {\n  async init ({ accounts = [], keypair }) { // Deprecated. TODO Remove `keypair` param\n    this.accounts = R.fromPairs(await Promise.all(accounts.map(async a => [await a.address(), a])))\n    keypair = keypair || envKeypair(process.env, true)\n    if (keypair) {\n      await this.addAccount(await MemoryAccount({ keypair }), { select: !this.Selector.address })\n    }\n    // @Todo Remove after removing depricated `setKeypair` fn.\n    //  Prevent BREAKING CHANGES\n    //  Pre-init memoryAccount object to prevent async operation in `setKeypair` function\n    this._acc = await MemoryAccount({ keypair: generateKeyPair() })\n  },\n  props: {\n    accounts: {}\n  },\n  methods: { signWith, addAccount, removeAccount, setKeypair, addresses }\n}, Selector)\n\nexport default Accounts\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Tx module\n * @module @aeternity/aepp-sdk/es/tx\n * @export Tx\n * @example import Tx from '@aeternity/aepp-sdk/es/tx'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Tx Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Tx is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides methods to\n * create aeternity transactions.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Tx instance\n * @example Tx()\n */\nconst Tx = stampit({\n  deepConf: {\n    Ae: {\n      methods: [\n        'spendTx', 'namePreclaimTx', 'nameClaimTx', 'nameTransferTx',\n        'nameUpdateTx', 'nameRevokeTx', 'contractCreateTx', 'contractCallTx',\n        'oracleRegisterTx', 'oracleExtendTx', 'oraclePostQueryTx', 'oracleRespondTx', 'getAccountNonce',\n        'channelCloseSoloTx', 'channelSlashTx', 'channelSettleTx', 'channelSnapshotSoloTx', 'gaAttachTx', 'getVmVersion', 'prepareTxParams'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    spendTx: required,\n    namePreclaimTx: required,\n    nameClaimTx: required,\n    nameTransferTx: required,\n    nameUpdateTx: required,\n    nameRevokeTx: required,\n    contractCreateTx: required,\n    contractCallTx: required,\n    oracleRegisterTx: required,\n    oracleExtendTx: required,\n    oraclePostQueryTx: required,\n    oracleRespondTx: required,\n    getAccountNonce: required,\n    channelCloseSoloTx: required,\n    channelSlashTx: required,\n    channelSettleTx: required,\n    channelSnapshotSoloTx: required,\n    gaAttachTx: required,\n    getVmVersion: required,\n    prepareTxParams: required\n  }\n}))\n\n/**\n * Create a `spend_tx` transaction\n * @function spendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({sender?: String, recipientId: String, amount: Number, fee?: Number, ttl?: Number, nonce?: Number, payload?: String}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `spend_tx` transaction\n */\n\n/**\n * Create a `name_preclaim_tx` transaction\n * @function namePreclaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, commitment: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_preclaim_tx` transaction\n */\n\n/**\n * Create a `name_claim_tx` transaction\n * @function nameClaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, name: String, nameSalt: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_claim_tx` transaction\n */\n\n/**\n * Create a `name_transfer_tx` transaction\n * @function nameTransferTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, recipientId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_transfer_tx` transaction\n */\n\n/**\n * Create a `name_update_tx` transaction\n * @function nameUpdateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, pointers: Object, nameTtl: Number, clientTtl: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_update_tx` transaction\n */\n\n/**\n * Create a `name_revoke_tx` transaction\n * @function nameRevokeTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_revoke_tx` transaction\n */\n\n/**\n * Create a `contract_create_tx` transaction\n * @function contractCreateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({owner: String, code: String, callData: String, vmVersion: Number, deposit: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_create_tx` transaction\n */\n\n/**\n * Create a `contract_call_tx` transaction\n * @function contractCallTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({callerId: String, contract: String, callData: String, vmVersion: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_call_tx` transaction\n */\n\n/**\n * Create a `oracle_register_tx` transaction\n * @function oracleRegisterTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ accountId: String, queryFormat: String, responseFormat: String, queryFee: String|Number, oracleTtl: Object, vmVersion: Number = ORACLE_VM_VERSION, fee?: Number, ttl?: Number, nonce?: Number }) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_register_tx` transaction\n */\n\n/**\n * Create a `oracle_extend_tx` transaction\n * @function oracleExtendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, oracleTtl: Object, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_extend_tx` transaction\n */\n\n/**\n * Create a `oracle_post_query_tx` transaction\n * @function oraclePostQuery\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, responseTtl: Object, query: String, queryTtl: Object, queryFee: String|Number, senderId: String, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_post_query_tx` transaction\n */\n\n/**\n * Create a `oracle_respond_tx` transaction\n * @function oracleRespondTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, responseTtl: Object, queryId: String, response: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_respond_tx` transaction\n */\n\n/**\n * Get Account Nonce\n * @function getAccountNonce\n * @instance\n * @abstract\n * @category async\n * @rtype (address) => result: Number\n * @param {String} address - Account public key\n * @return {Number} Result\n */\n\nexport default Tx\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Chain module\n * @module @aeternity/aepp-sdk/es/chain\n * @export Chain\n * @example import Chain from '@aeternity/aepp-sdk/es/chain'\n */\n\nimport Oracle from '../oracle'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Chain Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Chain instance\n */\nconst Chain = Oracle.compose({\n  deepProps: { Chain: { defaults: { waitMined: true } } },\n  statics: { waitMined (bool) { return this.deepProps({ Chain: { defaults: { waitMined: bool } } }) } },\n  deepConf: {\n    Ae: {\n      methods: [\n        'sendTransaction', 'height', 'awaitHeight', 'poll', 'balance', 'tx',\n        'mempool', 'topBlock', 'getTxInfo', 'txDryRun', 'getName', 'getNodeInfo', 'getAccount'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    sendTransaction: required,\n    height: required,\n    awaitHeight: required,\n    topBlock: required,\n    poll: required,\n    balance: required,\n    tx: required,\n    getTxInfo: required,\n    mempool: required,\n    txDryRun: required,\n    getAccount: required\n  }\n}))\n\n/**\n * Reconfigure Stamp to (not) wait until transactions are mined\n * @function waitMined\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to wait for transactions\n * @return {Stamp} Reconfigured Chain Stamp\n */\n\n/**\n * Submit a signed transaction for mining\n * @function sendTransaction\n * @instance\n * @abstract\n * @category async\n * @rtype (tx: String, options?: Object) => tx: Promise[Object]|txHash: Promise[String]\n * @param {String} tx - Transaction to submit\n * @param {String} [options={}] - Options to pass to the implementation\n * @param {String} [options.verify = false] - Verify transaction before broadcast.\n * @return {Object|String} Transaction or transaction hash\n */\n\n/**\n * Obtain current height of the chain\n * @function height\n * @instance\n * @abstract\n * @category async\n * @rtype () => height: Number\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for the chain to reach a specific height\n * @function awaitHeight\n * @instance\n * @abstract\n * @category async\n * @rtype (height: Number, options?: Object) => height: Number\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.attempts - Number of polling attempts after which to fail\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for a transaction to be mined\n * @function poll\n * @instance\n * @abstract\n * @category async\n * @rtype (th: String, options?: Object) => tx: Object\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.blocks - Number of blocks mined after which to fail\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Request the balance of specified account\n * @function balance\n * @instance\n * @abstract\n * @category async\n * @rtype (address: String, options?: Object) => balance: Number\n * @param {String} address - The public account address to obtain the balance for\n * @param {Object} [options={}] - Options\n * @param {Number} options.height - The chain height at which to obtain the balance for (default: top of chain)\n * @param {String} options.hash - The block hash on which to obtain the balance for (default: top of chain)\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Obtain a transaction based on its hash\n * @function tx\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String, info = false) => tx: Object\n * @param {String} hash - Transaction hash\n * @param {Boolean} info - Retrieve additional transaction date. Works only for (ContractCreate and ContractCall transaction's)\n * @return {Object} Transaction\n */\n\n/**\n * Obtain a transaction info based on its hash\n * @function getTxInfo\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String) => tx: Object\n * @param {String} hash - Transaction hash\n * @return {Object} Transaction\n */\n\n/**\n * Obtain transaction's from mempool\n * @function mempool\n * @instance\n * @abstract\n * @category async\n * @rtype () => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Obtain current generation\n * @function getCurrentGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype () => generation: Object\n * @return {Object} Current Generation\n */\n\n/**\n * Get generation by hash or height\n * @function getGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => generation: Object\n * @param {String|Number} hashOrHeight - Generation hash or height\n * @return {Object} Generation\n */\n\n/**\n * Get micro block transactions\n * @function getMicroBlockTransactions\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Get key block\n * @function getKeyBlock\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => keyBlock: Object\n * @return {Object} Key Block\n */\n\n/**\n * Get micro block header\n * @function getMicroBlockHeader\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => header: Object\n * @return {Object} Micro block header\n */\n\n/**\n * Get account by account public key\n * @function getAccount\n * @instance\n * @abstract\n * @category async\n * @rtype (address, { hash, height }) => account: Object\n * @param {String} address - Account public key\n * @param {Object} [options={}] - Options\n * @param {Number} [options.height] - Get account on specific block by block height\n * @param {String} [options.hash] - Get account on specific block by block hash\n * @return {Object} Account\n */\n\n/**\n * Transaction dry-run\n * @function txDryRun\n * @instance\n * @abstract\n * @category async\n * @rtype (txs, accounts, hashOrHeight) => result: Object\n * @param {Array} txs - Array of transaction's\n * @param {Array} accounts - Array of account's\n * @param {String|Number} hashOrHeight - hash or height of block on which to make dry-run\n * @return {Object} Result\n */\n\n/**\n * Get Node Info\n * @function getInfo\n * @instance\n * @abstract\n * @category async\n * @rtype () => result: Object\n * @return {Object} Result\n */\n\nexport default Chain\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import Aens from '@aeternity/aepp-sdk/es/ae/aens'\n */\n\nimport * as R from 'ramda'\nimport { encodeBase58Check, salt } from '../utils/crypto'\nimport { commitmentHash } from '../tx/builder/helpers'\nimport Ae from './'\n\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} nameId\n * @param {String} account\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function transfer (nameId, account, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameTransferTx = await this.nameTransferTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt),\n    recipientId: account\n  }))\n\n  return this.send(nameTransferTx, opt)\n}\n\n/**\n * Revoke a domain\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} nameId\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function revoke (nameId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameRevokeTx = await this.nameRevokeTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt)\n  }))\n\n  return this.send(nameRevokeTx, opt)\n}\n\n/**\n * What kind of a hash is this? If it begins with 'ak_' it is an\n * account key, if with 'ok_' it's an oracle key.\n *\n * @param s - the hash.\n * returns the type, or throws an exception if type not found.\n */\nfunction classify (s) {\n  const keys = {\n    ak: 'account_pubkey',\n    ok: 'oracle_pubkey'\n  }\n\n  if (!s.match(/^[a-z]{2}_.+/)) {\n    throw Error('Not a valid hash')\n  }\n\n  const klass = s.substr(0, 2)\n  if (klass in keys) {\n    return keys[klass]\n  } else {\n    throw Error(`Unknown class ${klass}`)\n  }\n}\n\n/**\n * Update an aens entry\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param nameId domain hash\n * @param target new target\n * @param options\n * @return {Object}\n */\nasync function update (nameId, target, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const nameUpdateTx = await this.nameUpdateTx(R.merge(opt, {\n    nameId: nameId,\n    accountId: await this.address(opt),\n    pointers: [R.fromPairs([['id', target], ['key', classify(target)]])]\n  }))\n\n  return this.send(nameUpdateTx, opt)\n}\n\n/**\n * Query the status of an AENS registration\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @return {Promise<Object>}\n */\nasync function query (name, opt = {}) {\n  const o = await this.getName(name)\n  const nameId = o.id\n\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || {},\n    update: async (target, options) => {\n      return {\n        ...(await this.aensUpdate(nameId, target, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    transfer: async (account, options) => {\n      return {\n        ...(await this.aensTransfer(nameId, account, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    revoke: async (options) => this.aensRevoke(nameId, R.merge(opt, options))\n  }))\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {String} salt\n * @param {Record} [options={}]\n * @return {Promise<Object>} the result of the claim\n */\nasync function claim (name, salt, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const claimTx = await this.nameClaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name: `nm_${encodeBase58Check(Buffer.from(name))}`\n  }))\n\n  const result = await this.send(claimTx, opt)\n\n  return {\n    ...result,\n    ...opt.waitMined && await this.aensQuery(name, opt)\n  }\n}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @param {Record} [options={}]\n * @return {Promise<Object>}\n */\nasync function preclaim (name, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const _salt = salt()\n  const height = await this.height()\n  const hash = await commitmentHash(name, _salt)\n\n  const preclaimTx = await this.namePreclaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    commitmentId: hash\n  }))\n\n  const result = await this.send(preclaimTx, opt)\n\n  return Object.freeze({\n    ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options, onAccount: opt.onAccount }),\n    salt: _salt,\n    commitmentId: hash\n  })\n}\n\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke\n  },\n  deepProps: { Ae: { defaults: {\n    clientTtl: 1,\n    nameTtl: 50000 // aec_governance:name_claim_max_expiration() => 50000\n  } } }\n})\n\nexport default Aens\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract Base module\n * @module @aeternity/aepp-sdk/es/contract\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/contract'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Contract Stamp\n *\n * This stamp include api call's related to contract functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n */\nconst ContractBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'contractEncodeCallDataAPI',\n        'contractDecodeDataAPI',\n        'compileContractAPI',\n        'contractDecodeCallDataBySourceAPI',\n        'contractDecodeCallDataByCodeAPI',\n        'contractGetACI',\n        'setCompilerUrl',\n        'getCompilerVersion',\n        'contractDecodeCallResultAPI'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    contractEncodeCallDataAPI: required,\n    contractDecodeDataAPI: required,\n    compileContractAPI: required,\n    contractGetACI: required,\n    setCompilerUrl: required,\n    getCompilerVersion: required,\n    contractDecodeCallResultAPI: required\n  }\n}))\n\n/**\n * Encode contract data\n * @function contractEncodeCallDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, name: String, args: Array) => callData: Promise[String]\n * @param {String} source - Contract source code\n * @param {String} name - Function name\n * @param {Array} args - Function argument's\n * @return {String} - Contract encoded data\n */\n\n/**\n * Decode data\n * @function contractDecodeDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (type: String, data: String) => decodedResult: Promise[String]\n * @param {String} type - Contract call result type\n * @param {String} data - Encoded contract call result\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode contract call result data\n * @function contractDecodeCallResultAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, fn: String, callValue: String, callResult: String) => decodedResult: Promise[String]\n * @param {String} source - Contract source\n * @param {String} fn - Fn name\n * @param {String} callValue - result data (cb_das...)\n * @param {String} callResult - contract call result status('ok', 'revert', ...)\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode call data by source\n * @function contractDecodeCallDataBySourceAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, function: String, callData: String) => decodedResult: Promise[String]\n * @param {String} source - contract source\n * @param {String} function - function name\n * @param {String} callData - Encoded contract call data\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Decode call data by bytecode\n * @function contractDecodeCallDataByCodeAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, callData: String) => decodedResult: Promise[String]\n * @param {String} code - contract byte code\n * @param {String} callData - Encoded contract call data\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Compile contract\n * @function compileContractAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, options?: Object) => compiledContract: Object\n * @param {String} code - Contract source code\n * @param {Object} [options={}] - Options\n * @return {Object} Object which contain bytecode of contract\n */\n\n/**\n * Set compiler url\n * @function setCompilerUrl\n * @instance\n * @abstract\n * @category async\n * @rtype (url: String) => void\n * @param {String} url - Compiler url\n * @return {void}\n */\n\n/**\n * Get Compiler Version\n * @function getCompilerVersion\n * @instance\n * @abstract\n * @category async\n * @rtype () => String\n * @return {String} Compiler version\n */\n\nexport default ContractBase\n","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar path = /*#__PURE__*/require('./path');\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nmodule.exports = prop;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last = /*#__PURE__*/nth(-1);\nmodule.exports = last;","module.exports = __WEBPACK_EXTERNAL_MODULE__48__;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\nvar _xwrap = /*#__PURE__*/require('./_xwrap');\n\nvar bind = /*#__PURE__*/require('../bind');\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\nmodule.exports = _reduce;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\nmodule.exports = _curry3;","var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory'\n */\n\nimport Account from './'\nimport * as Crypto from '../utils/crypto'\nimport { isHex } from '../utils/string'\nimport { decode } from '../tx/builder/helpers'\n\nconst secrets = new WeakMap()\n\nasync function sign (data) {\n  return Promise.resolve(Crypto.sign(data, secrets.get(this).secretKey))\n}\n\nasync function address (format = Crypto.ADDRESS_FORMAT.api) {\n  return Promise.resolve(Crypto.formatAddress(format, secrets.get(this).publicKey))\n}\n\nfunction setSecret (keyPair) {\n  secrets.set(this, {\n    secretKey: Buffer.isBuffer(keyPair.secretKey) ? keyPair.secretKey : Buffer.from(keyPair.secretKey, 'hex'),\n    publicKey: keyPair.publicKey\n  })\n}\n\nfunction validateKeyPair (keyPair) {\n  if (!keyPair || typeof keyPair !== 'object') throw new Error('KeyPair must be an object')\n  if (keyPair.pub && keyPair.priv) {\n    keyPair = { publicKey: keyPair.pub, secretKey: keyPair.priv }\n  }\n  if (!keyPair.secretKey || !keyPair.publicKey) throw new Error('KeyPair must must have \"secretKey\", \"publicKey\" properties')\n  if (typeof keyPair.publicKey !== 'string' || keyPair.publicKey.indexOf('ak_') === -1) throw new Error('Public Key must be a base58c string with \"ak_\" prefix')\n  if (\n    !Buffer.isBuffer(keyPair.secretKey) &&\n    (typeof keyPair.secretKey === 'string' && !isHex(keyPair.secretKey))\n  ) throw new Error('Secret key must be hex string or Buffer')\n\n  const pubBuffer = Buffer.from(decode(keyPair.publicKey, 'ak'))\n  if (!Crypto.isValidKeypair(Buffer.from(keyPair.secretKey, 'hex'), pubBuffer)) throw new Error('Invalid Key Pair')\n}\n\n/**\n * In-memory `Account` factory\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\nconst MemoryAccount = Account.compose({\n  init ({ keypair }) {\n    validateKeyPair(keypair)\n    if (keypair.hasOwnProperty('priv') && keypair.hasOwnProperty('pub')) {\n      keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n      console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n    }\n\n    this.setSecret(keypair)\n  },\n  methods: { sign, address, setSecret }\n})\n\nexport default MemoryAccount\n","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nmodule.exports = isNil;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nmodule.exports = values;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = pick;","var _indexOf = /*#__PURE__*/require('./_indexOf');\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\nmodule.exports = _includes;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts Selector module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/accounts}.\n * @module @aeternity/aepp-sdk/es/account/selector\n * @export Account\n * @example import Selector from '@aeternity/aepp-sdk/es/account/selector'\n */\n\nimport Account from './'\nimport required from '@stamp/required'\nimport { assertedType } from '../utils/crypto'\n\nasync function sign (data, { onAccount } = {}) {\n  if (onAccount && !assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n  return this.signWith(onAccount || this.Selector.address, data)\n}\n\nasync function address ({ onAccount } = {}) {\n  if (onAccount) {\n    if (!assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n    if (!this.accounts[onAccount]) throw Error(`Account for ${onAccount} not available`)\n    return Promise.resolve(onAccount)\n  }\n  if (this.Selector.address) return Promise.resolve(this.Selector.address)\n  throw new Error('You don\\'t have selected account')\n}\n\n/**\n * Select specific account\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @instance\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to select\n * @example selectAccount('ak_xxxxxxxx')\n */\nfunction selectAccount (address) {\n  if (!address || !assertedType(address, 'ak', true)) throw new Error(`Invalid account address`)\n  if (!this.accounts[address]) throw Error(`Account for ${address} not available`)\n  this.Selector.address = address\n}\n\n/**\n * Selector Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Account} Account instance\n * @example Selector()\n */\nconst Selector = Account.compose({\n  async init ({ address }) {\n    if (!address) address = Object.keys(this.accounts)[0]\n    if (address && !assertedType(address, 'ak', true)) throw new Error(`Invalid account address`)\n    this.Selector.address = address\n  },\n  methods: { sign, address, selectAccount },\n  deepProps: {\n    Selector: {}\n  }\n}, required({\n  methods: { signWith: required }\n}))\n\nexport default Selector\n","import {\n  verify,\n  decodeBase58Check,\n  assertedType\n} from '../utils/crypto'\nimport { encode } from '../tx/builder/helpers'\n\nimport { BigNumber } from 'bignumber.js'\nimport {\n  BASE_VERIFICATION_SCHEMA, CONTRACT_VERIFICATION_SCHEMA, MIN_GAS_PRICE, OBJECT_ID_TX_TYPE,\n  OBJECT_TAG_SIGNED_TRANSACTION, PROTOCOL_VM_ABI,\n  SIGNATURE_VERIFICATION_SCHEMA, TX_TYPE\n} from './builder/schema'\nimport { calculateFee, unpackTx } from './builder'\nimport { NodePool } from '../node-pool'\n\n/**\n * Transaction validator\n * @module @aeternity/aepp-sdk/es/tx/validator\n * @export TransactionValidator\n * @example import TransactionValidator from '@aeternity/aepp-sdk/es/tx/validator'\n */\n\nconst VALIDATORS = {\n  // VALIDATE SIGNATURE\n  signature ({ rlpEncoded, signature, ownerPublicKey, networkId = 'ae_mainnet' }) {\n    const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpEncoded])\n    return verify(txWithNetworkId, signature, decodeBase58Check(assertedType(ownerPublicKey, 'ak')))\n  },\n  // VALIDATE IF ENOUGH FEE\n  insufficientFee ({ minFee, fee }) {\n    return BigNumber(minFee).lte(BigNumber(fee))\n  },\n  // VALIDATE IF TTL VALID\n  expiredTTL ({ ttl, height }) {\n    return BigNumber(ttl).eq(0) || BigNumber(ttl).gte(BigNumber(height))\n  },\n  // Insufficient Balance for Amount plus Fee\n  insufficientBalanceForAmountFee ({ balance, amount = 0, fee }) {\n    return BigNumber(balance).gt(BigNumber(amount).plus(fee))\n  },\n  // Insufficient Balance for Amount\n  insufficientBalanceForAmount ({ balance, amount = 0 }) {\n    return BigNumber(balance).gt(BigNumber(amount))\n  },\n  // IF NONCE USED\n  nonceUsed ({ accountNonce, nonce }) {\n    return BigNumber(nonce).gt(BigNumber(accountNonce))\n  },\n  // IF NONCE TO HIGH\n  nonceHigh ({ accountNonce, nonce }) {\n    return !(BigNumber(nonce).gt(BigNumber(accountNonce).plus(1)))\n  },\n  minGasPrice ({ gasPrice }) {\n    return isNaN(gasPrice) || BigNumber(gasPrice).gte(BigNumber(MIN_GAS_PRICE))\n  },\n  // VM/ABI version validation based on consensus protocol version\n  vmAndAbiVersion ({ ctVersion, abiVersion, consensusProtocolVersion, txType }) {\n    // If not contract tx\n    if (!ctVersion) ctVersion = { abiVersion }\n    const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n    // If protocol not implemented\n    if (!supportedProtocol) return true\n    // If protocol for tx type not implemented\n    const txProtocol = supportedProtocol[txType]\n\n    return !Object.entries(ctVersion)\n      .reduce((acc, [key, value]) =>\n        [...acc, value === undefined ? true : txProtocol[key].includes(parseInt(value))],\n      []).includes(false)\n  }\n}\n\nconst resolveDataForBase = async (chain, { ownerPublicKey }) => {\n  let accountNonce = 0\n  let accountBalance = 0\n  try {\n    const { nonce, balance } = await chain.api.getAccountByPubkey(ownerPublicKey)\n    accountNonce = nonce\n    accountBalance = balance\n  } catch (e) { console.log('We can not get info about this publicKey') }\n  return {\n    height: (await chain.api.getCurrentKeyBlockHeight()).height,\n    balance: accountBalance,\n    accountNonce,\n    ownerPublicKey,\n    ...chain.getNodeInfo()\n  }\n}\n\n// Verification using SCHEMA\nconst verifySchema = (schema, data) => {\n  // Verify through schema\n  return schema.reduce(\n    (acc, [msg, validatorKey, { key, type, txKey }]) => {\n      if (!VALIDATORS[validatorKey](data)) acc.push({ msg: msg(data), txKey, type })\n      return acc\n    },\n    []\n  )\n}\n\n/**\n * Unpack and verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {String} txHash Base64Check transaction hash\n * @param {Object} [options={}] Options\n * @param {String} [options.networkId] networkId Use in signature verification\n * @return {Promise<Object>} Object with verification errors and warnings\n */\nasync function unpackAndVerify (txHash, { networkId } = {}) {\n  const { tx: unpackedTx, rlpEncoded, txType } = unpackTx(txHash)\n\n  if (+unpackedTx.tag === OBJECT_TAG_SIGNED_TRANSACTION) {\n    const { txType, tx } = unpackedTx.encodedTx\n    const signatures = unpackedTx.signatures.map(raw => ({ raw, hash: encode(raw, 'sg') }))\n    const rlpEncodedTx = unpackedTx.encodedTx.rlpEncoded\n\n    return {\n      validation: await this.verifyTx({ tx, signatures, rlpEncoded: rlpEncodedTx }, networkId),\n      tx,\n      signatures,\n      txType\n    }\n  }\n  return {\n    validation: await this.verifyTx({ tx: unpackedTx, rlpEncoded }, networkId),\n    tx: unpackedTx,\n    txType\n  }\n}\n\nconst getOwnerPublicKey = (tx) =>\n  tx[['senderId', 'accountId', 'ownerId', 'callerId', 'oracleId', 'fromId', 'initiator', 'gaId'].find(key => tx[key])].replace('ok_', 'ak_')\n\n/**\n * Verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {Object} [data={}] data TX data object\n * @param {String} [data.tx] tx Transaction hash\n * @param {Array} [data.signatures] signatures Transaction signature's\n * @param {Array} [data.rlpEncoded] rlpEncoded RLP encoded transaction\n * @param {String} networkId networkId Use in signature verification\n * @return {Promise<Array>} Object with verification errors and warnings\n */\nasync function verifyTx ({ tx, signatures, rlpEncoded }, networkId) {\n  networkId = networkId || this.getNetworkId() || 'ae_mainnet'\n  // Fetch data for verification\n  const ownerPublicKey = getOwnerPublicKey(tx)\n  const gas = tx.hasOwnProperty('gas') ? +tx.gas : 0\n  const txType = OBJECT_ID_TX_TYPE[+tx.tag]\n  const resolvedData = {\n    minFee: calculateFee(0, txType, { gas, params: tx, showWarning: false }),\n    ...(await resolveDataForBase(this, { ownerPublicKey })),\n    ...tx,\n    txType\n  }\n  const signatureVerification = signatures && signatures.length\n    ? verifySchema(SIGNATURE_VERIFICATION_SCHEMA, {\n      rlpEncoded,\n      signature: signatures[0].raw,\n      ownerPublicKey,\n      networkId\n    })\n    : []\n  const baseVerification = verifySchema(BASE_VERIFICATION_SCHEMA, resolvedData)\n\n  return [\n    ...baseVerification,\n    ...signatureVerification,\n    ...customVerification(txType, resolvedData)\n  ]\n}\n\n/**\n * Verification for speciific txType\n * @param txType\n * @param data\n * @return {Array}\n */\nfunction customVerification (txType, data) {\n  switch (txType) {\n    case TX_TYPE.contractCreate:\n    case TX_TYPE.contractCall:\n    case TX_TYPE.oracleRegister:\n      return verifySchema(CONTRACT_VERIFICATION_SCHEMA, data)\n    default:\n      return []\n  }\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.url] - Node url\n * @param {Object} [options.internalUrl] - Node internal url\n * @return {Object} Transaction Validator instance\n * @example TransactionValidator({url: 'https://sdk-testnet.aepps.com'})\n */\nconst TransactionValidator = NodePool.compose({\n  methods: {\n    verifyTx,\n    unpackAndVerify\n  }\n})\n\nexport default TransactionValidator\n","import * as R from 'ramda'\n\n/**\n * Get function schema from contract ACI object\n * @param {Object} aci Contract ACI object\n * @param {String} name Function name\n * @return {Object} function ACI\n */\nexport function getFunctionACI (aci, name) {\n  const fn = aci.functions.find(f => f.name === name)\n  if (!fn && name !== 'init') throw new Error(`Function ${name} doesn't exist in contract`)\n\n  return {\n    ...fn,\n    bindings: {\n      state: aci.state,\n      typedef: aci.type_defs,\n      contractName: aci.name\n    }\n  }\n}\n\n/**\n * Build contract methods base on ACI\n * @return {Object} Contract instance methods\n */\nexport const buildContractMethods = (instance) => () => ({\n  ...instance.aci ? {\n    init () {\n      const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n      const { opt, args } = parseArguments(aciArgs)(arguments)\n      return instance.deploy(args, opt)\n    }\n  } : {},\n  ...instance.aci\n    ? instance\n      .aci\n      .functions\n      .reduce(\n        (acc, { name, arguments: aciArgs, stateful }) => ({\n          ...acc,\n          [name]: Object.assign(\n            function () {\n              const { opt, args } = parseArguments(aciArgs)(arguments)\n              if (name === 'init') return instance.deploy(args, opt)\n              return instance.call(name, args, { callStatic: !stateful, ...opt })\n            },\n            {\n              get () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                return instance.call(name, args, { ...opt, callStatic: true })\n              },\n              send () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                if (name === 'init') return instance.deploy(args, opt)\n                return instance.call(name, args, { ...opt, callStatic: false })\n              }\n            }\n          )\n        }),\n        {}\n      )\n    : {}\n})\n\nconst parseArguments = (aciArgs = []) => (args) => ({\n  opt: args.length > aciArgs.length ? R.last(args) : {},\n  args: Object.values(args).slice(0, aciArgs.length)\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export ContractACI\n * @example import ContractACI from '@aeternity/aepp-sdk/es/contract/aci'\n */\n\nimport * as R from 'ramda'\n\nimport { validateArguments, transform, transformDecodedData } from './transformation'\nimport { buildContractMethods, getFunctionACI } from './helpers'\nimport AsyncInit from '../../utils/async-init'\n\n/**\n * Validated contract call arguments using contract ACI\n * @function validateCallParams\n * @rtype (aci: Object, params: Array) => Object\n * @param {Object} aci Contract ACI\n * @param {Array} params Contract call arguments\n * @return Promise{Array} Object with validation errors\n */\nasync function prepareArgsForEncode (aci, params) {\n  if (!aci || !aci.arguments) return params\n  // Validation\n  if (aci.arguments.length > params.length) {\n    throw new Error(`Function \"${aci.name}\" require ${aci.arguments.length} arguments of types [${aci.arguments.map(a => JSON.stringify(a.type))}] but get [${params.map(JSON.stringify)}]`)\n  }\n\n  validateArguments(aci, params)\n  const bindings = aci.bindings\n  // Cast argument from JS to Sophia type\n  return Promise.all(aci.arguments.map(async ({ type }, i) => transform(type, params[i], {\n    bindings\n  })))\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {String} source Contract source code\n * @param {Object} [options] Options object\n * @param {Object} [options.aci] Contract ACI\n * @param {Object} [options.contractAddress] Contract address\n * @param {Object} [options.opt] Contract options\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await client.getContractInstance(sourceCode)\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is stateful or not\n */\nasync function getContractInstance (source, { aci, contractAddress, opt } = {}) {\n  aci = aci || await this.contractGetACI(source)\n  const defaultOptions = {\n    skipArgsConvert: false,\n    skipTransformDecoded: false,\n    callStatic: false,\n    deposit: 0,\n    gasPrice: 1000000000, // min gasPrice 1e9\n    amount: 0,\n    gas: 1600000 - 21000,\n    top: null, // using for contract call static\n    waitMined: true,\n    verify: false\n  }\n  const instance = {\n    interface: R.defaultTo(null, R.prop('interface', aci)),\n    aci: R.defaultTo(null, R.path(['encoded_aci', 'contract'], aci)),\n    source,\n    compiled: null,\n    deployInfo: { address: contractAddress },\n    options: R.merge(defaultOptions, opt),\n    compilerVersion: this.compilerVersion,\n    setOptions (opt) {\n      this.options = R.merge(this.options, opt)\n    }\n  }\n\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.compile = compile({ client: this, instance })\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false }) => ContractInstance: Object\n   * @param {Array} init Contract init function arguments array\n   * @param {Object} [options={}] options Options object\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.deploy = deploy({ client: this, instance })\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false, skipTransformDecoded: false, callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @param {Boolean} [options.skipTransformDecoded=false] Skip Transform decoded data to JS type\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n  instance.call = call({ client: this, instance })\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n  instance.methods = buildContractMethods(instance)()\n  return instance\n}\n\nconst call = ({ client, instance }) => async (fn, params = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, fn)\n  const source = opt.source || instance.source\n\n  if (!fn) throw new Error('Function name is required')\n  if (!instance.deployInfo.address) throw new Error('You need to deploy contract before calling!')\n\n  params = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, params) : params\n  const result = opt.callStatic\n    ? await client.contractCallStatic(source, instance.deployInfo.address, fn, params, {\n      top: opt.top,\n      options: opt\n    })\n    : await client.contractCall(source, instance.deployInfo.address, fn, params, opt)\n  return {\n    ...result,\n    decodedResult: await transformDecodedData(\n      fnACI.returns,\n      await result.decode(),\n      { ...opt, compilerVersion: instance.compilerVersion, bindings: fnACI.bindings }\n    )\n  }\n}\n\nconst deploy = ({ client, instance }) => async (init = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, 'init')\n\n  if (!instance.compiled) await instance.compile()\n  init = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, init) : init\n\n  const { owner, transaction, address, createdAt, result, rawTx } = await client.contractDeploy(instance.compiled, opt.source || instance.source, init, opt)\n  instance.deployInfo = { owner, transaction, address, createdAt, result, rawTx }\n  return instance.deployInfo\n}\n\nconst compile = ({ client, instance }) => async () => {\n  const { bytecode } = await client.contractCompile(instance.source)\n  instance.compiled = bytecode\n  return instance.compiled\n}\n\n/**\n * Contract ACI Stamp\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @rtype Stamp\n * @return {Object} Contract compiler instance\n * @example ContractACI()\n */\nexport default AsyncInit.compose({\n  methods: {\n    getContractInstance\n  }\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Swagger module\n * @module @aeternity/aepp-sdk/es/utils/swagger\n * @export Swagger\n * @example import Swagger from '@aeternity/aepp-sdk/es/utils/swagger'\n */\n\nimport JsonBig from './json-big'\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport { snakeToPascal, pascalToSnake } from './string'\nimport BigNumber from 'bignumber.js'\n\n/**\n * Perform path string interpolation\n * @static\n * @rtype (path: String, replacements: Object) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nfunction expandPath (path, replacements) {\n  return R.toPairs(replacements).reduce((path, [key, value]) => path.replace(`{${key}}`, value), path)\n}\n\n/**\n * Lookup type\n * @rtype (path: [String...], spec: Object, types: Object) => Object\n * @param {String[]} path - Path to look up\n * @param {Object} spec\n * @param {Object} types\n * @return {Object} Looked up type definition\n */\nfunction lookupType (path, spec, types) {\n  const type = (() => {\n    const match = R.path(path, spec).match(/^#\\/definitions\\/(.+)/)\n    if (match !== void 0) {\n      return match[1]\n    } else {\n      throw Error(`Reference path does not meet specification: ${path}`)\n    }\n  })()\n\n  if (type in types) {\n    return types[type]\n  } else {\n    throw Error(`Couldn't find definition for ${type}`)\n  }\n}\n\n/**\n * Intercept errors thrown by `fn()`, extending them with information from `key`\n * @rtype (key: String, fn: Function) => Any\n * @param {String} key - Information to attach\n * @param {Function} fn - Thunk\n * @return {Any} Execution result\n */\nfunction extendingErrorPath (key, fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw Object.assign(e, { path: [key].concat(e.path || []) })\n  }\n}\n\n/**\n * Construct Error with additional type information (not thrown)\n * @rtype (msg: String, spec: String, value: String) => Error\n * @param {String} msg - Error message\n * @param {String} spec\n * @param {String} value\n * @return {Error} Enhanced Error\n */\nfunction TypeError (msg, spec, value) {\n  const e = Error(msg)\n  return Object.assign(e, { spec, value })\n}\n\n/**\n * Per-type {@link conform} dispatcher\n * @rtype [(dispatch(value: String, spec: Object, types: Object) => Any, throws: Error)...]\n */\nconst conformTypes = {\n  integer (value, spec, types) {\n    if (R.type(value) === 'Number' || BigNumber(value).toString(10) === value) {\n      return R.type(value) === 'Number' ? Math.floor(value) : value\n    } else {\n      throw TypeError('Not an integer', spec, value)\n    }\n  },\n  enum (value, spec, types) {\n    const { enum: values } = spec\n    if (R.contains(value, values)) {\n      return value\n    } else {\n      throw TypeError(`Not one of [${R.join(', ', values)}]`, spec, value)\n    }\n  },\n  string (value, spec, types) {\n    if (R.type(value) === 'String') {\n      return value\n    } else {\n      throw TypeError(`Not a string`, spec, value)\n    }\n  },\n  object (value, spec, types) {\n    if (R.type(value) === 'Object') {\n      const required = (spec.required || []).map(snakeToPascal)\n      const properties = pascalizeKeys(spec.properties)\n      const missing = R.difference(required, R.keys(value))\n\n      if (missing.length > 0) {\n        throw TypeError(`Required properties missing: ${R.join(', ', missing)}`, spec, value)\n      } else {\n        return R.mapObjIndexed((value, key) => extendingErrorPath(key, () => conform(value, properties[key], types)), R.reject(R.isNil, R.pick(R.keys(properties), value)))\n      }\n    } else {\n      throw TypeError(`Not an object`, spec, value)\n    }\n  },\n  array (value, spec, types) {\n    if (R.type(value) === 'Array') {\n      return value.map(o => conform(o, spec.items, types))\n    } else {\n      throw TypeError(`Not an array`, spec, value)\n    }\n  },\n  schema (value, spec, types) {\n    return conform(value, lookupType(['schema', '$ref'], spec, types), types)\n  },\n  $ref (value, spec, types) {\n    return conform(value, lookupType(['$ref'], spec, types), types)\n  },\n  allOf (value, spec, types) {\n    return R.mergeAll(spec.allOf.map(spec => conform(value, spec, types)))\n  }\n}\n\n/**\n * {@link conform} dispatcher\n * @rtype (spec: Object) => String, throws: Error\n * @param {Object} spec\n * @return {String} Value to dispatch on\n */\nfunction conformDispatch (spec) {\n  if ('schema' in spec) {\n    return 'schema'\n  } else if ('$ref' in spec) {\n    return '$ref'\n  } else if ('enum' in spec) {\n    return 'enum'\n  } else if ('allOf' in spec) {\n    return 'allOf'\n  } else if ('type' in spec) {\n    return spec.type\n  } else {\n    throw Object.assign(Error('Could not determine type'), { spec })\n  }\n}\n\n/**\n * Conform `value` against its `spec`\n * @static\n * @rtype (value: Any, spec: Object, types: Object) => Any, throws: Error\n * @param {Object} value - Value to conform (validate and transform)\n * @param {Object} spec - Specification object\n * @param {Object} types - Types specification\n * @return {Object} Conformed value\n */\nfunction conform (value, spec, types) {\n  return (conformTypes[conformDispatch(spec)] || (() => {\n    throw Object.assign(Error('Unsupported type'), { spec })\n  }))(value, spec, types)\n}\n\nconst httpConfig = {\n  headers: { 'Content-Type': 'application/json' },\n  transformResponse: [(data) => {\n    try {\n      return JsonBig.parse(data)\n    } catch (e) {\n      return data\n    }\n  }],\n  transformRequest: [(data) => {\n    try {\n      return JsonBig.stringify(data)\n    } catch (e) {\n      return data\n    }\n  }]\n}\n\nconst httpClients = {\n  get: (config) => (url, params) => axios.get(url, [httpConfig, config, params].reduce(R.mergeDeepRight)),\n  post: (config) => (url, params) => axios.post(url, params, R.mergeDeepRight(httpConfig, config))\n}\n\n/**\n * Classify given `parameters`\n * @rtype (parameters: [{required: Boolean, in: String}...]) => {pathArgs: [...Object], queryArgs: [...Object], bodyArgs: [...Object], req: [...Object], opts: [...Object]}\n * @param {Object[]} parameters - Parameters to classify\n * @return {Object[]} Classified parameters\n */\nfunction classifyParameters (parameters) {\n  const { req, opts } = R.groupBy(p => p.required ? 'req' : 'opts', parameters)\n  const { path, query, body } = R.groupBy(p => p.in, parameters)\n\n  return {\n    pathArgs: R.pluck('name', path || []),\n    queryArgs: R.pluck('name', query || []),\n    bodyArgs: R.pluck('name', body || []),\n    req: req || [],\n    opts: opts || []\n  }\n}\n\n/**\n * Convert `name` attributes in `parameters` from snake_case to PascalCase\n * @rtype (parameters: [{name: String}...]) => [{name: String}...]\n * @param {Object[]} parameters - Parameters to pascalize\n * @return {Object[]} Pascalized parameters\n */\nfunction pascalizeParameters (parameters) {\n  return parameters.map(o => R.assoc('name', snakeToPascal(o.name), o))\n}\n\n/**\n * Key traversal metafunction\n * @static\n * @function\n * @rtype (fn: (s: String) => String) => (o: Object) => Object\n * @param {Function} fn - Key transformation function\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n */\nconst traverseKeys = R.curry((fn, o) => {\n  const dispatch = {\n    Object: o => R.fromPairs(R.toPairs(o).map(function (arr) {\n      const k = arr[0]\n      const v = arr[1]\n      return [fn(k), traverseKeys(fn, v)]\n    })),\n    Array: o => o.map(traverseKeys(fn))\n  }\n\n  return (dispatch[R.type(o)] || R.identity)(o)\n})\n\n/**\n * snake_case key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see pascalToSnake\n */\nfunction snakizeKeys (o) {\n  return traverseKeys(pascalToSnake, o)\n}\n\n/**\n * PascalCase key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see snakeToPascal\n */\nfunction pascalizeKeys (o) {\n  return traverseKeys(snakeToPascal, o)\n}\n\n/**\n * Obtain readable signature for operation\n * @rtype (name: String, req: [...Object], opts: [...Object]) => Object\n * @param {String} name - Name of operation\n * @param {Object[]} req - Required parameters to operation\n * @param {Object[]} opts - Optional parameters to operation\n * @return {String} Signature\n */\nfunction operationSignature (name, req, opts) {\n  const args = req.length ? `${R.join(', ', R.pluck('name', req))}` : null\n  const opt = opts.length ? `{${R.join(', ', R.pluck('name', opts))}}` : null\n\n  return `${name} (${R.join(', ', [args, opt].filter(R.identity))})`\n}\n\n/**\n * Assert that `coll` is a sequence with a length of 1 and extract the only element\n * @static\n * @rtype (coll: [...Any]) => Any, throws: Error\n * @param {Object[]} coll\n * @return {Object}\n */\nfunction assertOne (coll) {\n  if (coll.length === 1) {\n    return R.head(coll)\n  } else {\n    throw Error(`Expected exactly one element in ${coll}`)\n  }\n}\n\n/**\n * Destructure HTTP client `error`\n * @rtype (error: Error) => String\n * @param {Error} error\n * @return {String}\n */\nfunction destructureClientError (error) {\n  const { method, url } = error.config\n  const { status, data } = error.response\n  const reason = R.has('reason', data) ? data.reason : R.toString(data)\n\n  return `${method.toUpperCase()} to ${url} failed with ${status}: ${reason}`\n}\n\n/**\n * Generate callable operation\n * @function\n * @static\n * @rtype (path: String, method: String, definition: Object, types: Object) => (instance: Swagger, url: String) => Promise[Any], throws: Error\n * @param {String} path - Path to call in URL\n * @param {String} method - HTTP method\n * @param {Object} definition - Complex definition\n * @param {Object} types - Swagger types\n * @return {Function}\n */\nconst operation = (path, method, definition, types, { config, errorHandler } = {}) => {\n  config = config || {}\n  delete config.transformResponse // Prevent of overwriting transform response\n  const { operationId, description } = definition\n  let { parameters } = definition\n  const name = `${R.head(operationId).toLowerCase()}${R.drop(1, operationId)}`\n  const pascalized = pascalizeParameters(parameters)\n\n  const { pathArgs, queryArgs, bodyArgs, req, opts } = classifyParameters(pascalized)\n  const optNames = R.pluck('name', opts)\n  const indexedParameters = R.indexBy(R.prop('name'), pascalized)\n\n  const signature = operationSignature(name, req, opts)\n  const client = httpClients[method](config)\n\n  return (instance, url) => {\n    const fn = async function () {\n      const { defaults } = this.Swagger\n\n      try {\n        const [arg, opt] = (() => {\n          if (arguments.length === req.length) {\n            return [Array.from(arguments), defaults]\n          } else if (arguments.length === req.length + 1) {\n            return [R.dropLast(1, arguments), R.merge(defaults, R.last(arguments))]\n          } else {\n            throw Error(`Function call doesn't conform to ${signature}`)\n          }\n        })()\n\n        if (opt.debug) {\n          console.log(`Invoked ${name} with ${R.toString(arg)} ${R.toString(opt)}`)\n        }\n\n        const values = R.merge(R.reject(R.isNil, R.pick(optNames, opt)), R.zipObj(R.pluck('name', req), arg))\n        const conformed = R.mapObjIndexed((val, key) => {\n          try {\n            return conform(val, indexedParameters[key], types)\n          } catch (e) {\n            const path = [key].concat(e.path || [])\n            throw Object.assign(e, {\n              path,\n              value: val,\n              message: `validating ${R.join(' -> ', path)}: ${e.message}`\n            })\n          }\n        }, values)\n        const expandedPath = expandPath(path, snakizeKeys(R.pick(pathArgs, conformed)))\n        const params = snakizeKeys((() => {\n          if (method === 'get') {\n            return { params: R.pick(queryArgs, conformed) }\n          } else if (method === 'post') {\n            return conformed[assertOne(bodyArgs)]\n          } else {\n            throw Error(`Unsupported method ${method}`)\n          }\n        })())\n\n        if (opt.debug) {\n          console.log(`Going to ${method.toUpperCase()} ${url}${expandedPath} with ${R.toString(params)}`)\n        }\n\n        try {\n          const response = await client(`${url}${expandedPath}`, params).catch(this.axiosError(errorHandler))\n          // return opt.fullResponse ? response : conform(pascalizeKeys(response.data), responses['200'], types)\n          return opt.fullResponse ? response : pascalizeKeys(response.data)\n        } catch (e) {\n          if (R.path(['response', 'data'], e)) {\n            e.message = destructureClientError(e)\n          }\n          throw e\n        }\n      } catch (e) {\n        e.message = `While calling ${signature}, ${e.message}`\n        throw e\n      }\n    }.bind(instance)\n\n    Object.assign(fn, {\n      signature,\n      description\n    })\n\n    return Object.defineProperties(fn, {\n      name: {\n        value: name,\n        writable: false\n      },\n      length: {\n        value: req.length + (opts.length ? 1 : 0),\n        writable: false\n      }\n    })\n  }\n}\n\n/**\n * Swagger Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/swagger\n * @rtype Stamp\n * @param {Object} options - Initializer object\n * @param {Object} options.swag - Swagger definition\n * @param {Object} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Account instance\n * @example Swagger({swag})\n */\nconst Swagger = stampit({\n  init ({ swag = this.swag, axiosConfig }, { stamp }) {\n    const { paths, definitions } = swag\n    const methods = R.indexBy(\n      R.prop('name'),\n      R.flatten(\n        R.values(\n          R.mapObjIndexed(\n            (methods, path) => R.values(\n              R.mapObjIndexed((definition, method) => {\n                const op = operation(path, method, definition, definitions, axiosConfig)\n                return op(this, this.urlFor(swag.basePath, definition))\n              }, methods)),\n            paths\n          )\n        )\n      )\n    )\n\n    return Object.assign(this, {\n      methods: R.keys(methods),\n      api: methods\n    })\n  },\n  deepProps: {\n    Swagger: {\n      defaults: {\n        debug: false,\n        txEncoding: 'json'\n      }\n    }\n  },\n  statics: { debugSwagger (bool) { return this.deepProps({ Swagger: { defaults: { debug: bool } } }) } }\n})\n\n/**\n * Reconfigure Swagger to (not) spill debugging logs\n * @function debugSwagger\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to debug\n * @return {Stamp} Reconfigured Swagger Stamp\n */\n\nexport default Swagger\n\nexport {\n  conform,\n  operation,\n  expandPath,\n  assertOne,\n  snakeToPascal,\n  pascalToSnake,\n  traverseKeys\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Node module\n * @module @aeternity/aepp-sdk/es/node\n * @export Node\n * @example import Node from '@aeternity/aepp-sdk/es/node'\n */\n\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport AsyncInit from './utils/async-init'\nimport Swagger from './utils/swagger'\nimport semverSatisfies from './utils/semver-satisfies'\n\n/**\n * Obtain Swagger configuration from Node node\n * @category async\n * @rtype (url: String) => swagger: Object\n * @param {String} url - Node base URL\n * @param {Object} axiosConfig Axios configuration object\n * @return {Object} Swagger configuration\n */\nasync function remoteSwag (url, axiosConfig) {\n  return (await axios.get(`${url}/api`, axiosConfig)).data\n}\n\n/**\n * Node specific loader for `urlFor`\n * @rtype ({url: String, internalUrl?: String}) => (path: String, definition: Object) => tx: String\n * @param {Object} options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @return {Function} Implementation for {@link urlFor}\n */\nconst loader = ({ url, internalUrl }) => (path, definition) => {\n  const { tags, operationId } = definition\n\n  if (R.contains('external', tags)) {\n    return `${url}${path}`\n  } else if (!R.isNil(internalUrl) && R.contains('internal', tags)) {\n    return `${internalUrl}${path}`\n  } else {\n    throw Error(`Method ${operationId} is unsupported. No interface for ${R.toString(tags)}`)\n  }\n}\n\n/**\n * get consensus protocol version\n * @param {Array} protocols Array of protocols\n * @param {Number} height Height\n * @return {Number} version Protocol version\n */\nasync function getConsensusProtocolVersion (protocols = [], height) {\n  if (!protocols) throw new Error('Protocols must be an array')\n  if (!height) height = (await this.api.getCurrentKeyBlock()).height\n  if (height < 0) throw new Error('height must be a number >= 0')\n\n  const { version } = protocols\n    .reduce(\n      ({ effectiveAtHeight, version }, p) => height >= p.effectiveAtHeight && p.effectiveAtHeight > effectiveAtHeight\n        ? { effectiveAtHeight: p.effectiveAtHeight, version: p.version }\n        : { effectiveAtHeight, version },\n      { effectiveAtHeight: -1, version: 0 }\n    )\n  return version\n}\n\nfunction axiosError (handler) {\n  return (error) => {\n    handler && typeof handler === 'function' && handler(error)\n    throw error\n  }\n}\n\n/**\n * {@link Swagger} based Node remote API Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node\n * @rtype Stamp\n * @param {Object} [options={}] - Options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @param {String} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Node client\n * @example Node({url: 'https://sdk-testnet.aepps.com'})\n */\nconst Node = stampit(AsyncInit, {\n  async init ({ name, url = this.url, internalUrl = this.internalUrl, axiosConfig: { config, errorHandler } = {} }) {\n    if (!url) throw new Error('\"url\" required')\n    url = url.replace(/\\/?$/, '')\n    internalUrl = internalUrl ? internalUrl.replace(/\\/?$/, '') : url\n    // Get swagger schema\n    const swag = await remoteSwag(url, config).catch(this.axiosError(errorHandler))\n    this.version = swag.info.version\n    return Object.assign(this, {\n      url,\n      internalUrl,\n      swag: swag,\n      urlFor: loader({ url, internalUrl })\n    })\n  },\n  methods: {\n    axiosError,\n    getNodeInfo () {\n      return {\n        url: this.url,\n        internalUrl: this.internalUrl,\n        nodeNetworkId: this.nodeNetworkId,\n        version: this.version,\n        consensusProtocolVersion: this.consensusProtocolVersion\n      }\n    },\n    getConsensusProtocolVersion\n  },\n  props: {\n    version: null,\n    consensusProtocolVersion: null,\n    nodeNetworkId: null\n  }\n}, Swagger, {\n  async init ({ forceCompatibility = false }) {\n    const { nodeRevision: revision, genesisKeyBlockHash: genesisHash, networkId, protocols } = await this.api.getStatus()\n    this.consensusProtocolVersion = await this.getConsensusProtocolVersion(protocols)\n    if (\n      !semverSatisfies(this.version.split('-')[0], NODE_GE_VERSION, NODE_LT_VERSION) &&\n      !forceCompatibility\n    ) {\n      throw new Error(\n        `Unsupported node version ${this.version}. ` +\n        `Supported: >= ${NODE_GE_VERSION} < ${NODE_LT_VERSION}`\n      )\n    }\n\n    this.nodeNetworkId = networkId\n    return Object.assign(this, { revision, genesisHash })\n  }\n})\n\nconst NODE_GE_VERSION = '3.0.1'\nconst NODE_LT_VERSION = '5.0.0'\n\nexport default Node\n","import axios from 'axios'\nimport JsonBig from './json-big'\nimport * as R from 'ramda'\nimport stampit from '@stamp/it'\n\nasync function get (url, options) {\n  return processResponse(\n    axios.get(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function post (url, body, options) {\n  return processResponse(\n    axios.post(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function put (url, body, options) {\n  return processResponse(\n    axios.put(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function _delete (url, options) {\n  return processResponse(\n    axios.delete(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nfunction changeBaseUrl (newUrl) {\n  this.baseUrl = newUrl\n}\n\nconst processResponse = async (res) => {\n  try {\n    return (await res).data\n  } catch (e) {\n    if (!e.response) throw e\n    throw Object.assign(\n      Error(`Http request for ${e.config.url} failed with status code ${e.response.status}. Status: ${e.response.statusText}. \\nError data: ${JSON.stringify(e.response.data)}`),\n      { data: e.response.data }\n    )\n  }\n}\n\nconst Http = stampit({\n  init ({ baseUrl }) {\n    this.baseUrl = baseUrl\n  },\n  methods: {\n    changeBaseUrl,\n    get,\n    post,\n    put,\n    'delete': _delete\n  },\n  props: {\n    httpConfig: {\n      headers: { 'Content-Type': 'application/json' },\n      transformResponse: [(data) => {\n        try {\n          return JsonBig.parse(data)\n        } catch (e) {\n          return data\n        }\n      }]\n    }\n  }\n})\n\nexport default Http\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/contract}.\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerAPI\n * @example import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler'\n */\n\nimport Http from '../utils/http'\nimport ContractBase from './index'\nimport semverSatisfies from '../utils/semver-satisfies'\nimport AsyncInit from '../utils/async-init'\n\nasync function getCompilerVersion (options = {}) {\n  return this.http\n    .get('/version', options)\n    .then(({ version }) => version)\n}\n\nasync function contractEncodeCallDataAPI (source, name, args = [], options = {}) {\n  this.isInit()\n  return this.http\n    .post('/encode-calldata', { source, 'function': name, arguments: args }, options)\n    .then(({ calldata }) => calldata)\n}\n\nasync function contractDecodeCallDataByCodeAPI (bytecode, calldata, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/bytecode', { bytecode, calldata }, options)\n}\n\nasync function contractDecodeCallDataBySourceAPI (source, fn, callData, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/source', { 'function': fn, source, calldata: callData }, options)\n}\n\nasync function contractDecodeCallResultAPI (source, fn, callValue, callResult, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-call-result', { 'function': fn, source, 'call-result': callResult, 'call-value': callValue }, options)\n}\n\nasync function contractDecodeDataAPI (type, data, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-data', { data, 'sophia-type': type }, options)\n    .then(({ data }) => data)\n}\n\nasync function compileContractAPI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/compile', { code, options }, options)\n    .then(({ bytecode }) => bytecode)\n}\n\nasync function contractGetACI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/aci', { code, options }, options)\n}\n\nasync function setCompilerUrl (url) {\n  this.http.changeBaseUrl(url)\n  this.compilerVersion = null\n  await this.checkCompatibility()\n}\n\nasync function checkCompatibility (force = false) {\n  this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n  if (!this.compilerVersion && !force) throw new Error('Compiler do not respond')\n  if (this.compilerVersion && !semverSatisfies(this.compilerVersion.split('-')[0], COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n    const version = this.compilerVersion\n    this.compilerVersion = null\n    throw new Error(`Unsupported compiler version ${version}. ` +\n      `Supported: >= ${COMPILER_GE_VERSION} < ${COMPILER_LT_VERSION}`)\n  }\n}\n\nfunction isInit () {\n  if (this.compilerVersion === null) throw Error('Compiler not defined')\n  return true\n}\n\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerAPI({ compilerUrl: 'COMPILER_URL' })\n */\nconst ContractCompilerAPI = AsyncInit.compose(ContractBase, {\n  async init ({ compilerUrl = this.compilerUrl }) {\n    this.http = Http({ baseUrl: compilerUrl })\n    await this.checkCompatibility(true)\n  },\n  methods: {\n    contractEncodeCallDataAPI,\n    contractDecodeDataAPI,\n    compileContractAPI,\n    contractGetACI,\n    contractDecodeCallDataByCodeAPI,\n    contractDecodeCallDataBySourceAPI,\n    contractDecodeCallResultAPI,\n    setCompilerUrl,\n    getCompilerVersion,\n    isInit,\n    checkCompatibility\n  },\n  props: {\n    compilerVersion: null\n  }\n})\n\nconst COMPILER_GE_VERSION = '3.1.0'\nconst COMPILER_LT_VERSION = '4.0.0'\n\nexport default ContractCompilerAPI\n","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _makeFlat = /*#__PURE__*/require('./internal/_makeFlat');\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nmodule.exports = flatten;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle Base module\n * @module @aeternity/aepp-sdk/es/oracle\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/oracle'\n */\n\nimport { required } from '@stamp/required'\nimport stampit from '@stamp/it'\n\n/**\n * Basic Oracle Stamp\n *\n * This stamp include api call's related to oracle functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst OracleBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'getOracle',\n        'getOracleQueries',\n        'getOracleQuery'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    getOracle: required,\n    getOracleQueries: required,\n    getOracleQuery: required\n  }\n}))\n\n/**\n * Get oracle by oracle public key\n * @function getOracle\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracle: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @return {Object} - Oracle object\n */\n\n/**\n * Get oracle queries\n * @function getOracleQueries\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracleQueries: Promise[Object]\n * @param {String} oracleId- Oracle public key\n * @return {Object} - Oracle queries\n */\n\n/**\n * Get oracle query\n * @function getOracleQuery\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String, queryId: String) => oracleQuery: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @param {String} queryId - Query id\n * @return {Object} - Oracle query object\n */\n\nexport default OracleBase\n","export default function (version, geVersion, ltVersion) {\n  const versionComponents = version.split('.')\n  const geComponents = geVersion.split('.')\n  const ltComponents = ltVersion.split('.')\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1\n  const toNumber = components => components.reverse()\n    .reduce((acc, n, idx) => acc + n * Math.pow(base, idx), 0)\n\n  const vNumber = toNumber(versionComponents)\n  const geNumber = toNumber(geComponents)\n  const ltNumber = toNumber(ltComponents)\n  return vNumber >= geNumber && vNumber < ltNumber\n}\n","/* eslint-disable no-unused-vars */\nimport Joi from 'joi-browser'\n\nexport const SOPHIA_TYPES = [\n  'int',\n  'string',\n  'tuple',\n  'address',\n  'bool',\n  'list',\n  'map',\n  'record',\n  'option',\n  'oracle',\n  'oracleQuery',\n  'hash',\n  'signature',\n  'bytes',\n  'variant'\n].reduce((acc, type) => ({ ...acc, [type]: type }), {})\n\nexport function injectVars (t, aciType) {\n  const [[baseType, generic]] = Object.entries(aciType.typedef)\n  const [[_, varianValue]] = Object.entries(t)\n  switch (baseType) {\n    case SOPHIA_TYPES.variant:\n      return {\n        [baseType]: generic.map(el => {\n          const [tag, gen] = Object.entries(el)[0]\n          return {\n            [tag]: gen.map(type => {\n              const index = aciType.vars.map(e => e.name).indexOf(type)\n              return index === -1\n                ? type\n                : varianValue[index]\n            })\n          }\n        })\n      }\n  }\n}\n\n/**\n * Ling Type Defs\n * @param t\n * @param bindings\n * @return {Object}\n */\nexport function linkTypeDefs (t, bindings) {\n  const [_, typeDef] = typeof t === 'object' ? Object.keys(t)[0].split('.') : t.split('.')\n  const aciType = [\n    ...bindings.typedef,\n    { name: 'state', typedef: bindings.state, vars: [] }\n  ].find(({ name }) => name === typeDef)\n  if (aciType.vars.length) {\n    aciType.typedef = injectVars(t, aciType)\n  }\n\n  return aciType.typedef\n}\n\n/**\n * Parse sophia type\n * @param type\n * @param returnType\n * @return {Object}\n */\nexport function readType (type, { bindings } = {}) {\n  let [t] = Array.isArray(type) ? type : [type]\n\n  // Link State and typeDef\n  if (\n    (typeof t === 'string' && t.indexOf(bindings.contractName) !== -1) ||\n    (typeof t === 'object' && Object.keys(t)[0] && Object.keys(t)[0].indexOf(bindings.contractName) !== -1)\n  ) {\n    t = linkTypeDefs(t, bindings)\n  }\n\n  // Map, Tuple, List, Record, Bytes\n  if (typeof t === 'object') {\n    const [[baseType, generic]] = Object.entries(t)\n    return { t: baseType, generic }\n  }\n  // Base types\n  if (typeof t === 'string') return { t }\n}\n\n// FUNCTION ARGUMENTS TRANSFORMATION ↓↓↓\n\n/**\n * Transform JS type to Sophia-type\n * @param type\n * @param value\n * @param bindings\n * @return {string}\n */\nexport async function transform (type, value, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.string:\n      return `\"${value}\"`\n    case SOPHIA_TYPES.list:\n      return `[${await Promise.all(value.map(async el => transform(generic, el, { bindings })))}]`\n    case SOPHIA_TYPES.tuple:\n      return `(${await Promise.all(value.map(async (el, i) => transform(generic[i], el, {\n        bindings\n      })))})`\n    case SOPHIA_TYPES.option:\n      const optionV = await value.catch(e => undefined)\n      return optionV === undefined ? 'None' : `Some(${await transform(generic, optionV, {\n        bindings\n      })})`\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return `#${typeof value === 'string' ? value : Buffer.from(value).toString('hex')}`\n    case SOPHIA_TYPES.record:\n      return `{${await generic.reduce(\n        async (acc, { name, type }, i) => {\n          acc = await acc\n          acc += `${i !== 0 ? ',' : ''}${name} = ${await transform(type, value[name], {\n            bindings\n          })}`\n          return acc\n        },\n        ''\n      )}}`\n    case SOPHIA_TYPES.map:\n      return transformMap(value, generic, { bindings })\n    case SOPHIA_TYPES.variant:\n      return transformVariant(value, generic, { bindings })\n  }\n\n  return `${value}`\n}\n\nasync function transformVariant (value, generic, { bindings }) {\n  const [[variant, variantArgs]] = typeof value === 'string' ? [[value, []]] : Object.entries(value)\n  const [[v, type]] = Object.entries(generic.find(o => Object.keys(o)[0].toLowerCase() === variant.toLowerCase()))\n  return `${v}${!type.length\n    ? ''\n    : `(${await Promise.all(variantArgs.slice(0, type.length).map(async (el, i) => transform(type[i], el, {\n      bindings\n    })))})`\n  }`\n}\n\nexport async function transformMap (value, generic, { bindings }) {\n  if (value instanceof Map) {\n    value = Array.from(value.entries())\n  }\n  if (!Array.isArray(value) && value instanceof Object) {\n    value = Object.entries(value)\n  }\n\n  return `{${await value\n    .reduce(\n      async (acc, [key, value], i) => {\n        acc = await acc\n        if (i !== 0) acc += ','\n        acc += `[${await transform(generic[0], key, {\n          bindings\n        })}] = ${await transform(generic[1], value, { bindings })}`\n        return acc\n      },\n      ``\n    )\n  }}`\n}\n\n// FUNCTION RETURN VALUE TRANSFORMATION ↓↓↓\n\n/**\n * Transform decoded data to JS type\n * @param aci\n * @param result\n * @param transformDecodedData\n * @return {*}\n */\nexport function transformDecodedData (aci, result, { skipTransformDecoded = false, addressPrefix = 'ak', bindings } = {}) {\n  if (skipTransformDecoded) return result\n  const { t, generic } = readType(aci, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.bool:\n      return !!result\n    case SOPHIA_TYPES.address:\n      return result === 0\n        ? 0\n        : result\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return result.split('#')[1]\n    case SOPHIA_TYPES.map:\n      const [keyT, valueT] = generic\n      return result\n        .reduce(\n          (acc, [key, val]) => {\n            key = transformDecodedData(keyT, key, { bindings })\n            val = transformDecodedData(valueT, val, { bindings })\n            acc.push([key, val])\n            return acc\n          },\n          []\n        )\n    case SOPHIA_TYPES.option:\n      if (result === 'None') return undefined\n      const [[variantType, [value]]] = Object.entries(result)\n      return variantType === 'Some' ? transformDecodedData(generic, value, { bindings }) : undefined\n    case SOPHIA_TYPES.list:\n      return result.map((value) => transformDecodedData(generic, value, { bindings }))\n    case SOPHIA_TYPES.tuple:\n      return result.map((value, i) => { return transformDecodedData(generic[i], value, { bindings }) })\n    case SOPHIA_TYPES.record:\n      const genericMap = generic.reduce((acc, val) => ({ ...acc, [val.name]: { type: val.type } }), {})\n      return Object.entries(result).reduce(\n        (acc, [name, value]) =>\n          ({\n            ...acc,\n            [name]: transformDecodedData(genericMap[name].type, value, { bindings })\n          }),\n        {}\n      )\n  }\n  return result\n}\n\n// FUNCTION ARGUMENTS VALIDATION ↓↓↓\n\n/**\n * Prepare Joi validation schema for sophia types\n * @param type\n * @param bindings\n * @return {Object} JoiSchema\n */\nexport function prepareSchema (type, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  if (!Object.keys(SOPHIA_TYPES).includes(t)) t = SOPHIA_TYPES.address // Handle Contract address transformation\n  switch (t) {\n    case SOPHIA_TYPES.int:\n      return Joi.number().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.variant:\n      return Joi.alternatives().try([\n        Joi.string().valid(\n          ...generic.reduce((acc, el) => {\n            const [[t, g]] = Object.entries(el)\n            if (!g || !g.length) acc.push(t)\n            return acc\n          }, [])\n        ),\n        Joi.object(generic\n          .reduce(\n            (acc, el) => {\n              const variant = Object.keys(el)[0]\n              return { ...acc, [variant]: Joi.array() }\n            },\n            {})\n        ).or(...generic.map(e => Object.keys(e)[0]))\n      ])\n    case SOPHIA_TYPES.string:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.address:\n      return Joi.string().regex(/^(ak_|ct_|ok_|oq_)/).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bool:\n      return Joi.boolean().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.list:\n      return Joi.array().items(prepareSchema(generic, { bindings })).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.tuple:\n      return Joi.array().ordered(generic.map(type => prepareSchema(type, { bindings }).required())).label('Tuple argument').error(getJoiErrorMsg)\n    case SOPHIA_TYPES.record:\n      return Joi.object(\n        generic.reduce((acc, { name, type }) => ({ ...acc, [name]: prepareSchema(type, { bindings }) }), {})\n      ).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.hash:\n      return JoiBinary.binary().bufferCheck(32).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bytes:\n      return JoiBinary.binary().bufferCheck(generic).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.signature:\n      return JoiBinary.binary().bufferCheck(64).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.option:\n      return Joi.object().type(Promise).error(getJoiErrorMsg)\n    // @Todo Need to transform Map to Array of arrays before validating it\n    // case SOPHIA_TYPES.map:\n    //   return Joi.array().items(Joi.array().ordered(generic.map(type => prepareSchema(type))))\n    default:\n      return Joi.any()\n  }\n}\n\n/**\n * Parse Joi validation error message\n * @param errors\n * @return {Object} JoiError\n */\nexport function getJoiErrorMsg (errors) {\n  return errors.map(err => {\n    const { path, type, context } = err\n    let value = context.hasOwnProperty('value') ? context.value : context.label\n    value = typeof value === 'object' ? JSON.stringify(value).slice(1).slice(0, -1) : value\n    switch (type) {\n      case 'string.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a string` })\n      case 'number.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a number` })\n      case 'boolean.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a boolean` })\n      case 'array.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a array` })\n      case 'object.base':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a object` })\n      case 'object.type':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a ${context.type}` })\n      case 'binary.bufferCheck':\n        return ({\n          ...err,\n          message: `Value '${Buffer.from(value).toString('hex')}' at path: [${path}] not a ${context.size} bytes`\n        })\n      default:\n        return err\n    }\n  })\n}\n\n/**\n * Custom Joi Validator for binary type\n */\nconst JoiBinary = Joi.extend((joi) => ({\n  name: 'binary',\n  base: joi.any(),\n  pre (value, state, options) {\n    if (options.convert && typeof value === 'string') {\n      try {\n        return Buffer.from(value, 'hex')\n      } catch (e) { return undefined }\n    }\n\n    return Buffer.from(value)\n  },\n  rules: [\n    {\n      name: 'bufferCheck',\n      params: {\n        size: joi.number().required()\n      },\n      validate (params, value, state, options) {\n        value = value === 'string' ? Buffer.from(value, 'hex') : Buffer.from(value)\n        if (!Buffer.isBuffer(value)) {\n          return this.createError('binary.base', { value }, state, options)\n        }\n        if (value.length !== params.size) {\n          return this.createError('binary.bufferCheck', { value, size: params.size }, state, options)\n        }\n\n        return value\n      }\n    }\n  ]\n}))\n\n/**\n * Validation contract function arguments\n * @param aci\n * @param params\n */\nexport function validateArguments (aci, params) {\n  const validationSchema = Joi.array().ordered(\n    aci.arguments\n      .map(({ type }, i) => prepareSchema(type, { bindings: aci.bindings }).label(`[${params[i]}]`))\n  ).label('Argument')\n  const { error } = Joi.validate(params, validationSchema, { abortEarly: false })\n  if (error) {\n    throw error\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__69__;","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isFunction = /*#__PURE__*/require('./internal/_isFunction');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar toString = /*#__PURE__*/require('./toString');\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nmodule.exports = invoker;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = flip;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nmodule.exports = curry;","module.exports = __WEBPACK_EXTERNAL_MODULE__75__;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { rlp, hash } from './crypto'\n\nconst NODE_TYPES = {\n  branch: 1,\n  extension: 2,\n  leaf: 3\n}\n\nfunction nodeType (node) {\n  if (node.length === 17) {\n    return NODE_TYPES.branch\n  }\n  if (node.length === 2) {\n    const nibble = node[0].toString('hex')[0]\n    if (nibble === '0' || nibble === '1') {\n      return NODE_TYPES.extension\n    }\n    if (nibble === '2' || nibble === '3') {\n      return NODE_TYPES.leaf\n    }\n  }\n}\n\nfunction decodePath (path) {\n  if (path[0] === '0' || path[0] === '2') {\n    return path.slice(2)\n  }\n  if (path[0] === '1' || path[0] === '3') {\n    return path.slice(1)\n  }\n}\n\n/**\n * Deserialize Merkle Patricia Tree\n * @rtype (binary: Array) => Object\n * @param {Array} binary - Binary\n * @return {Object} Merkle Patricia Tree\n */\nexport function deserialize (binary) {\n  return {\n    rootHash: binary[0].toString('hex'),\n    nodes: binary[1].reduce((prev, node) => ({\n      ...prev,\n      [node[0].toString('hex')]: node[1]\n    }), {})\n  }\n}\n\n/**\n * Serialize Merkle Patricia Tree\n * @rtype (tree: Object) => Array\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Array} Binary\n */\nexport function serialize (tree) {\n  return [\n    Buffer.from(tree.rootHash, 'hex'),\n    Object.entries(tree.nodes).map(([mptHash, value]) => ([\n      Buffer.from(mptHash, 'hex'),\n      value\n    ]))\n  ]\n}\n\n/**\n * Retrieve value from Merkle Patricia Tree\n * @rtype (tree: Object, key: String) => Buffer\n * @param {Object} tree - Merkle Patricia Tree\n * @param {String} key - The key of the element to retrieve\n * @return {Buffer} Value associated to the specified key\n */\nexport function get (tree, key, hash) {\n  const node = hash ? tree.nodes[hash] : tree.nodes[tree.rootHash]\n  const type = nodeType(node)\n  if (type === NODE_TYPES.branch) {\n    if (key.length) {\n      const nextHash = node[parseInt(key[0], 16)].toString('hex')\n      return get(tree, key.substr(1), nextHash)\n    }\n    return node[16]\n  }\n  if (type === NODE_TYPES.extension) {\n    const path = decodePath(node[0].toString('hex'))\n    if (key.substr(0, path.length) === path) {\n      return get(tree, key.substr(path.length), node[1].toString('hex'))\n    }\n  }\n  if (type === NODE_TYPES.leaf) {\n    if (node[0].toString('hex').substr(1) === key) {\n      return node[1]\n    }\n  }\n}\n\nfunction nodeHash (node) {\n  return Buffer.from(hash(rlp.encode(node))).toString('hex')\n}\n\n/**\n * Verify if rootHash of Merkle Patricia Tree is correct\n * @rtype (tree: Object) => Boolean\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Boolean} Boolean indicating whether or not rootHash is correct\n */\nexport function verify (tree, key, verified = []) {\n  const hash = key || tree.rootHash\n  if (verified.includes(hash)) {\n    return true\n  }\n  const node = tree.nodes[hash]\n  const type = nodeType(node)\n  if (nodeHash(node) !== hash) {\n    return false\n  }\n  verified.push(hash)\n  if (type === NODE_TYPES.branch) {\n    return !node.some((n, i) => {\n      const nextKey = n.toString('hex')\n      if (i < 16) {\n        return !verify(tree, nextKey, verified)\n      }\n      return false\n    })\n  }\n  if (type === NODE_TYPES.extension) {\n    return verify(tree, node[1].toString('hex'), verified)\n  }\n  return true\n}\n","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nmodule.exports = defaultTo;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nmodule.exports = toPairs;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar mergeDeepWithKey = /*#__PURE__*/require('./mergeDeepWithKey');\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepRight;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nmodule.exports = groupBy;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _identity = /*#__PURE__*/require('./internal/_identity');\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity = /*#__PURE__*/_curry1(_identity);\nmodule.exports = identity;","var reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","module.exports = __WEBPACK_EXTERNAL_MODULE__84__;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}\nmodule.exports = _includesWith;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\nmodule.exports = _isObject;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isString = /*#__PURE__*/require('./_isString');\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nmodule.exports = _isArrayLike;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\nmodule.exports = _isString;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _map;","var _has = /*#__PURE__*/require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nmodule.exports = nth;","var _isArray = /*#__PURE__*/require('./_isArray');\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\nmodule.exports = _checkForMethod;","var _curryN = /*#__PURE__*/require('./internal/_curryN');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xreduceBy = /*#__PURE__*/require('./internal/_xreduceBy');\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nmodule.exports = reduceBy;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nmodule.exports = slice;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _reduced;","import nacl from 'tweetnacl'\nimport { full as hmac } from 'tweetnacl-auth'\nimport { fromString } from 'bip32-path'\nimport { validateMnemonic, mnemonicToSeed, generateMnemonic as genMnemonic } from '@aeternity/bip39'\nimport { decryptKey, encodeBase58Check, encryptKey } from './crypto'\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed')\nconst HARDENED_OFFSET = 0x80000000\n\nconst toHex = (buffer) => Buffer.from(buffer).toString('hex')\n\nexport function derivePathFromKey (path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray()\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new Error(`Segment #${i + 1} is not hardened`)\n    }\n  })\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key)\n}\n\nexport function derivePathFromSeed (path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new Error('Invalid path')\n  }\n  const masterKey = getMasterKeyFromSeed(seed)\n  return derivePathFromKey(path.slice(2), masterKey)\n}\n\nfunction formatAccount (keys) {\n  const { secretKey, publicKey } = keys\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: `ak_${encodeBase58Check(publicKey)}`\n  }\n}\n\nexport function getKeyPair (secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey)\n}\n\nexport function generateMnemonic () {\n  return genMnemonic()\n}\n\nexport function getMasterKeyFromSeed (seed) {\n  const I = hmac(seed, ED25519_CURVE)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function deriveChild ({ secretKey, chainCode }, index) {\n  if (index < HARDENED_OFFSET) {\n    throw new Error(`Child index #${index} is not supported`)\n  }\n  const indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  const data = Buffer.concat([Buffer.alloc(1, 0), secretKey, indexBuffer])\n\n  const I = hmac(data, chainCode)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function generateSaveHDWallet (mnemonic, password) {\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  }\n}\n\nexport function getSaveHDWalletAccounts (saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex'))\n  }\n  return (new Array(accountCount)).fill()\n    .map((_, idx) =>\n      formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)))\n}\n\nexport default {\n  getSaveHDWalletAccounts,\n  generateSaveHDWallet,\n  generateMnemonic,\n  deriveChild,\n  getMasterKeyFromSeed\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__101__;","module.exports = __WEBPACK_EXTERNAL_MODULE__102__;","module.exports = __WEBPACK_EXTERNAL_MODULE__103__;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar flip = /*#__PURE__*/require('./flip');\n\nvar reject = /*#__PURE__*/require('./reject');\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nmodule.exports = without;","var _includesWith = /*#__PURE__*/require('./internal/_includesWith');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = uniqWith;","var _objectIs = /*#__PURE__*/require('./internal/_objectIs');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nmodule.exports = identical;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _Set = /*#__PURE__*/require('./internal/_Set');\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = difference;","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nmodule.exports = mergeAll;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nmodule.exports = assoc;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar hasPath = /*#__PURE__*/require('./hasPath');\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nmodule.exports = has;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xdrop = /*#__PURE__*/require('./internal/_xdrop');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nmodule.exports = drop;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _dropLast = /*#__PURE__*/require('./internal/_dropLast');\n\nvar _xdropLast = /*#__PURE__*/require('./internal/_xdropLast');\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = zipObj;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__116__;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\n\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nmodule.exports = once;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nmodule.exports = pickBy;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nmodule.exports = reduce;","module.exports = __WEBPACK_EXTERNAL_MODULE__121__;","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var curry = /*#__PURE__*/require('./curry');\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xfind = /*#__PURE__*/require('./internal/_xfind');\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nmodule.exports = find;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var equals = /*#__PURE__*/require('../equals');\n\nfunction _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}\nmodule.exports = _indexOf;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _equals = /*#__PURE__*/require('./internal/_equals');\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nmodule.exports = equals;","var _arrayFromIterator = /*#__PURE__*/require('./_arrayFromIterator');\n\nvar _includesWith = /*#__PURE__*/require('./_includesWith');\n\nvar _functionName = /*#__PURE__*/require('./_functionName');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _objectIs = /*#__PURE__*/require('./_objectIs');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar type = /*#__PURE__*/require('../type');\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\nmodule.exports = _equals;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}\nmodule.exports = _arrayFromIterator;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\nmodule.exports = _functionName;","var _has = /*#__PURE__*/require('./_has');\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\nmodule.exports = _complement;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _filter = /*#__PURE__*/require('./internal/_filter');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xfilter = /*#__PURE__*/require('./internal/_xfilter');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nmodule.exports = filter;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\nmodule.exports = _isTransformer;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _filter;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\nmodule.exports = _xwrap;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nmodule.exports = bind;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFilter = /*#__PURE__*/function () {\n\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nmodule.exports = _xfilter;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\nmodule.exports = _makeFlat;","function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}\nmodule.exports = _isFunction;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _map = /*#__PURE__*/require('./_map');\n\nvar _quote = /*#__PURE__*/require('./_quote');\n\nvar _toISOString = /*#__PURE__*/require('./_toISOString');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar reject = /*#__PURE__*/require('../reject');\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\nmodule.exports = _toString;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _Set = /*#__PURE__*/function () {\n\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = _Set;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar mergeWithKey = /*#__PURE__*/require('./mergeWithKey');\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepWithKey;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nmodule.exports = mergeWithKey;","var _curryN = /*#__PURE__*/require('./_curryN');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XReduceBy = /*#__PURE__*/function () {\n\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nmodule.exports = _xreduceBy;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _map = /*#__PURE__*/require('./internal/_map');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xmap = /*#__PURE__*/require('./internal/_xmap');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nmodule.exports = map;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XMap = /*#__PURE__*/function () {\n\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nmodule.exports = _xmap;","function _identity(x) {\n  return x;\n}\nmodule.exports = _identity;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nmodule.exports = hasPath;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDrop = /*#__PURE__*/function () {\n\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nmodule.exports = _xdrop;","var take = /*#__PURE__*/require('../take');\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xtake = /*#__PURE__*/require('./internal/_xtake');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nmodule.exports = take;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XTake = /*#__PURE__*/function () {\n\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nmodule.exports = _xtake;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDropLast = /*#__PURE__*/function () {\n\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nmodule.exports = _xdropLast;","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFind = /*#__PURE__*/function () {\n\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nmodule.exports = _xfind;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * OracleNodeAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/oracle}.\n * @module @aeternity/aepp-sdk/es/oracle/node\n * @export OracleNodeAPI\n * @example import OracleNodeAPI from '@aeternity/aepp-sdk/es/oracle/node'\n */\n\nimport OracleBase from './'\n\nasync function getOracle (oracleId) {\n  return this.api.getOracleByPubkey(oracleId)\n}\n\nasync function getOracleQueries (oracleId) {\n  return this.api.getOracleQueriesByPubkey(oracleId)\n}\n\nasync function getOracleQuery (oracleId, queryId) {\n  return this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId)\n}\n\nconst OracleNodeAPI = OracleBase.compose({\n  methods: {\n    getOracle,\n    getOracleQueries,\n    getOracleQuery\n  }\n})\n\nexport default OracleNodeAPI\n","import { BigNumber } from 'bignumber.js'\n\nconst prefixes = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 }\n]\n\nconst getNearestPrefix = exponent => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p))\n\nconst getLowerBoundPrefix = exponent => prefixes\n  .find(p => p.magnitude <= exponent) || prefixes[prefixes.length - 1]\n\nexport default (value) => {\n  if (!BigNumber.isBigNumber(value)) value = BigNumber(value)\n\n  const { name, magnitude } = (value.e < 0 ? getNearestPrefix : getLowerBoundPrefix)(value.e)\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(value.e - magnitude, 0))\n    .toFixed()\n  return `${v}${name ? ' ' : ''}${name}`\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as R from 'ramda'\nimport Chain from './'\nimport Oracle from '../oracle/node'\nimport formatBalance from '../utils/amount-formatter'\nimport TransactionValidator from '../tx/validator'\nimport NodePool from '../node-pool'\n\n/**\n * ChainNode module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/chain}.\n * @module @aeternity/aepp-sdk/es/chain/node\n * @export ChainNode\n * @example import ChainNode from '@aeternity/aepp-sdk/es/chain/node'\n */\n\nasync function sendTransaction (tx, options = {}) {\n  const { waitMined, verify } = R.merge(this.Chain.defaults, options)\n  // Verify transaction before broadcast\n  if (this.verifyTxBeforeSend || verify) {\n    const { validation, tx: txObject, txType } = await this.unpackAndVerify(tx)\n    if (validation.length) {\n      throw Object.assign(Error('Transaction verification error'), {\n        code: 'TX_VERIFICATION_ERROR',\n        errorData: { validation, tx: txObject, txType },\n        txHash: tx\n      })\n    }\n  }\n\n  try {\n    const { txHash } = await this.api.postTransaction({ tx })\n    return waitMined ? { ...(await this.poll(txHash, options)), rawTx: tx } : { hash: txHash, rawTx: tx }\n  } catch (e) {\n    throw Object.assign(\n      (new Error(e.message)),\n      {\n        rawTx: tx,\n        verifyTx: () => this.unpackAndVerify(tx)\n      }\n    )\n  }\n}\n\nasync function getAccount (address, { height, hash } = {}) {\n  if (height) return this.api.getAccountByPubkeyAndHeight(address, height)\n  if (hash) return this.api.getAccountByPubkeyAndHash(address, hash)\n  return this.api.getAccountByPubkey(address)\n}\n\nasync function balance (address, { height, hash, format = false } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height })\n\n  return format ? formatBalance(balance) : balance.toString()\n}\n\nasync function tx (hash, info = false) {\n  const tx = await this.api.getTransactionByHash(hash)\n  if (['ContractCreateTx', 'ContractCallTx'].includes(tx.tx.type) && info) {\n    try {\n      return { ...tx, ...await this.getTxInfo(hash) }\n    } catch (e) {\n      return tx\n    }\n  }\n  return tx\n}\n\nasync function height () {\n  return (await this.api.getCurrentKeyBlockHeight()).height\n}\n\nasync function pause (duration) {\n  await new Promise(resolve => setTimeout(resolve, duration))\n}\n\nasync function awaitHeight (h, { interval = 5000, attempts = 20 } = {}) {\n  const instance = this\n\n  async function probe (left) {\n    const current = await instance.height()\n    if (current >= h) {\n      return current\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms, current=${current}, h=${h}`)\n  }\n\n  return probe(attempts)\n}\n\nasync function topBlock () {\n  const top = await this.api.getTopBlock()\n  return top[R.head(R.keys(top))]\n}\n\nasync function poll (th, { blocks = 10, interval = 5000 } = {}) {\n  const instance = this\n  const max = await this.height() + blocks\n\n  async function probe () {\n    const tx = await instance.tx(th)\n    if (tx.blockHeight !== -1) {\n      return tx\n    }\n    if (await instance.height() < max) {\n      await pause(interval)\n      return probe()\n    }\n    throw new Error(`Giving up after ${blocks} blocks mined. TxHash ${th}`)\n  }\n\n  return probe()\n}\n\nasync function getTxInfo (hash) {\n  return this.api.getTransactionInfoByHash(hash).then(res => res.callInfo ? res.callInfo : res)\n}\n\nasync function mempool () {\n  return this.api.getPendingTransactions()\n}\n\nasync function getCurrentGeneration () {\n  return this.api.getCurrentGeneration()\n}\n\nasync function getGeneration (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getGenerationByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getGenerationByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockTransactions (hash) {\n  return (await this.api.getMicroBlockTransactionsByHash(hash)).transactions\n}\n\nasync function getKeyBlock (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getKeyBlockByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getKeyBlockByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockHeader (hash) {\n  return this.api.getMicroBlockHeaderByHash(hash)\n}\n\nasync function txDryRun (txs, accounts, top) {\n  return this.api.dryRunTxs({ txs, accounts, top })\n}\n\nasync function getContractByteCode (contractId) {\n  return this.api.getContractCode(contractId)\n}\n\nasync function getName (name) {\n  return this.api.getNameEntryByName(name)\n}\n\n/**\n * ChainNode Stamp\n *\n * This is implementation of {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * composed with {@link module:@aeternity/aepp-sdk/es/contract/node--ContractNodeAPI} and {@link module:@aeternity/aepp-sdk/es/oracle/node--OracleNodeAPI}\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain/node\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} ChainNode instance\n * @example ChainNode({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst ChainNode = Chain.compose(Oracle, TransactionValidator, NodePool, {\n  init ({ verifyTx = false }) {\n    this.verifyTxBeforeSend = verifyTx\n  },\n  methods: {\n    sendTransaction,\n    balance,\n    getAccount,\n    topBlock,\n    tx,\n    height,\n    awaitHeight,\n    poll,\n    getTxInfo,\n    mempool,\n    getCurrentGeneration,\n    getGeneration,\n    getMicroBlockHeader,\n    getMicroBlockTransactions,\n    getKeyBlock,\n    txDryRun,\n    getContractByteCode,\n    getName\n  }\n})\n\nexport default ChainNode\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction module\n * @module @aeternity/aepp-sdk/es/tx/tx\n * @export Transaction\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/tx'\n */\n\nimport * as R from 'ramda'\nimport Tx from './'\n\nimport { buildTx, calculateFee } from './builder'\nimport { MIN_GAS_PRICE, PROTOCOL_VM_ABI, TX_TYPE } from './builder/schema'\nimport { buildContractId, oracleQueryId } from './builder/helpers'\nimport { NodePool } from '../node-pool'\n\nasync function spendTx ({ senderId, recipientId, amount, payload = '' }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.spend, { senderId, ...R.head(arguments), payload })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee,\n      payload\n    }), TX_TYPE.spend)\n    : await this.api.postSpend(R.merge(R.head(arguments), {\n      amount: parseInt(amount),\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      payload\n    }))\n\n  return tx\n}\n\nasync function namePreclaimTx ({ accountId, commitmentId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.namePreClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.namePreClaim)\n    : await this.api.postNamePreclaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameClaimTx ({ accountId, name, nameSalt }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameClaim)\n    : await this.api.postNameClaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameTransferTx ({ accountId, nameId, recipientId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameTransfer, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee }), TX_TYPE.nameTransfer)\n    : await this.api.postNameTransfer(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameUpdateTx ({ accountId, nameId, nameTtl, pointers, clientTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameUpdate, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameUpdate)\n    : await this.api.postNameUpdate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameRevokeTx ({ accountId, nameId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameRevoke, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameRevoke)\n    : await this.api.postNameRevoke(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function contractCreateTx ({ ownerId, code, vmVersion, abiVersion, deposit, amount, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCreate, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return this.nativeMode\n    ? {\n      ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.contractCreate),\n      contractId: buildContractId(ownerId, nonce)\n    }\n    : this.api.postContractCreate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee), gas: parseInt(gas), gasPrice, vmVersion: ctVersion.vmVersion, abiVersion: ctVersion.abiVersion }))\n}\n\nasync function contractCallTx ({ callerId, contractId, abiVersion, amount, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCall, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCall, { senderId: callerId, ...R.head(arguments), gasPrice, abiVersion: ctVersion.abiVersion })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, abiVersion: ctVersion.abiVersion, gasPrice }), TX_TYPE.contractCall)\n    : await this.api.postContractCall(R.merge(R.head(arguments), {\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      gas: parseInt(gas),\n      gasPrice,\n      abiVersion: ctVersion.abiVersion\n    }))\n\n  return tx\n}\n\nasync function oracleRegisterTx ({ accountId, queryFormat, responseFormat, queryFee, oracleTtl, abiVersion }) {\n  const { abiVersion: abi } = this.getVmVersion(TX_TYPE.oracleRegister, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleRegister, { senderId: accountId, ...R.head(arguments), abiVersion: abi })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({\n      accountId,\n      queryFee,\n      abiVersion: abi,\n      fee,\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    }, TX_TYPE.oracleRegister)\n    : await this.api.postOracleRegister({\n      accountId,\n      queryFee,\n      abiVersion: abi,\n      fee: parseInt(fee),\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    })\n\n  return tx\n}\n\nasync function oracleExtendTx ({ oracleId, callerId, oracleTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleExtend, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, fee, oracleTtl, nonce, ttl }, TX_TYPE.oracleExtend)\n    : await this.api.postOracleExtend({ oracleId, fee: parseInt(fee), oracleTtl, nonce, ttl })\n\n  return tx\n}\n\nasync function oraclePostQueryTx ({ oracleId, responseTtl, query, queryTtl, queryFee, senderId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleQuery, { senderId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, query, queryTtl, fee, queryFee, ttl, nonce, senderId }, TX_TYPE.oracleQuery)\n    : await this.api.postOracleQuery({\n      oracleId,\n      responseTtl,\n      query,\n      queryTtl,\n      fee: parseInt(fee),\n      queryFee,\n      ttl,\n      nonce,\n      senderId\n    })\n\n  return { tx, queryId: oracleQueryId(senderId, nonce, oracleId) }\n}\n\nasync function oracleRespondTx ({ oracleId, callerId, responseTtl, queryId, response }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleResponse, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, queryId, response, fee, ttl, nonce }, TX_TYPE.oracleResponse)\n    : await this.api.postOracleRespond({ oracleId, responseTtl, queryId, response, fee: parseInt(fee), ttl, nonce })\n  return tx\n}\n\nasync function channelCloseSoloTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelCloseSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelCloseSolo)\n    : await this.api.postChannelCloseSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSlashTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSlash, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSlash)\n    : await this.api.postChannelSlash(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSettleTx ({ channelId, fromId, initiatorAmountFinal, responderAmountFinal }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSettle, { senderId: fromId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal,\n      responderAmountFinal,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSettle)\n    : await this.api.postChannelSettle(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal: parseInt(initiatorAmountFinal),\n      responderAmountFinal: parseInt(responderAmountFinal),\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSnapshotSoloTx ({ channelId, fromId, payload }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSnapshotSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSnapshotSolo)\n    : await this.api.postChannelSnapshotSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function gaAttachTx ({ ownerId, code, vmVersion, abiVersion, authFun, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.gaAttach, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return {\n    ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.gaAttach),\n    contractId: buildContractId(ownerId, nonce)\n  }\n}\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n *\n * @param {string} txType Type of transaction\n * @param {object} vmAbi Object with vm and abi version fields\n * @return {object} Object with vm/abi version ({ vmVersion: number, abiVersion: number })\n */\nfunction getVmVersion (txType, { vmVersion, abiVersion } = {}) {\n  const version = this.getNodeInfo().consensusProtocolVersion\n  const supportedProtocol = PROTOCOL_VM_ABI[version]\n  if (!supportedProtocol) throw new Error('Not supported consensus protocol version')\n  const protocolForTX = supportedProtocol[txType]\n  if (!protocolForTX) throw new Error('Not supported tx type')\n\n  const ctVersion = {\n    abiVersion: abiVersion !== undefined ? abiVersion : protocolForTX.abiVersion[0],\n    vmVersion: vmVersion !== undefined ? vmVersion : protocolForTX.vmVersion[0]\n  }\n  if (protocolForTX.vmVersion.length && !R.contains(ctVersion.vmVersion, protocolForTX.vmVersion)) throw new Error(`VM VERSION ${ctVersion.vmVersion} do not support by this node. Supported: [${protocolForTX.vmVersion}]`)\n  if (!R.contains(ctVersion.abiVersion, protocolForTX.abiVersion)) throw new Error(`ABI VERSION ${ctVersion.abiVersion} do not support by this node. Supported: [${protocolForTX.abiVersion}]`)\n\n  return ctVersion\n}\n\n/**\n * Compute the absolute ttl by adding the ttl to the current height of the chain\n *\n * @param {number} ttl\n * @param {boolean} relative ttl is absolute or relative(default: true(relative))\n * @return {number} Absolute Ttl\n */\nasync function calculateTtl (ttl = 0, relative = true) {\n  if (ttl === 0) return 0\n  if (ttl < 0) throw new Error('ttl must be greater than 0')\n\n  if (relative) {\n    const { height } = await this.api.getCurrentKeyBlock()\n    return +(height) + ttl\n  }\n  return ttl\n}\n\n/**\n * Get the next nonce to be used for a transaction for an account\n *\n * @param {string} accountId\n * @param {number} nonce\n * @return {number} Next Nonce\n */\nasync function getAccountNonce (accountId, nonce) {\n  if (nonce) return nonce\n  const { nonce: accountNonce } = await this.api.getAccountByPubkey(accountId).catch(() => ({ nonce: 0 }))\n  return accountNonce + 1\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n *\n * @param {String} txType Type of transaction\n * @param {Object} params Object which contains all tx data\n * @return {Object} { ttl, nonce, fee } Object with account nonce, absolute ttl and transaction fee\n */\nasync function prepareTxParams (txType, { senderId, nonce: n, ttl: t, fee: f, gas, absoluteTtl }) {\n  const account = await this.getAccount(senderId).catch(e => ({ nonce: 0 }))\n  // Is GA account\n  if (account.contractId) {\n    n = 0\n  } else {\n    n = n || (account.nonce + 1)\n  }\n  const ttl = await (calculateTtl.bind(this)(t, !absoluteTtl))\n  const fee = calculateFee(f, txType, { showWarning: this.showWarning, gas, params: R.merge(R.last(arguments), { nonce: n, ttl }) })\n  return { fee, ttl, nonce: n }\n}\n\n/**\n * Transaction Stamp\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link module:@aeternity/aepp-sdk/es/Node}.\n * This stamp provide ability to create native transaction's,\n * or transaction's using Node API.\n * As there is no built-in security between Node and client communication,\n * creating transaction using {@link module:@aeternity/aepp-sdk/es/Node} API\n * must never be used for production but can be very useful to verify other\n * implementations.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Boolean} [options.nativeMode=true] options.nativeMode - Use Native build of transaction's\n * @param {String} options.url - Node url\n * @param {String} options.internalUrl - Node internal url\n * @return {Object} Transaction instance\n * @example Transaction({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst Transaction = NodePool.compose(Tx, {\n  init ({ nativeMode = true, showWarning = false }) {\n    this.nativeMode = nativeMode\n    this.showWarning = showWarning\n  },\n  props: {\n    nativeMode: null,\n    showWarning: null\n  },\n  methods: {\n    spendTx,\n    namePreclaimTx,\n    nameClaimTx,\n    nameTransferTx,\n    nameUpdateTx,\n    nameRevokeTx,\n    contractCreateTx,\n    contractCallTx,\n    prepareTxParams,\n    oracleRegisterTx,\n    oracleExtendTx,\n    oraclePostQueryTx,\n    oracleRespondTx,\n    channelCloseSoloTx,\n    channelSlashTx,\n    channelSettleTx,\n    channelSnapshotSoloTx,\n    gaAttachTx,\n    getAccountNonce,\n    getVmVersion\n  }\n})\n\nexport default Transaction\n","import BigNumber from 'bignumber.js'\nimport { MAX_AUTH_FUN_GAS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx, unpackTx } from '../../tx/builder'\n\nexport const prepareGaParams = (ins) => async (authData, authFnName) => {\n  if (typeof authData !== 'object') throw new Error('AuthData must be an object')\n  if (authData.gas && BigNumber(authData.gas).gt(MAX_AUTH_FUN_GAS)) throw new Error(`the maximum gas value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${authData.gas}`)\n  const gas = authData.gas || MAX_AUTH_FUN_GAS\n  if (authData.callData) {\n    if (authData.callData.split('_')[0] !== 'cb') throw new Error('Auth data must be a string with \"cb\" prefix.')\n    return { authCallData: authData.callData, gas }\n  } else {\n    if (!authData.source || !authData.args) throw new Error('Auth data must contain source code and arguments.')\n    return { authCallData: await ins.contractEncodeCall(authData.source, authFnName, authData.args), gas }\n  }\n}\n\nexport const getContractAuthFan = (ins) => async (source, fnName) => {\n  const { bytecode } = await ins.contractCompile(source)\n  const { tx: { typeInfo } } = await unpackTx(bytecode, false, 'cb')\n  if (!typeInfo[fnName]) throw new Error(`Can't find authFan for function \"${fnName}\"`)\n  const { funHash: authFun } = typeInfo[fnName]\n  return { bytecode, authFun }\n}\n\nexport const wrapInEmptySignedTx = (rlp) => buildTx({ encodedTx: rlp, signatures: [] }, TX_TYPE.signed)\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalize Account module - routines to use generalize account\n *\n * @module @aeternity/aepp-sdk/es/contract/ga\n * @export GeneralizeAccount\n * @example import GeneralizeAccount from '@aeternity/aepp-sdk/es/contract/ga' (Using tree-shaking)\n * @example import { GeneralizeAccount } from '@aeternity/aepp-sdk' (Using bundle)\n */\nimport * as R from 'ramda'\n\nimport { Contract } from '../../ae/contract'\nimport { ABI_VERSIONS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { getContractAuthFan, prepareGaParams, wrapInEmptySignedTx } from './helpers'\nimport { assertedType, decodeBase64Check } from '../../utils/crypto'\n\n/**\n * GeneralizeAccount Stamp\n *\n * Provide Generalize Account implementation\n * {@link module:@aeternity/aepp-sdk/es/contract/ga} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} GeneralizeAccount instance\n * @example\n * const authContract = ``\n * await client.createGeneralizeAccount(authFnName, authContract, [...authFnArguments]\n * // Make spend using GA\n * const callData = 'cb_...' // encoded call data for auth contract\n * await client.spend(10000, receiverPub, { authData: { callData } })\n * // or\n * await client.spend(10000, receiverPub, { authData: { source: authContract, args: [...authContractArgs] } }) // sdk will prepare callData itself\n */\nexport const GeneralizeAccount = Contract.compose({\n  methods: {\n    createGeneralizeAccount,\n    createMetaTx,\n    isGA\n  }\n})\nexport default GeneralizeAccount\n\n/**\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * Check if account is GA account\n * @param {String} address - Account address\n * @return {Boolean}\n */\nasync function isGA (address) {\n  const { contractId } = await this.getAccount(address)\n  return !!contractId\n}\n\n/**\n * Convert current account to GA account\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} authFnName - Authorization function name\n * @param {String} source - Auth contract source code\n * @param {Array} args - init arguments\n * @param {Object} options - Options\n * @return {Promise<Readonly<{result: *, owner: *, createdAt: Date, address, rawTx: *, transaction: *}>>}\n */\nasync function createGeneralizeAccount (authFnName, source, args, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const ownerId = await this.address(opt)\n\n  if (await this.isGA(ownerId)) throw new Error(`Account ${ownerId} is already GA`)\n\n  const { authFun, bytecode } = await getContractAuthFan(this)(source, authFnName)\n  const callData = await this.contractEncodeCall(source, 'init', args)\n\n  const { tx, contractId } = await this.gaAttachTx(R.merge(opt, { ownerId, code: bytecode, callData, authFun }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    gaContractId: contractId\n  })\n}\n\n/**\n * Create a metaTx transaction\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} rawTransaction Inner transaction\n * @param {Object} authData Object with gaMeta params\n * @param {String} authFnName - Authorization function name\n * @param {Object} options - Options\n * @return {String}\n */\nasync function createMetaTx (rawTransaction, authData, authFnName, options = {}) {\n  if (!authData) throw new Error('authData is required')\n  // Check if authData is callData or if it's an object prepare a callData from source and args\n  const { authCallData, gas } = await prepareGaParams(this)(authData, authFnName)\n  const opt = R.merge(this.Ae.defaults, options)\n  // Get transaction rlp binary\n  const rlpBinaryTx = decodeBase64Check(assertedType(rawTransaction, 'tx'))\n  // Wrap in SIGNED tx with empty signatures\n  const { rlpEncoded } = wrapInEmptySignedTx(rlpBinaryTx)\n  // Prepare params for META tx\n  const params = { ...opt, tx: rlpEncoded, gaId: await this.address(opt), abiVersion: ABI_VERSIONS.SOPHIA, authData: authCallData, gas }\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl } = await this.prepareTxParams(TX_TYPE.gaMeta, params)\n  // Build META tx\n  const { rlpEncoded: metaTxRlp } = buildTx({ ...params, fee: `${fee}`, ttl }, TX_TYPE.gaMeta)\n  // Wrap in empty signed tx\n  const { tx } = wrapInEmptySignedTx(metaTxRlp)\n  // Send tx to the chain\n  return tx\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\nimport uuid from 'uuid/v4'\n\nfunction createSession () {\n  const id = uuid()\n  this.rpcSessions[id] = { id }\n  return id\n}\n\nfunction hello () {\n  return Promise.resolve(this.createSession())\n}\n\nasync function receive ({ data, origin, source }) {\n  if (typeof data !== 'object' || data.jsonrpc !== '2.0') return\n\n  const { id, method, params, session } = data\n\n  function error () {\n    return Promise.reject(Error(`Error: No such method ${method}`))\n  }\n\n  R.call(\n    (this.rpcMethods[method] || error).bind(this),\n    { params, session: this.rpcSessions[session], origin }\n  ).then(result => {\n    const resolve = typeof result === 'object' && Object.prototype.toString.call(result) === '[object Object]'\n      ? Object.entries(result)\n        .filter(([key, value]) => typeof value !== 'function')\n        .reduce((p, [key, value]) => ({ ...p, [key]: value }), {})\n      : result\n    source.postMessage({ jsonrpc: '2.0', id, result: { resolve } }, '*')\n  }).catch(error => {\n    source.postMessage({ jsonrpc: '2.0', id, result: { reject: error.message } }, '*')\n  })\n}\n\nconst RpcServer = stampit({\n  init ({ self = window }) {\n    const handler = this.receive.bind(this)\n    self.addEventListener('message', handler, false)\n    this.destroyServer = () =>\n      self.removeEventListener('message', handler, false)\n  },\n  methods: {\n    receive,\n    createSession\n  },\n  props: {\n    rpcSessions: {}\n  },\n  deepProps: {\n    rpcMethods: { hello }\n  }\n})\n\nexport default RpcServer\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import Wallet from '@aeternity/aepp-sdk/es/ae/wallet'\n */\n\nimport Ae from './'\nimport Account from '../account'\nimport ContractBase from '../contract'\nimport Accounts from '../accounts'\nimport Chain from '../chain/node'\nimport Rpc from '../rpc/server'\nimport * as R from 'ramda'\nimport Tx from '../tx/tx'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\nimport GeneralizeAccount from '../contract/ga'\n\nconst contains = R.flip(R.contains)\nconst isTxMethod = contains(Tx.compose.deepConfiguration.Ae.methods)\nconst isChainMethod = contains(Chain.compose.deepConfiguration.Ae.methods)\nconst isAccountMethod = contains(Account.compose.deepConfiguration.Ae.methods)\nconst isContractMethod = contains(ContractBase.compose.deepConfiguration.Contract.methods)\nconst handlers = [\n  { pred: isTxMethod, handler: 'onTx', error: 'Creating transaction [{}] rejected' },\n  { pred: isChainMethod, handler: 'onChain', error: 'Chain operation [{}] rejected' },\n  { pred: isAccountMethod, handler: 'onAccount', error: 'Account operation [{}] rejected' },\n  { pred: isContractMethod, handler: 'onContract', error: 'Contract operation [{}] rejected' }\n]\n\n/**\n * Confirm client connection attempt and associate new session with currently\n * selected account preset\n * @instance\n * @category async\n * @return {Promise<String>} Session ID\n */\nasync function hello () {\n  const id = await Rpc.compose.deepProperties.rpcMethods.hello.call(this)\n  this.rpcSessions[id].address = await this.address()\n  return Promise.resolve(id)\n}\n\nasync function rpc (method, params, session) {\n  const { handler, error } = R.find(({ pred }) => pred(method), handlers)\n\n  if (handler === undefined) {\n    return Promise.reject(Error(`Unknown method ${method}`))\n  } else if (await this[handler](method, params, session)) {\n    return this[method].apply(this, params)\n  } else {\n    return Promise.reject(Error(error.replace(/{}/, method)))\n  }\n}\n\nfunction onTx () {\n  console.log('Implement onTx!')\n  return Promise.resolve(false)\n}\n\nfunction onChain () {\n  console.log('Implement onChain!')\n  return Promise.resolve(false)\n}\n\nfunction onAccount () {\n  console.log('Implement onAccount!')\n  return Promise.resolve(false)\n}\n\nfunction onContract () {\n  console.log('Implement onContract!')\n  return Promise.resolve(false)\n}\n\nasync function rpcSign ({ params, session }) {\n  if (await this.onAccount('sign', params, session)) {\n    return this.signWith(session.address, params[0])\n  } else {\n    return Promise.reject(Error('Signing rejected'))\n  }\n}\n\nasync function rpcAddress ({ params, session }) {\n  if (await this.onAccount('address', params, session)) {\n    return Promise.resolve(session.address)\n  } else {\n    return Promise.reject(Error('Address rejected'))\n  }\n}\n\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @param {Function} [options.onTx] - Tx method protector function\n * @param {Function} [options.onChain] - Chain method protector function\n * @param {Function} [options.onAccount] - Account method protector function\n * @param {Function} [options.onContract] - Contract method protector function\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://sdk-testnet.aepps.com/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n  onTx: confirm,\n  onChain: confirm,\n  onAccount: confirm\n  onContract: confirm\n})\n */\nconst Wallet = Ae.compose(Accounts, Chain, NodePool, Tx, Contract, GeneralizeAccount, Rpc, {\n  init ({ onTx = this.onTx, onChain = this.onChain, onAccount = this.onAccount, onContract = this.onContract }, { stamp }) {\n    this.onTx = onTx\n    this.onChain = onChain\n    this.onAccount = onAccount\n    this.onContract = onContract\n\n    // Combine `AE` methods with `Contract` and `AENS`\n    const methods = [\n      ...stamp.compose.deepConfiguration.Ae.methods,\n      ...stamp.compose.deepConfiguration.Contract.methods\n    ]\n    this.rpcMethods = Object.assign(R.fromPairs(methods.map(m => [m, ({ params, session }) => this.rpc(m, params, session)])), this.rpcMethods)\n  },\n  methods: { rpc, onTx, onChain, onAccount, onContract },\n  deepProps: {\n    rpcMethods: {\n      sign: rpcSign,\n      address: rpcAddress,\n      hello\n    }\n  }\n})\n\nexport default Wallet\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * RPC client module\n * @module @aeternity/aepp-sdk/es/rpc/client\n * @export RpcClient\n * @example import RpcClient from '@aeternity/aepp-sdk/es/rpc/client'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from '../utils/async-init'\nimport * as R from 'ramda'\n\nfunction post (method) {\n  return function (...params) {\n    return this.post(method, params)\n  }\n}\n\n/**\n * RPC client Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/rpc/client\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.parent=window.parent] - IFrame parent window\n * @param {Object} [options.self=window] - IFrame window\n * @return {Object} RPC client\n * @example RpcClient()\n */\nconst RpcClient = stampit(AsyncInit, {\n  async init ({ parent = window.parent, self = window }, { stamp }) {\n    if (parent === self) {\n      throw new Error('rpc client: Can\\'t send messages to itself')\n    }\n\n    let sequence = 0\n    const callbacks = {}\n\n    function receive ({ data }) {\n      if (typeof data !== 'object' || data.type === 'webpackOk') {\n        return\n      }\n\n      const { result: { resolve, reject }, id } = data\n\n      if (callbacks[id]) {\n        if (resolve) {\n          callbacks[id].resolve(resolve)\n        } else if (reject) {\n          callbacks[id].reject(reject)\n        }\n        delete callbacks[id]\n      }\n    }\n\n    this.post = (method, params) => {\n      const ret = new Promise((resolve, reject) => {\n        callbacks[sequence] = { resolve, reject }\n      })\n\n      parent.postMessage({ jsonrpc: '2.0', id: sequence, method, params, session: this.session }, '*')\n      sequence++\n\n      return ret\n    }\n\n    const handler = receive\n    self.addEventListener('message', handler, false)\n    this.destroyClient = () =>\n      self.removeEventListener('message', handler, false)\n\n    this.session = await this.post('hello')\n  },\n  props: {\n    handler: null\n  },\n  methods: {},\n  composers ({ stamp, composables }) {\n    // Combine Ae and Contract methods\n    const methods = [\n      ...(R.path(['compose', 'deepConfiguration', 'Ae', 'methods'], stamp) || []),\n      ...(R.path(['compose', 'deepConfiguration', 'Contract', 'methods'], stamp) || [])\n    ]\n    const rpcMethods = R.fromPairs(methods.map(m => [m, post(m)]))\n    if (stamp.compose.methods) {\n      // remove signTransaction and getNetworkId from AEPP instance, let's go it through RPC\n      ['signTransaction', 'getNetworkId'].forEach(m => delete stamp.compose.methods[m])\n    }\n    stamp.compose.methods = Object.assign(rpcMethods, stamp.compose.methods)\n  }\n})\n\nexport default RpcClient\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import Oracle from '@aeternity/aepp-sdk/es/ae/oracle'\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { decodeBase64Check } from '../utils/crypto'\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\nasync function getOracleObject (oracleId) {\n  const oracle = await this.getOracle(oracleId)\n  const { oracleQueries: queries } = await this.getOracleQueries(oracleId)\n  return {\n    ...oracle,\n    queries,\n    postQuery: (query, options) => this.postQueryToOracle(oracleId, query, options),\n    respondToQuery: (queryId, response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    extendOracle: (oracleTtl, options) => this.extendOracleTtl(oracleId, oracleTtl, options),\n    getQuery: async (queryId) => {\n      return getQueryObject.bind(this)(oracleId, queryId)\n    }\n  }\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\nasync function getQueryObject (oracleId, queryId) {\n  return {\n    ...(await this.getOracleQuery(oracleId, queryId)),\n    respond: (response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    pollForResponse: ({ attempts, interval }) => this.pollForQueryResponse(oracleId, queryId, { attempts, interval }),\n    decode: (data) => decodeBase64Check(data.slice(3))\n  }\n}\n\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\nexport async function pollForQueryResponse (oracleId, queryId, { attempts = 20, interval = 5000 } = {}) {\n  const emptyResponse = 'or_Xfbg4g=='\n  async function pause (duration) {\n    await new Promise(resolve => setTimeout(resolve, duration))\n  }\n  async function probe (left) {\n    const query = await this.getOracleQuery(oracleId, queryId)\n    if (query.response !== emptyResponse) {\n      return { response: query.response, decode: () => decodeBase64Check(query.response.slice(3)) }\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe.bind(this)(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms`)\n  }\n  return probe.bind(this)(attempts)\n}\n\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] queryFee Oracle query Fee\n * @param {Object} [options.oracleTtl] oracleTtl OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] abiVersion Always 0 (do not use virtual machine)\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function registerOracle (queryFormat, responseFormat, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options) // Preset VmVersion for oracle\n  const accountId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oracleRegisterTx(R.merge(opt, {\n    accountId,\n    queryFormat,\n    responseFormat\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await getOracleObject.bind(this)(`ok_${accountId.slice(3)}`))\n  }\n}\n\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\nasync function postQueryToOracle (oracleId, query, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const senderId = await this.address(opt)\n\n  const { tx: oracleRegisterTx, queryId } = await this.oraclePostQueryTx(R.merge(opt, {\n    oracleId,\n    senderId,\n    query\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await (await getOracleObject.bind(this)(oracleId)).getQuery(queryId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function extendOracleTtl (oracleId, oracleTtl, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleExtendTx = await this.oracleExtendTx(R.merge(opt, {\n    oracleId,\n    callerId,\n    oracleTtl\n  }))\n  return {\n    ...(await this.send(oracleExtendTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function respondToQuery (oracleId, queryId, response, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleRespondTx = await this.oracleRespondTx(R.merge(opt, {\n    oracleId,\n    queryId,\n    callerId,\n    response\n  }))\n  return {\n    ...(await this.send(oracleRespondTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: { Ae: { defaults: {\n    queryFee: 30000,\n    oracleTtl: { type: 'delta', value: 500 },\n    queryTtl: { type: 'delta', value: 10 },\n    responseTtl: { type: 'delta', value: 10 }\n  } } }\n})\n\nexport default Oracle\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/aepp'\n */\n\nimport Ae from './'\nimport Aens from './aens'\nimport Rpc from '../rpc/client'\nimport { ContractAPI } from './contract'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\n\n/**\n * Aepp Stamp\n *\n * Aepp provides Ae base functionality with Contract and Aens.\n * This stamp can be used only with Wallet, all Aepp method's going through RPC to Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\nconst Aepp = Ae.compose(ContractAPI, Aens, Oracle, GeneralizeAccount, Rpc)\n\nexport default Aepp\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\nimport { EventEmitter } from 'events'\nimport * as R from 'ramda'\nimport JSONBig from '../utils/json-big'\nimport { pascalToSnake } from '../utils/string'\nimport { awaitingConnection } from './handlers'\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000\n\nconst options = new WeakMap()\nconst status = new WeakMap()\nconst state = new WeakMap()\nconst fsm = new WeakMap()\nconst websockets = new WeakMap()\nconst eventEmitters = new WeakMap()\nconst messageQueue = new WeakMap()\nconst messageQueueLocked = new WeakMap()\nconst actionQueue = new WeakMap()\nconst actionQueueLocked = new WeakMap()\nconst sequence = new WeakMap()\nconst channelId = new WeakMap()\nconst rpcCallbacks = new WeakMap()\nconst pingTimeoutId = new WeakMap()\nconst pongTimeoutId = new WeakMap()\n\nfunction channelURL (url, params) {\n  const paramString = R.join('&', R.values(R.mapObjIndexed((value, key) =>\n    `${pascalToSnake(key)}=${encodeURIComponent(value)}`, params)))\n\n  return `${url}?${paramString}`\n}\n\nfunction emit (channel, ...args) {\n  eventEmitters.get(channel).emit(...args)\n}\n\nfunction enterState (channel, nextState) {\n  if (!nextState) {\n    throw new Error('State Channels FSM entered unknown state')\n  }\n  fsm.set(channel, nextState)\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel)\n  }\n  dequeueAction(channel)\n}\n\nfunction changeStatus (channel, newStatus) {\n  const prevStatus = status.get(channel)\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus)\n    emit(channel, 'statusChanged', newStatus)\n  }\n}\n\nfunction changeState (channel, newState) {\n  state.set(channel, newState)\n  emit(channel, 'stateChanged', newState)\n}\n\nfunction send (channel, message) {\n  websockets.get(channel).send(JSONBig.stringify(message))\n}\n\nfunction enqueueAction (channel, guard, action) {\n  actionQueue.set(channel, [\n    ...actionQueue.get(channel) || [],\n    { guard, action }\n  ])\n  dequeueAction(channel)\n}\n\nasync function dequeueAction (channel) {\n  const locked = actionQueueLocked.get(channel)\n  const queue = actionQueue.get(channel) || []\n  if (locked || !queue.length) {\n    return\n  }\n  const state = fsm.get(channel)\n  const index = queue.findIndex(item => item.guard(channel, state))\n  if (index === -1) {\n    return\n  }\n  actionQueue.set(channel, queue.filter((_, i) => index !== i))\n  actionQueueLocked.set(channel, true)\n  const nextState = await Promise.resolve(queue[index].action(channel, state))\n  actionQueueLocked.set(channel, false)\n  enterState(channel, nextState)\n}\n\nasync function handleMessage (channel, message) {\n  const { handler, state } = fsm.get(channel)\n  enterState(channel, await Promise.resolve(handler(channel, message, state)))\n}\n\nasync function dequeueMessage (channel) {\n  const queue = messageQueue.get(channel)\n  if (messageQueueLocked.get(channel) || !queue.length) {\n    return\n  }\n  const [message, ...remaining] = queue\n  messageQueue.set(channel, remaining || [])\n  messageQueueLocked.set(channel, true)\n  await handleMessage(channel, message)\n  messageQueueLocked.set(channel, false)\n  dequeueMessage(channel)\n}\n\nfunction ping (channel) {\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    })\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel)\n      emit(channel, 'error', Error('Server pong timed out'))\n    }, PONG_TIMEOUT_MS))\n  }, PING_TIMEOUT_MS))\n}\n\nfunction onMessage (channel, data) {\n  const message = JSONBig.parse(data)\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id)\n    try {\n      callback(message)\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id)\n    }\n  } else if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message)\n  } else if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel)) ||\n      // Skip channelId check if channelId is not known yet\n      (channelId.get(channel) == null)\n    ) {\n      ping(channel)\n    }\n  } else {\n    messageQueue.set(channel, [...(messageQueue.get(channel) || []), message])\n    dequeueMessage(channel)\n  }\n}\n\nfunction wrapCallErrorMessage (message) {\n  const [{ message: details } = {}] = message.error.data || []\n  if (details) {\n    return Error(`${message.error.message}: ${details}`)\n  }\n  return Error(message.error.message)\n}\n\nfunction call (channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel)\n    rpcCallbacks.get(channel).set(id, (message) => {\n      if (message.result) return resolve(message.result)\n      if (message.error) return reject(wrapCallErrorMessage(message))\n    })\n    send(channel, { jsonrpc: '2.0', method, id, params })\n  })\n}\n\nfunction disconnect (channel) {\n  websockets.get(channel).close()\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n}\n\nfunction WebSocket (url, callbacks) {\n  function fireOnce (target, key, fn) {\n    const once = R.once(fn)\n    const original = target[key]\n    target[key] = (...args) => {\n      once(...args)\n      if (typeof original === 'function') {\n        original(...args)\n      }\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const ws = new W3CWebSocket(url)\n    // eslint-disable-next-line no-return-assign\n    Object.entries(callbacks).forEach(([key, callback]) => ws[key] = callback)\n    fireOnce(ws, 'onopen', () => resolve(ws))\n    fireOnce(ws, 'onerror', (err) => reject(err))\n  })\n}\n\nasync function initialize (channel, channelOptions) {\n  const optionsKeys = ['sign', 'url']\n  const params = R.pickBy((_, key) => !optionsKeys.includes(key), channelOptions)\n  const { url } = channelOptions\n  const wsUrl = channelURL(url, { ...params, protocol: 'json-rpc' })\n\n  options.set(channel, channelOptions)\n  fsm.set(channel, { handler: awaitingConnection })\n  eventEmitters.set(channel, new EventEmitter())\n  sequence.set(channel, 0)\n  rpcCallbacks.set(channel, new Map())\n  const ws = await WebSocket(wsUrl, {\n    onopen: () => {\n      changeStatus(channel, 'connected')\n      ping(channel)\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected')\n      clearTimeout(pingTimeoutId.get(channel))\n      clearTimeout(pongTimeoutId.get(channel))\n    },\n    onmessage: ({ data }) => onMessage(channel, data)\n  })\n  websockets.set(channel, ws)\n}\n\nexport {\n  initialize,\n  options,\n  status,\n  state,\n  eventEmitters,\n  emit,\n  changeStatus,\n  changeState,\n  send,\n  enqueueAction,\n  channelId,\n  call,\n  disconnect\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { generateKeyPair, encodeContractAddress, encodeBase64Check } from '../utils/crypto'\nimport {\n  options,\n  changeStatus,\n  changeState,\n  send,\n  emit,\n  channelId,\n  disconnect\n} from './internal'\nimport { unpackTx, buildTx } from '../tx/builder'\n\nfunction encodeRlpTx (rlpBinary) {\n  return `tx_${encodeBase64Check(rlpBinary)}`\n}\n\nasync function appendSignature (tx, signFn) {\n  const { signatures, encodedTx } = unpackTx(tx).tx\n  const result = await signFn(encodeRlpTx(encodedTx.rlpEncoded))\n  if (result) {\n    const { tx: signedTx, txType } = unpackTx(result)\n    return encodeRlpTx(buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).rlpEncoded)\n  }\n}\n\nfunction handleUnexpectedMessage (channel, message, state) {\n  if (state.reject) {\n    state.reject(Object.assign(\n      Error(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n      { wsMessage: message }\n    ))\n  }\n  return { handler: channelOpen }\n}\n\nexport function awaitingConnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event])\n      return { handler: awaitingChannelCreateTx }\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation }\n    }\n    return { handler: awaitingConnection }\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new Error(message.payload.message))\n    return { handler: channelClosed }\n  }\n}\n\nexport async function awaitingChannelCreateTx (channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role]\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n      return { handler: awaitingOnChainTx }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx))\n    send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (\n      message.params.data.info === 'funding_signed' &&\n      options.get(channel).role === 'initiator'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n    if (\n      message.params.data.info === 'funding_created' &&\n      options.get(channel).role === 'responder'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    options.get(channel).role === 'initiator'\n  ) {\n    changeStatus(channel, 'signed')\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingBlockInclusion (channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event]\n    if (handler) {\n      return { handler }\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    return { handler: awaitingBlockInclusion }\n  }\n}\n\nexport function awaitingOpenConfirmation (channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id)\n    return { handler: awaitingInitialState }\n  }\n}\n\nexport function awaitingInitialState (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    return { handler: channelOpen }\n  }\n}\n\nexport async function channelOpen (channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest }\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n          emit(channel, message.params.data.event)\n          return { handler: channelOpen }\n        case 'close_mutual':\n          return { handler: channelOpen }\n        case 'closing':\n          changeStatus(channel, 'closing')\n          return { handler: channelOpen }\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed')\n          return { handler: channelClosed }\n        case 'died':\n          changeStatus(channel, 'died')\n          return { handler: channelClosed }\n      }\n      break\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      })\n      return { handler: channelOpen }\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen }\n    case 'channels.update':\n      changeState(channel, message.params.data.state)\n      return { handler: channelOpen }\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state)\n  }\n}\nchannelOpen.enter = (channel) => {\n  changeStatus(channel, 'open')\n}\n\nexport async function awaitingOffChainTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingOffChainUpdate, state }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    const { data = [] } = message.error\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new Error('Insufficient balance'))\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new Error('Amount cannot be negative'))\n    } else {\n      state.reject(new Error(message.error.message))\n    }\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingOffChainUpdate (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    state.reject(new Error(message.error.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingTxSignRequest (channel, message, state) {\n  // eslint-disable-next-line no-useless-escape\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^\\.]+)$/) || []\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      })\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n        options.get(channel).sign(tag, tx, { updates: message.params.data.updates })\n      )\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    })\n    return { handler: awaitingUpdateConflict }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingUpdateConflict (channel, message, state) {\n  if (message.error) {\n    return { handler: awaitingUpdateConflict }\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingShutdownTx (channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } })\n      return { handler: awaitingShutdownOnChainTx, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingShutdownOnChainTx, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingShutdownOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    state.resolve(message.params.data.tx)\n    return { handler: channelClosed }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingLeave (channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state })\n    disconnect(channel)\n    return { handler: channelClosed }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingWithdrawTx (channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingWithdrawCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingDepositTx (channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingDepositCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingDepositCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingDepositCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingNewContractTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingNewContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingNewContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state).tx.encodedTx.tx\n    // eslint-disable-next-line standard/computed-property-even-spacing\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]]\n    changeState(channel, message.params.data.state)\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractUpdateTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingCallContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallsPruned (channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve()\n    return { handler: channelOpen }\n  }\n  state.reject(new Error('Unexpected message received'))\n  return { handler: channelClosed }\n}\n\nexport function channelClosed (channel, message, state) {\n  return { handler: channelClosed }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import Channel from '@aeternity/aepp-sdk/es/channel/index'\n */\n\nimport AsyncInit from '../utils/async-init'\nimport { snakeToPascal } from '../utils/string'\nimport * as handlers from './handlers'\nimport {\n  eventEmitters,\n  status as channelStatus,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect\n} from './internal'\nimport * as R from 'ramda'\n\nfunction snakeToPascalObjKeys (obj) {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val\n  }), {})\n}\n\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction on (event, callback) {\n  eventEmitters.get(this).on(event, callback)\n}\n\n/**\n * Close the connection\n */\nfunction disconnect () {\n  return channelDisconnect(this)\n}\n\n/**\n * Get current status\n *\n * @return {String}\n */\nfunction status () {\n  return channelStatus.get(this)\n}\n\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\nasync function state () {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}))\n}\n\n/**\n * Get channel id\n *\n * @return {String}\n */\nfunction id () {\n  return channelId.get(this)\n}\n\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\nfunction update (from, to, amount, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new',\n          params: { from, to, amount }\n        })\n        return {\n          handler: handlers.awaitingOffChainTx,\n          state: {\n            resolve,\n            reject,\n            sign\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\nasync function poi ({ accounts, contracts }) {\n  return (await call(this, 'channels.get.poi', { accounts, contracts })).poi\n}\n\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\nasync function balances (accounts) {\n  return R.reduce((acc, item) => ({\n    ...acc,\n    [item.account]: item.balance\n  }), {}, await call(this, 'channels.get.balances', { accounts }))\n}\n\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\nfunction leave () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} })\n        return {\n          handler: handlers.awaitingLeave,\n          state: { resolve, reject }\n        }\n      })\n  })\n}\n\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\nfunction shutdown (sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} })\n        return {\n          handler: handlers.awaitingShutdownTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\nfunction withdraw (amount, sign, { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } })\n        return {\n          handler: handlers.awaitingWithdrawTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnWithdrawLocked,\n            onWithdrawLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\nfunction deposit (amount, sign, { onOnChainTx, onOwnDepositLocked, onDepositLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } })\n        return {\n          handler: handlers.awaitingDepositTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnDepositLocked,\n            onDepositLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the AEVM\n * @param {Number} options.abiVersion - Version of the ABI\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\nfunction createContract ({ code, callData, deposit, vmVersion, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new_contract',\n          params: {\n            code,\n            call_data: callData,\n            deposit,\n            vm_version: vmVersion,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingNewContractTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\nfunction callContract ({ amount, callData, contract, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.call_contract',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractUpdateTx,\n          state: { resolve, reject, sign }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\nasync function callContractStatic ({ amount, callData, contract, abiVersion }) {\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }))\n}\n\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\nasync function getContractCall ({ caller, contract, round }) {\n  return snakeToPascalObjKeys(\n    await call(this, 'channels.get.contract_call', {\n      caller_id: caller,\n      contract_id: contract,\n      round\n    })\n  )\n}\n\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\nasync function getContractState (contract) {\n  const result = await call(this, 'channels.get.contract', { pubkey: contract })\n  return snakeToPascalObjKeys({\n    ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  })\n}\n\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\nfunction cleanContractCalls () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.clean_contract_calls',\n          params: {}\n        })\n        return {\n          handler: handlers.awaitingCallsPruned,\n          state: { resolve, reject }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\nfunction sendMessage (message, recipient) {\n  let info = message\n  if (typeof message === 'object') {\n    info = JSON.stringify(message)\n  }\n  send(this, { jsonrpc: '2.0', method: 'channels.message', params: { info, to: recipient } })\n}\n\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an off-chain update after our client had initiated and signed it. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an on-chain transaction reaching maturity (passing minimum depth) after the local node has detected this. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an event. This applies for all off-chain updates that are not meant to land on-chain, as well as some special cases: opening a noise connection, mutual closing acknowledgement and reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an outgoing noise session to the responder's node. Applicable only for responder (default: timeout_idle's value)\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\nconst Channel = AsyncInit.compose({\n  async init (options) {\n    initialize(this, options)\n  },\n  methods: {\n    on,\n    status,\n    state,\n    id,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls\n  }\n})\n\nexport default Channel\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/universal'\n */\n\nimport Ae from './'\nimport Chain from '../chain/node'\nimport Aens from './aens'\nimport Transaction from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\nimport Accounts from '../accounts'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\n\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\nexport const Universal = Ae.compose(Accounts, Chain, NodePool, Transaction, Aens, Contract, Oracle, GeneralizeAccount, {\n  init () {},\n  props: { process: {} }\n})\nexport const UniversalWithAccounts = Universal\nexport default Universal\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as Crypto from './utils/crypto'\nimport * as Bytes from './utils/bytes'\nimport * as TxBuilder from './tx/builder'\nimport * as TxBuilderHelper from './tx/builder/helpers'\nimport HdWallet from './utils/hd-wallet'\n\nimport Ae from './ae'\nimport Chain from './chain'\nimport ChainNode from './chain/node'\nimport Node from './node'\nimport NodePool from './node-pool'\nimport Tx from './tx'\nimport Transaction from './tx/tx'\nimport TransactionValidator from './tx/validator'\nimport Account from './account'\nimport Accounts from './accounts'\nimport MemoryAccount from './account/memory'\nimport Aens from './ae/aens'\nimport Contract from './ae/contract'\nimport GeneralizeAccount from './contract/ga'\nimport ContractCompilerAPI from './contract/compiler'\nimport Wallet from './ae/wallet'\nimport Aepp from './ae/aepp'\nimport Oracle from './ae/oracle'\nimport OracleNodeAPI from './oracle/node'\nimport Selector from './account/selector'\nimport Channel from './channel'\nimport Universal from './ae/universal'\nimport ContractACI from './contract/aci'\n\nexport {\n  Account,\n  Accounts,\n  Ae,\n  Aens,\n  Aepp,\n  Bytes,\n  Contract,\n  ContractCompilerAPI,\n  ContractACI,\n  ChainNode,\n  Channel,\n  Crypto,\n  Chain,\n  GeneralizeAccount,\n  HdWallet,\n  MemoryAccount,\n  Node,\n  NodePool,\n  Oracle,\n  OracleNodeAPI,\n  Selector,\n  Transaction,\n  TransactionValidator,\n  Tx,\n  TxBuilder,\n  TxBuilderHelper,\n  Universal,\n  Wallet\n}\n"],"sourceRoot":""}