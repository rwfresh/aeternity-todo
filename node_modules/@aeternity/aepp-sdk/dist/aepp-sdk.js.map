{"version":3,"sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/webpack/bootstrap","webpack://Ae/./node_modules/@babel/runtime/regenerator/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Ae/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Ae/./node_modules/ramda/src/merge.js","webpack://Ae/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Ae/external {\"commonjs\":\"@stamp/required\",\"commonjs2\":\"@stamp/required\"}","webpack://Ae/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\"}","webpack://Ae/./node_modules/ramda/src/head.js","webpack://Ae/./node_modules/ramda/src/internal/_curry2.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Ae/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Ae/external {\"commonjs\":\"@stamp/it\",\"commonjs2\":\"@stamp/it\"}","webpack://Ae/./node_modules/ramda/src/internal/_curry1.js","webpack://Ae/external {\"commonjs\":\"joi-browser\",\"commonjs2\":\"joi-browser\"}","webpack://Ae/./node_modules/ramda/src/keys.js","webpack://Ae/./node_modules/ramda/src/path.js","webpack://Ae/./node_modules/ramda/src/fromPairs.js","webpack://Ae/./node_modules/ramda/src/contains.js","webpack://Ae/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\"}","webpack://Ae/./node_modules/ramda/src/internal/_has.js","webpack://Ae/./node_modules/ramda/src/join.js","webpack://Ae/./node_modules/ramda/src/toString.js","webpack://Ae/./node_modules/ramda/src/type.js","webpack://Ae/./node_modules/ramda/src/pluck.js","webpack://Ae/./node_modules/ramda/src/internal/_dispatchable.js","webpack://Ae/./node_modules/ramda/src/internal/_xfBase.js","webpack://Ae/external {\"commonjs\":\"tweetnacl\",\"commonjs2\":\"tweetnacl\"}","webpack://Ae/./node_modules/ramda/src/mapObjIndexed.js","webpack://Ae/./node_modules/ramda/src/prop.js","webpack://Ae/./node_modules/ramda/src/last.js","webpack://Ae/external {\"commonjs\":\"rlp\",\"commonjs2\":\"rlp\"}","webpack://Ae/./node_modules/ramda/src/internal/_reduce.js","webpack://Ae/./node_modules/ramda/src/internal/_curry3.js","webpack://Ae/./node_modules/ramda/src/reject.js","webpack://Ae/./node_modules/ramda/src/isNil.js","webpack://Ae/./node_modules/ramda/src/values.js","webpack://Ae/./node_modules/ramda/src/pick.js","webpack://Ae/./node_modules/ramda/src/internal/_includes.js","webpack://Ae/./node_modules/ramda/src/internal/_isPlaceholder.js","webpack://Ae/./node_modules/ramda/src/curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_arity.js","webpack://Ae/./node_modules/ramda/src/flatten.js","webpack://Ae/external {\"commonjs\":\"@aeternity/bip39\",\"commonjs2\":\"@aeternity/bip39\"}","webpack://Ae/./node_modules/ramda/src/internal/_curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_isArray.js","webpack://Ae/./node_modules/ramda/src/invoker.js","webpack://Ae/./node_modules/ramda/src/flip.js","webpack://Ae/./node_modules/ramda/src/curry.js","webpack://Ae/external {\"commonjs\":\"bs58check\",\"commonjs2\":\"bs58check\"}","webpack://Ae/./node_modules/ramda/src/toUpper.js","webpack://Ae/./node_modules/ramda/src/defaultTo.js","webpack://Ae/./node_modules/ramda/src/toPairs.js","webpack://Ae/./node_modules/ramda/src/mergeDeepRight.js","webpack://Ae/./node_modules/ramda/src/groupBy.js","webpack://Ae/./node_modules/ramda/src/identity.js","webpack://Ae/./node_modules/ramda/src/indexBy.js","webpack://Ae/external {\"commonjs\":\"tweetnacl-auth\",\"commonjs2\":\"tweetnacl-auth\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Ae/./node_modules/ramda/src/internal/_includesWith.js","webpack://Ae/./node_modules/ramda/src/internal/_objectIs.js","webpack://Ae/./node_modules/ramda/src/internal/_isObject.js","webpack://Ae/./node_modules/ramda/src/internal/_isArrayLike.js","webpack://Ae/./node_modules/ramda/src/internal/_isString.js","webpack://Ae/./node_modules/ramda/src/internal/_map.js","webpack://Ae/./node_modules/ramda/src/internal/_objectAssign.js","webpack://Ae/./node_modules/ramda/src/nth.js","webpack://Ae/./node_modules/ramda/src/internal/_checkForMethod.js","webpack://Ae/./node_modules/ramda/src/reduceBy.js","webpack://Ae/./node_modules/ramda/src/slice.js","webpack://Ae/./node_modules/ramda/src/internal/_reduced.js","webpack://Ae/external {\"commonjs\":\"blakejs\",\"commonjs2\":\"blakejs\"}","webpack://Ae/external {\"commonjs\":\"aes-js\",\"commonjs2\":\"aes-js\"}","webpack://Ae/external {\"commonjs\":\"sha.js\",\"commonjs2\":\"sha.js\"}","webpack://Ae/./node_modules/ramda/src/without.js","webpack://Ae/./node_modules/ramda/src/uniqWith.js","webpack://Ae/./node_modules/ramda/src/identical.js","webpack://Ae/./node_modules/ramda/src/toLower.js","webpack://Ae/./node_modules/ramda/src/difference.js","webpack://Ae/./node_modules/ramda/src/mergeAll.js","webpack://Ae/./node_modules/ramda/src/assoc.js","webpack://Ae/./node_modules/ramda/src/has.js","webpack://Ae/./node_modules/ramda/src/drop.js","webpack://Ae/./node_modules/ramda/src/dropLast.js","webpack://Ae/./node_modules/ramda/src/zipObj.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toArray.js","webpack://Ae/external {\"commonjs\":\"websocket\",\"commonjs2\":\"websocket\"}","webpack://Ae/external \"events\"","webpack://Ae/./node_modules/ramda/src/once.js","webpack://Ae/./node_modules/ramda/src/pickBy.js","webpack://Ae/./node_modules/ramda/src/reduce.js","webpack://Ae/external {\"commonjs\":\"bip32-path\",\"commonjs2\":\"bip32-path\"}","webpack://Ae/./node_modules/uuid/v4.js","webpack://Ae/./node_modules/ramda/src/call.js","webpack://Ae/./node_modules/ramda/src/find.js","webpack://Ae/./node_modules/regenerator-runtime/runtime.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Ae/./node_modules/ramda/src/internal/_indexOf.js","webpack://Ae/./node_modules/ramda/src/equals.js","webpack://Ae/./node_modules/ramda/src/internal/_equals.js","webpack://Ae/./node_modules/ramda/src/internal/_arrayFromIterator.js","webpack://Ae/./node_modules/ramda/src/internal/_functionName.js","webpack://Ae/./node_modules/ramda/src/internal/_isArguments.js","webpack://Ae/./node_modules/ramda/src/internal/_complement.js","webpack://Ae/./node_modules/ramda/src/filter.js","webpack://Ae/./node_modules/ramda/src/internal/_isTransformer.js","webpack://Ae/./node_modules/ramda/src/internal/_filter.js","webpack://Ae/./node_modules/ramda/src/internal/_xwrap.js","webpack://Ae/./node_modules/ramda/src/bind.js","webpack://Ae/./node_modules/ramda/src/internal/_xfilter.js","webpack://Ae/./node_modules/ramda/src/internal/_makeFlat.js","webpack://Ae/./node_modules/ramda/src/internal/_isFunction.js","webpack://Ae/./node_modules/ramda/src/internal/_toString.js","webpack://Ae/./node_modules/ramda/src/internal/_quote.js","webpack://Ae/./node_modules/ramda/src/internal/_toISOString.js","webpack://Ae/./node_modules/ramda/src/internal/_Set.js","webpack://Ae/./node_modules/ramda/src/mergeDeepWithKey.js","webpack://Ae/./node_modules/ramda/src/mergeWithKey.js","webpack://Ae/./node_modules/ramda/src/internal/_xreduceBy.js","webpack://Ae/./node_modules/ramda/src/map.js","webpack://Ae/./node_modules/ramda/src/internal/_xmap.js","webpack://Ae/./node_modules/ramda/src/internal/_identity.js","webpack://Ae/./node_modules/ramda/src/hasPath.js","webpack://Ae/./node_modules/ramda/src/internal/_xdrop.js","webpack://Ae/./node_modules/ramda/src/internal/_dropLast.js","webpack://Ae/./node_modules/ramda/src/take.js","webpack://Ae/./node_modules/ramda/src/internal/_xtake.js","webpack://Ae/./node_modules/ramda/src/internal/_xdropLast.js","webpack://Ae/./node_modules/uuid/lib/rng.js","webpack://Ae/external \"crypto\"","webpack://Ae/./node_modules/uuid/lib/bytesToUuid.js","webpack://Ae/./node_modules/ramda/src/internal/_xfind.js","webpack://Ae/./es/utils/bytes.js","webpack://Ae/./es/tx/builder/schema.js","webpack://Ae/./es/tx/builder/helpers.js","webpack://Ae/./es/utils/crypto.js","webpack://Ae/./es/utils/mptree.js","webpack://Ae/./es/tx/builder/index.js","webpack://Ae/./es/utils/hd-wallet.js","webpack://Ae/./es/tx/index.js","webpack://Ae/./es/oracle/index.js","webpack://Ae/./es/chain/index.js","webpack://Ae/./es/account/index.js","webpack://Ae/./es/ae/index.js","webpack://Ae/./es/oracle/node.js","webpack://Ae/./es/utils/amount-formatter.js","webpack://Ae/./es/utils/async-init.js","webpack://Ae/./es/utils/json-big.js","webpack://Ae/./es/utils/string.js","webpack://Ae/./es/utils/swagger.js","webpack://Ae/./es/utils/semver-satisfies.js","webpack://Ae/./es/node.js","webpack://Ae/./es/node-pool/helpers.js","webpack://Ae/./es/node-pool/index.js","webpack://Ae/./es/tx/validator.js","webpack://Ae/./es/chain/node.js","webpack://Ae/./es/tx/tx.js","webpack://Ae/./es/account/memory.js","webpack://Ae/./es/account/selector.js","webpack://Ae/./es/accounts.js","webpack://Ae/./es/ae/aens.js","webpack://Ae/./es/utils/http.js","webpack://Ae/./es/contract/index.js","webpack://Ae/./es/contract/compiler.js","webpack://Ae/./es/contract/aci/transformation.js","webpack://Ae/./es/contract/aci/helpers.js","webpack://Ae/./es/contract/aci/index.js","webpack://Ae/./es/ae/contract.js","webpack://Ae/./es/contract/ga/helpers.js","webpack://Ae/./es/contract/ga/index.js","webpack://Ae/./es/rpc/server.js","webpack://Ae/./es/ae/wallet.js","webpack://Ae/./es/rpc/client.js","webpack://Ae/./es/ae/oracle.js","webpack://Ae/./es/ae/aepp.js","webpack://Ae/./es/channel/internal.js","webpack://Ae/./es/channel/handlers.js","webpack://Ae/./es/channel/index.js","webpack://Ae/./es/ae/universal.js","webpack://Ae/./es/index.js"],"names":["root","factory","exports","module","require","define","amd","undefined","global","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__18__","__WEBPACK_EXTERNAL_MODULE__26__","__WEBPACK_EXTERNAL_MODULE__30__","__WEBPACK_EXTERNAL_MODULE__42__","__WEBPACK_EXTERNAL_MODULE__48__","__WEBPACK_EXTERNAL_MODULE__56__","__WEBPACK_EXTERNAL_MODULE__72__","__WEBPACK_EXTERNAL_MODULE__73__","__WEBPACK_EXTERNAL_MODULE__74__","__WEBPACK_EXTERNAL_MODULE__87__","__WEBPACK_EXTERNAL_MODULE__92__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","_objectAssign","merge","_curry2","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","head","nth","_curry1","_isPlaceholder","f2","a","b","length","_b","_a","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof2","iterator","constructor","_typeof","f1","_has","_isArguments","hasEnumBug","toString","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","list","item","idx","keys","prop","nIdx","ks","checkArgsLength","path","paths","val","fromPairs","pairs","result","_includes","join","invoker","_toString","type","slice","map","pluck","_isArray","_isTransformer","methodNames","xf","Array","pop","transducer","init","_reduce","mapObjIndexed","acc","last","_isArrayLike","_xwrap","_iterableReduce","iter","step","next","_methodReduce","methodName","symIterator","len","_arrayReduce","reduce","TypeError","f3","_c","_complement","filter","pred","filterable","isNil","x","values","props","vals","pick","names","_indexOf","_arity","_curryN","curryN","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","flatten","_makeFlat","received","combined","argsIdx","left","combinedIdx","isArray","_isFunction","arity","method","target","flip","curry","toUpper","defaultTo","v","toPairs","mergeDeepWithKey","mergeDeepRight","lObj","rObj","k","lVal","rVal","_checkForMethod","groupBy","reduceBy","push","identity","indexBy","elem","from","is","_isString","nodeType","functor","assign","output","source","nextKey","offset","charAt","methodname","_dispatchable","valueFn","valueAcc","keyFn","elt","_curry3","fromIndex","toIndex","@@transducer/value","@@transducer/reduced","without","xs","_includesWith","uniqWith","_objectIs","identical","toLower","_Set","difference","first","second","out","firstLen","secondLen","toFilterOut","add","mergeAll","concat","assoc","hasPath","has","_xdrop","drop","Math","max","Infinity","_dropLast","dropLast","zipObj","min","once","called","pickBy","test","rng","bytesToUuid","options","buf","rnds","random","ii","find","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_arr","_n","_d","_e","_s","_i","arr2","equals","inf","indexOf","_equals","_arrayFromIterator","_functionName","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","valueOf","message","ignoreCase","multiline","sticky","unicode","size","entries","keysA","extendedStackA","extendedStackB","f","match","String","_filter","_isObject","_xfilter","XWrap","thisObj","_xfBase","XFilter","input","recursive","flatt","jlen","j","ilen","_map","_quote","_toISOString","seen","recur","y","mapPairs","sort","NaN","repr","replace","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","bIdx","mergeWithKey","XReduceBy","inputs","_xreduceBy","_xmap","XMap","_path","XDrop","take","_xtake","_reduced","XTake","ret","XDropLast","pos","full","store","_xdropLast","crypto","randomBytes","byteToHex","substr","bth","XFind","found","_xfind","leftPad","inputBuffer","fill","fillArray","Uint8Array","Buffer","rightPad","bigNumberToByteArray","hexString","toBytes","big","Number","isInteger","BigNumber","isBigNumber","VSN","OBJECT_TAG_SIGNED_TRANSACTION","TX_FIELD","prefix","TX_SCHEMA_FIELD","schema","objectId","MIN_GAS_PRICE","TX_TYPE","account","signed","spend","nameClaim","namePreClaim","nameUpdate","nameRevoke","nameTransfer","contract","contractCreate","contractCall","contractCallResult","oracleRegister","oracleExtend","oracleQuery","oracleResponse","channelCreate","channelCloseMutual","channelCloseSolo","channelSlash","channelDeposit","channelWithdraw","channelSettle","channelOffChain","channel","channelSnapshotSolo","channelOffChainUpdateTransfer","channelOffChainUpdateDeposit","channelOffChainUpdateWithdrawal","channelOffChainCreateContract","channelOffChainCallContract","proofOfInclusion","stateTrees","merklePatriciaTree","merklePatriciaTreeValue","contractsTree","contractCallsTree","channelsTree","nameserviceTree","oraclesTree","accountsTree","gaAttach","gaMeta","sophiaByteCode","VM_VERSIONS","ABI_VERSIONS","NO_ABI","SOPHIA","SOLIDITY","PROTOCOL_VM_ABI","1","_VM_ABI_MAP_ROMA","defineProperty_default","vmVersion","abiVersion","2","_VM_ABI_MAP_MINERVA","3","_VM_ABI_MAP_FORTUNA","OBJECT_ID_TX_TYPE","_OBJECT_ID_TX_TYPE","FIELD_TYPES","int","id","ids","string","binary","rlpBinary","rlpBinaries","rawBinary","bool","hex","signatures","pointers","offChainUpdates","callStack","mptree","callReturnType","ctVersion","sophiaCodeTypeInfo","payload","DEFAULT_FEE","TX_FEE_BASE_GAS","txType","TX_FEE_OTHER_GAS","_ref3","txSize","relativeTtl","times","plus","ceil","floor","PREFIX_ID_TAG","ak","nm","cm","ok","ct","ch","ID_TAG_PREFIX","_ref","_ref2","slicedToArray_default","VALIDATION_ERROR","msg","VALIDATION_MESSAGE","_VALIDATION_MESSAGE","_ref4","isMinusValue","_ref5","_ref6","_ref7","_ref8","_ref9","BASE_TX","ACCOUNT_TX","CONTRACT_BYTE_CODE_MINERVA","CONTRACT_BYTE_CODE_ROMA","ACCOUNT_TX_2","SPEND_TX","SIGNED_TX","NAME_PRE_CLAIM_TX","NAME_CLAIM_TX","NAME_UPDATE_TX","NAME_TRANSFER_TX","NAME_REVOKE_TX","CONTRACT_TX","GA_ATTACH_TX","GA_META_TX","CONTRACT_CREATE_TX","CONTRACT_CALL_TX","CONTRACT_CALL_RESULT_TX","ORACLE_REGISTER_TX","ORACLE_EXTEND_TX","ORACLE_QUERY_TX","ORACLE_RESPOND_TX","CHANNEL_CREATE_TX","CHANNEL_DEPOSIT_TX","CHANNEL_WITHDRAW_TX","CHANNEL_CLOSE_MUTUAL_TX","CHANNEL_CLOSE_SOLO_TX","CHANNEL_SLASH_TX","CHANNEL_SETTLE_TX","CHANNEL_OFFCHAIN_TX","CHANNEL_OFFCHAIN_TX_2","CHANNEL_TX","CHANNEL_TX_2","CHANNEL_SNAPSHOT_SOLO_TX","CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX","CHANNEL_OFFCHAIN_CALL_CONTRACT_TX","CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX","CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX","CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX","PROOF_OF_INCLUSION_TX","mptrees","STATE_TREES_TX","MERKLE_PATRICIA_TREE_TX","MERKLE_PATRICIA_TREE_VALUE_TX","CONTRACTS_TREE_TX","CONTRACT_CALLS_TREE_TX","CHANNELS_TREE_TX","NAMESERVICE_TREE_TX","ORACLES_TREE_TX","ACCOUNTS_TREE_TX","TX_SERIALIZATION_SCHEMA","schema_TX_SERIALIZATION_SCH","TX_DESERIALIZATION_SCHEMA","schema_TX_DESERIALIZATION_S","ERROR_TYPE","VERIFICATION_FIELD","verificationFn","VALIDATORS","ERRORS","invalidSignature","txKey","insufficientFee","expiredTTL","insufficientBalanceForAmountFee","insufficientBalanceForAmount","nonceUsed","nonceHigh","minGasPrice","vmAndAbiVersion","SIGNATURE_VERIFICATION_SCHEMA","CONTRACT_VERIFICATION_SCHEMA","_ref10","consensusProtocolVersion","JSON","stringify","BASE_VERIFICATION_SCHEMA","_ref11","minFee","_ref12","height","_ref13","balance","_ref14","_ref15","accountNonce","_ref16","createSalt","salt","base64Types","buildContractId","ownerId","nonce","encode","hash","toConsumableArray_default","decode","buildHash","data","oracleQueryId","senderId","oracleId","nonceBE","alloc","formatSalt","padStart","commitmentHash","_x","_commitmentHash","_callee","_args","regenerator_default","_context","encodeBase58Check","nameId","split","includes","decodeBase64Check","assertedType","decodeBase58Check","encodeBase64Check","writeId","hashId","idTag","readId","tag","readUIntBE","writeInt","readInt","buildPointers","readPointers","helpers","Ecb","aesjs","ModeOfOperation","ecb","isBase64","str","index","ADDRESS_FORMAT","sophia","api","raw","formatAddress","format","address","decodeNode","isAddressValid","isValid","e","addressToHex","base58CheckAddress","addressFromDecimal","decimalAddress","aeEncodeKey","blake2b","allocUnsafe","labels","sha256hash","shajs","update","digest","MAX_SAFE_INTEGER","buffer","checksum","checkSumFn","newChecksum","decodeRaw","bs58check","hexStringToByte","parseInt","encodeUnsigned","writeUInt32BE","findIndex","encodeContractAddress","owner","publicKey","generateKeyPairFromSecret","secret","nacl","sign","keyPair","fromSecretKey","generateKeyPair","publicBuffer","secretBuffer","secretKey","encryptPublicKey","password","binaryKey","encryptKey","encryptPrivateKey","binaryData","hashedPasswordBytes","encrypt","decryptKey","encrypted","encryptedBytes","aesEcb","decrypt","privateKey","detached","verify","signature","prepareTx","personalMessageToBinary","signPersonalMessage","verifyPersonalMessage","pubKeyAddress","generateSaveWallet","decryptPrivateKey","decryptPubKey","forceError","RegExp","decodeTx","txHash","RLP","encodeTx","txData","encodedTx","isValidKeypair","envKeypair","env","force","keypair","rlp","OBJECT_TAGS","CHANNEL_OFFCHAIN_UPDATE_TRANSFER","objectTag","pretty","readIntBE","4","5","6","readSignatures","deserializeOffChainUpdate","opts","prettyTags","version","to","amount","readOffChainTXUpdates","updates","deserialize","tx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","ttl","fee","channelId","round","rootHash","nodes","node","_objectSpread","serialize","tree","mptHash","ORACLE_TTL_TYPES","delta","block","getOracleRelativeTtl","params","_ref8$1$value","calculateMinFee","_ref11$gas","gas","multiplier","actualFee","buildFee","builder_objectSpread","expected","buildTx","rlpEncoded","calculateFee","_ref13$gas","_ref13$showWarning","showWarning","console","warn","gt","validateParams","_ref14$excludeKeys","excludeKeys","_ref17","_ref18","assert","valid","lt","gte","typeof_default","validateField","buildRawTx","_ref19$excludeKeys","oracleTtlType","oracleTtlValue","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","transformParams","_ref20","_ref22","_ref23","fieldType","mpt","serializeField","unpackRawTx","_ref24","_ref25","_value","vm","abi","unpackTx","funHash","fnName","argType","outType","deserializeField","_ref26","_ref26$excludeKeys","_ref26$prefix","_TX_SERIALIZATION_SCH","txObject","fromRlpBinary","objId","vsn","buildTxHash","rawTx","builder","ED25519_CURVE","HARDENED_OFFSET","toHex","derivePathFromKey","segments","fromString","toPathArray","segment","parentKey","deriveChild","getMasterKeyFromSeed","seed","I","hmac","chainCode","indexBuffer","hd_wallet","getSaveHDWalletAccounts","saveHDWallet","accountCount","walletKey","_","formatAccount","fromSeed","generateSaveHDWallet","mnemonic","validateMnemonic","masterKey","derivePathFromSeed","mnemonicToSeed","generateMnemonic","genMnemonic","Tx","stampit","deepConf","Ae","methods","required","spendTx","namePreclaimTx","nameClaimTx","nameTransferTx","nameUpdateTx","nameRevokeTx","contractCreateTx","contractCallTx","oracleRegisterTx","oracleExtendTx","oraclePostQueryTx","oracleRespondTx","getAccountNonce","channelCloseSoloTx","channelSlashTx","channelSettleTx","channelSnapshotSoloTx","gaAttachTx","getVmVersion","prepareTxParams","OracleBase","Contract","getOracle","getOracleQueries","getOracleQuery","Chain","Oracle","compose","deepProps","defaults","waitMined","statics","sendTransaction","awaitHeight","topBlock","poll","getTxInfo","mempool","txDryRun","getAccount","DEFAULT_NETWORK_ID","opt","networkId","rlpBinaryTx","txWithNetworkId","getNetworkId","Crypto","t0","Account","signTransaction","selectedNode","gaId","authFun","merge_default","t1","contractId","signUsingGA","ae_objectSpread","t2","_callee2","authData","_args2","_context2","createMetaTx","_callee3","recipientId","_args3","_context3","t3","t4","t5","t6","t7","send","_callee4","percentage","requestTransferAmount","_TxBuilder$unpackTx","_args4","_context4","excludeFee","t8","t9","t10","t11","t12","TxBuilder","minus","t13","t14","t15","t16","t17","t18","t19","t20","transferFunds","destroyInstance","_this","deepConfiguration","getOracleByPubkey","getOracleQueriesByPubkey","queryId","getOracleQueryByPubkeyAndQueryId","OracleNodeAPI","prefixes","magnitude","amount_formatter","exponent","abs","shiftedBy","precision","asyncInit","stamp","instance","AsyncInit","initializers","asyncToGenerator_default","_x2","at","text","_options","escapee","number","white","array","composers","composables","without_default","uniqWith_default","identical_default","flatten_default","path_default","json_big","gap","indent","rep","escapable","meta","\b","\t","\n","\f","\r","\"","\\","quote","lastIndex","charCodeAt","replacer","space","holder","partial","mind","toJSON","isFinite","","parse","strict","storeAsString","/","uffff","fromCharCode","word","reviver","walk","snakeToPascal","toUpper_default","pascalToSnake","toLower_default","expandPath","replacements","toPairs_default","lookupType","spec","types","conformTypes","integer","type_default","enum","contains_default","join_default","properties","pascalizeKeys","missing","difference_default","keys_default","mapObjIndexed_default","extendingErrorPath","conform","reject_default","isNil_default","pick_default","items","$ref","allOf","mergeAll_default","conformDispatch","httpConfig","headers","Content-Type","transformResponse","JsonBig","transformRequest","httpClients","config","url","axios","mergeDeepRight_default","post","classifyParameters","parameters","_R$groupBy","groupBy_default","req","_R$groupBy2","query","body","pathArgs","pluck_default","queryArgs","bodyArgs","pascalizeParameters","assoc_default","traverseKeys","curry_default","fromPairs_default","identity_default","snakizeKeys","operationSignature","assertOne","coll","head_default","destructureClientError","_error$config","_error$response","response","status","reason","has_default","toString_default","toUpperCase","Swagger","_ref7$swag","swag","axiosConfig","definitions","indexBy_default","prop_default","values_default","definition","errorHandler","operationId","description","toLowerCase","drop_default","pascalized","_classifyParameters","optNames","indexedParameters","client","conformed","expandedPath","_arguments","dropLast_default","last_default","debug","log","zipObj_default","axiosError","fullResponse","defineProperties","operation","op","urlFor","basePath","txEncoding","debugSwagger","semver_satisfies","geVersion","ltVersion","versionComponents","geComponents","ltComponents","base","toNumber","components","pow","vNumber","geNumber","ltNumber","remoteSwag","loader","internalUrl","tags","protocols","_protocols$reduce","getCurrentKeyBlock","effectiveAtHeight","_init2","_init","Node","_ref2$url","_ref2$internalUrl","_ref2$axiosConfig","_x3","handler","getNodeInfo","nodeNetworkId","getConsensusProtocolVersion","_ref3$forceCompatibil","forceCompatibility","revision","genesisHash","getStatus","nodeRevision","genesisKeyBlockHash","semverSatisfies","NODE_GE_VERSION","NODE_LT_VERSION","_x4","prepareNodeObject","NodePool","_ref$nodes","_ref$url","_ref$internalUrl","pool","Map","validateNodes","selectNode","addNode","propertyDescriptors","currentNode","getterForCurrentNode","nodeInstance","select","isNodeConnected","node_pool_objectSpread","getNodesInPool","nodeProps","ownerPublicKey","_ref$networkId","lte","_ref4$amount","_ref5$amount","gasPrice","supportedProtocol","txProtocol","resolveDataForBase","chain","accountBalance","getAccountByPubkey","validator_objectSpread","getCurrentKeyBlockHeight","verifySchema","validatorKey","_ref16$","_unpackTx","unpackedTx","_unpackedTx$encodedTx","_txType","rlpEncodedTx","verifyTx","validation","getOwnerPublicKey","resolvedData","signatureVerification","baseVerification","customVerification","TransactionValidator","unpackAndVerify","_R$merge","verifyTxBeforeSend","code","errorData","postTransaction","node_objectSpread","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","_ref5$format","formatBalance","getTransactionByHash","_callee5","_context5","pause","_callee6","duration","_context6","setTimeout","_callee8","h","_ref7$interval","interval","_ref7$attempts","attempts","probe","_probe","_args8","_context8","_callee7","current","_context7","_x18","_callee9","top","_context9","getTopBlock","_callee11","th","_ref10$blocks","blocks","_ref10$interval","_probe2","_args11","_context11","_callee10","_context10","blockHeight","_callee12","_context12","getTransactionInfoByHash","res","callInfo","_callee13","_context13","getPendingTransactions","_callee14","_context14","getCurrentGeneration","_callee15","hashOrHeight","_context15","getGenerationByHash","getGenerationByHeight","_callee16","_context16","getMicroBlockTransactionsByHash","transactions","_callee17","_context17","getKeyBlockByHash","getKeyBlockByHeight","_callee18","_context18","getMicroBlockHeaderByHash","_callee19","txs","accounts","_context19","dryRunTxs","_callee20","_context20","getContractCode","_callee21","_context21","getNameEntryByName","ChainNode","_ref$verifyTx","getGeneration","getMicroBlockHeader","getMicroBlockTransactions","getKeyBlock","getContractByteCode","getName","_ref$payload","_ref21","tx_objectSpread","nativeMode","postSpend","accountId","commitmentId","postNamePreclaim","nameSalt","postNameClaim","_ref27","_ref28","postNameTransfer","_ref29","_ref30","_args5","nameTtl","clientTtl","postNameUpdate","_ref31","_ref32","_args6","postNameRevoke","_ref7$gasPrice","_ref33","_args7","deposit","callData","postContractCreate","callerId","_ref8$gasPrice","_ref34","_ref35","postContractCall","queryFormat","responseFormat","queryFee","oracleTtl","_this$getVmVersion","_ref36","_ref37","_args9","postOracleRegister","_ref38","_ref39","_args10","postOracleExtend","responseTtl","queryTtl","_ref40","_ref41","postOracleQuery","_ref42","_ref43","_args12","postOracleRespond","fromId","poi","_ref44","_ref45","_args13","postChannelCloseSolo","_ref46","_ref47","_args14","postChannelSlash","initiatorAmountFinal","responderAmountFinal","_ref48","_ref49","_args15","postChannelSettle","_ref50","_ref51","_args16","postChannelSnapshotSolo","_ref17$gasPrice","_ref52","_args17","calculateTtl","relative","_ref53","_args18","_ref54","_ref19","absoluteTtl","_args20","Transaction","_ref20$nativeMode","_ref20$showWarning","protocolForTX","secrets","WeakMap","MemoryAccount","pub","priv","isBuffer","pubBuffer","validateKeyPair","setSecret","onAccount","signWith","Selector","selectAccount","Accounts","_ref$accounts","all","_x5","process","addAccount","_acc","removeAccount","setKeypair","addresses","classify","klass","freeze","_update2","aens_objectSpread","aensUpdate","aensQuery","_x10","_x11","transfer","_transfer2","aensTransfer","_x12","_x13","revoke","_revoke2","aensRevoke","_x14","claimTx","_salt","preclaimTx","_this2","claim","aensClaim","Aens","aensPreclaim","processResponse","baseUrl","put","statusText","Http","changeBaseUrl","newUrl","delete","ContractBase","contractEncodeCallDataAPI","contractDecodeDataAPI","compileContractAPI","contractGetACI","setCompilerUrl","getCompilerVersion","contractDecodeCallResultAPI","http","isInit","function","calldata","bytecode","callValue","callResult","call-result","call-value","sophia-type","compilerVersion","checkCompatibility","COMPILER_GE_VERSION","COMPILER_LT_VERSION","ContractCompilerAPI","_ref$compilerUrl","compilerUrl","_x17","contractDecodeCallDataByCodeAPI","contractDecodeCallDataBySourceAPI","SOPHIA_TYPES","transformation_objectSpread","linkTypeDefs","bindings","typeDef","aciType","typedef","vars","_Object$entries","_Object$entries2","_Object$entries2$","baseType","generic","_Object$entries3","_Object$entries4","_Object$entries4$","varianValue","variant","el","_Object$entries$","injectVars","readType","contractName","_Object$entries5","_Object$entries6","_Object$entries6$","transform","_transform","_readType3","optionV","tuple","option","bytes","_x9","transformMap","transformVariant","_ref25$","variantArgs","_Object$entries11","_Object$entries12","_Object$entries12$","_x15","_x16","_x6","_x7","_x8","_transformMap","_x19","transformDecodedData","aci","_ref12$skipTransformD","skipTransformDecoded","addressPrefix","_readType","_generic","keyT","valueT","_Object$entries7","_Object$entries8","_Object$entries8$","variantType","genericMap","getJoiErrorMsg","errors","label","JoiBinary","Joi","extend","joi","any","pre","convert","rules","validate","createError","validateArguments","validationSchema","ordered","prepareSchema","_Joi$string","_Joi$object","_readType2","alternatives","_Object$entries9","_Object$entries10","_Object$entries10$","g","or","regex","bufferCheck","abortEarly","getFunctionACI","functions","helpers_objectSpread","type_defs","buildContractMethods","_getFunctionACI","aciArgs","_parseArguments","parseArguments","deploy","stateful","_parseArguments2","callStatic","_parseArguments3","_parseArguments4","prepareArgsForEncode","contractAddress","defaultOptions","skipArgsConvert","interface","defaultTo_default","compiled","deployInfo","setOptions","compile","fnACI","contractCallStatic","aci_objectSpread","returns","decodedResult","transaction","createdAt","contractDeploy","contractCompile","getContractInstance","_decodedError","decodedError","returnValue","_ref$options","dryRunAmount","dryRunAccount","_results","_results$","callObj","returnType","contractEncodeCall","pubKey","results","handleCallError","contractDecodeData","initState","_this3","_call","_callStatic","contract_objectSpread","_x20","_this4","encodeCall","_encodeCall","_x21","_x22","_deploy","_x23","ContractAPI","ContractACI","ContractWithCompiler","prepareGaParams","ins","authFnName","authCallData","getContractAuthFan","typeInfo","wrapInEmptySignedTx","GeneralizeAccount","createGeneralizeAccount","isGA","gaContractId","rawTransaction","_wrapInEmptySignedTx","_buildTx","metaTxRlp","_wrapInEmptySignedTx2","ga_objectSpread","origin","session","jsonrpc","call_default","rpcMethods","rpcSessions","server_objectSpread","postMessage","RpcServer","_ref2$self","window","receive","addEventListener","destroyServer","removeEventListener","createSession","uuid","hello","flip_default","handlers","Rpc","deepProperties","_R$find","find_default","Wallet","_ref3$onTx","onTx","_ref3$onChain","onChain","_ref3$onAccount","_ref3$onContract","onContract","rpc","RpcClient","_ref$parent","parent","_ref$self","sequence","callbacks","_data$result","destroyClient","_len","_key","getOracleObject","oracle","queries","oracleQueries","oracle_objectSpread","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","_getQuery","getQueryObject","respond","pollForResponse","pollForQueryResponse","_ref$attempts","_ref$interval","emptyResponse","_pause","registerOracle","_pollForQueryResponse","Aepp","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","rpcCallbacks","pingTimeoutId","pongTimeoutId","channelURL","paramString","encodeURIComponent","emit","_eventEmitters$get","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","JSONBig","enqueueAction","guard","action","locked","queue","handleMessage","_fsm$get","dequeueMessage","_queue","remaining","toArray_default","ping","clearTimeout","disconnect","onMessage","callback","channel_id","_ref2$","details","wrapCallErrorMessage","close","WebSocket","fireOnce","once_default","original","ws","W3CWebSocket","initialize","channelOptions","optionsKeys","wsUrl","pickBy_default","internal_objectSpread","protocol","awaitingConnection","EventEmitter","onopen","onclose","onmessage","encodeRlpTx","appendSignature","signFn","_unpackTx$tx","signedTx","handleUnexpectedMessage","wsMessage","channelOpen","event","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","channelClosed","_awaitingChannelCreateTx","_signedTx","role","awaitingOnChainTx","signed_tx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","_channelOpen","awaitingTxSignRequest","awaitingOffChainTx","_awaitingOffChainTx","_signedTx2","_message$error$data","awaitingOffChainUpdate","accepted","_awaitingTxSignRequest","_signedTx3","awaitingUpdateConflict","awaitingShutdownTx","_awaitingShutdownTx","_signedTx4","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","_awaitingWithdrawTx","_signedTx5","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","_awaitingDepositTx","_signedTx6","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","_x24","_x25","_x26","_awaitingNewContractTx","_signedTx7","awaitingNewContractCompletion","awaitingCallContractUpdateTx","_x27","_x28","_x29","_awaitingCallContractUpdateTx","_signedTx8","awaitingCallContractCompletion","awaitingCallsPruned","channels","snakeToPascalObjKeys","channel_objectSpread","contracts","reduce_default","call_data","contract_id","abi_version","caller","caller_id","pubkey","Channel","on","channelStatus","balances","leave","shutdown","sendMessage","recipient","withdraw","_this5","createContract","_this6","vm_version","callContract","_this7","callContractStatic","getContractCall","getContractState","channelDisconnect","cleanContractCalls","_this8","Universal","__webpack_exports__","es_account","es_accounts","ae","aens","aepp","bytes_namespaceObject","ae_contract","compiler","contract_aci","chain_node","es_channel","crypto_namespaceObject","es_chain","ga","memory","es_node","node_pool","ae_oracle","oracle_node","selector","tx_tx","validator","es_tx","builder_namespaceObject","helpers_namespaceObject","universal","wallet"],"mappings":"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","file":"aepp-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@stamp/required\"), require(\"bignumber.js\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , , , , , , , , , , , , , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"@stamp/required\"), require(\"bignumber.js\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__18__, __WEBPACK_EXTERNAL_MODULE__26__, __WEBPACK_EXTERNAL_MODULE__30__, __WEBPACK_EXTERNAL_MODULE__42__, __WEBPACK_EXTERNAL_MODULE__48__, __WEBPACK_EXTERNAL_MODULE__56__, __WEBPACK_EXTERNAL_MODULE__72__, __WEBPACK_EXTERNAL_MODULE__73__, __WEBPACK_EXTERNAL_MODULE__74__, __WEBPACK_EXTERNAL_MODULE__87__, __WEBPACK_EXTERNAL_MODULE__92__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 135);\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nmodule.exports = merge;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head = /*#__PURE__*/nth(0);\nmodule.exports = head;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _isArguments = /*#__PURE__*/require('./internal/_isArguments');\n\n// cover IE < 9 keys issues\n\n\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nmodule.exports = keys;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\n\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nmodule.exports = path;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = fromPairs;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains = /*#__PURE__*/_curry2(_includes);\nmodule.exports = contains;","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nmodule.exports = _has;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join = /*#__PURE__*/invoker(1, 'join');\nmodule.exports = join;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _toString = /*#__PURE__*/require('./internal/_toString');\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nmodule.exports = toString;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nmodule.exports = type;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar map = /*#__PURE__*/require('./map');\n\nvar prop = /*#__PURE__*/require('./prop');\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nmodule.exports = pluck;","var _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isTransformer = /*#__PURE__*/require('./_isTransformer');\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__26__;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nmodule.exports = mapObjIndexed;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar path = /*#__PURE__*/require('./path');\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nmodule.exports = prop;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last = /*#__PURE__*/nth(-1);\nmodule.exports = last;","module.exports = __WEBPACK_EXTERNAL_MODULE__30__;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\nvar _xwrap = /*#__PURE__*/require('./_xwrap');\n\nvar bind = /*#__PURE__*/require('../bind');\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\nmodule.exports = _reduce;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\nmodule.exports = _curry3;","var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nmodule.exports = isNil;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nmodule.exports = values;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = pick;","var _indexOf = /*#__PURE__*/require('./_indexOf');\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\nmodule.exports = _includes;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _makeFlat = /*#__PURE__*/require('./internal/_makeFlat');\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nmodule.exports = flatten;","module.exports = __WEBPACK_EXTERNAL_MODULE__42__;","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isFunction = /*#__PURE__*/require('./internal/_isFunction');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar toString = /*#__PURE__*/require('./toString');\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nmodule.exports = invoker;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = flip;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nmodule.exports = curry;","module.exports = __WEBPACK_EXTERNAL_MODULE__48__;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nmodule.exports = defaultTo;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nmodule.exports = toPairs;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar mergeDeepWithKey = /*#__PURE__*/require('./mergeDeepWithKey');\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepRight;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nmodule.exports = groupBy;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _identity = /*#__PURE__*/require('./internal/_identity');\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity = /*#__PURE__*/_curry1(_identity);\nmodule.exports = identity;","var reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","module.exports = __WEBPACK_EXTERNAL_MODULE__56__;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}\nmodule.exports = _includesWith;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\nmodule.exports = _isObject;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isString = /*#__PURE__*/require('./_isString');\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nmodule.exports = _isArrayLike;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\nmodule.exports = _isString;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _map;","var _has = /*#__PURE__*/require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nmodule.exports = nth;","var _isArray = /*#__PURE__*/require('./_isArray');\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\nmodule.exports = _checkForMethod;","var _curryN = /*#__PURE__*/require('./internal/_curryN');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xreduceBy = /*#__PURE__*/require('./internal/_xreduceBy');\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nmodule.exports = reduceBy;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nmodule.exports = slice;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _reduced;","module.exports = __WEBPACK_EXTERNAL_MODULE__72__;","module.exports = __WEBPACK_EXTERNAL_MODULE__73__;","module.exports = __WEBPACK_EXTERNAL_MODULE__74__;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar flip = /*#__PURE__*/require('./flip');\n\nvar reject = /*#__PURE__*/require('./reject');\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nmodule.exports = without;","var _includesWith = /*#__PURE__*/require('./internal/_includesWith');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = uniqWith;","var _objectIs = /*#__PURE__*/require('./internal/_objectIs');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nmodule.exports = identical;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _Set = /*#__PURE__*/require('./internal/_Set');\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = difference;","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nmodule.exports = mergeAll;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nmodule.exports = assoc;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar hasPath = /*#__PURE__*/require('./hasPath');\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nmodule.exports = has;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xdrop = /*#__PURE__*/require('./internal/_xdrop');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nmodule.exports = drop;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _dropLast = /*#__PURE__*/require('./internal/_dropLast');\n\nvar _xdropLast = /*#__PURE__*/require('./internal/_xdropLast');\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = zipObj;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__87__;","module.exports = require(\"events\");","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\n\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nmodule.exports = once;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nmodule.exports = pickBy;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nmodule.exports = reduce;","module.exports = __WEBPACK_EXTERNAL_MODULE__92__;","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var curry = /*#__PURE__*/require('./curry');\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xfind = /*#__PURE__*/require('./internal/_xfind');\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nmodule.exports = find;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var equals = /*#__PURE__*/require('../equals');\n\nfunction _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}\nmodule.exports = _indexOf;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _equals = /*#__PURE__*/require('./internal/_equals');\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nmodule.exports = equals;","var _arrayFromIterator = /*#__PURE__*/require('./_arrayFromIterator');\n\nvar _includesWith = /*#__PURE__*/require('./_includesWith');\n\nvar _functionName = /*#__PURE__*/require('./_functionName');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _objectIs = /*#__PURE__*/require('./_objectIs');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar type = /*#__PURE__*/require('../type');\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\nmodule.exports = _equals;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}\nmodule.exports = _arrayFromIterator;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\nmodule.exports = _functionName;","var _has = /*#__PURE__*/require('./_has');\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\nmodule.exports = _complement;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _filter = /*#__PURE__*/require('./internal/_filter');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xfilter = /*#__PURE__*/require('./internal/_xfilter');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nmodule.exports = filter;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\nmodule.exports = _isTransformer;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _filter;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\nmodule.exports = _xwrap;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nmodule.exports = bind;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFilter = /*#__PURE__*/function () {\n\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nmodule.exports = _xfilter;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\nmodule.exports = _makeFlat;","function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}\nmodule.exports = _isFunction;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _map = /*#__PURE__*/require('./_map');\n\nvar _quote = /*#__PURE__*/require('./_quote');\n\nvar _toISOString = /*#__PURE__*/require('./_toISOString');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar reject = /*#__PURE__*/require('../reject');\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\nmodule.exports = _toString;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _Set = /*#__PURE__*/function () {\n\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = _Set;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar mergeWithKey = /*#__PURE__*/require('./mergeWithKey');\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepWithKey;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nmodule.exports = mergeWithKey;","var _curryN = /*#__PURE__*/require('./_curryN');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XReduceBy = /*#__PURE__*/function () {\n\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nmodule.exports = _xreduceBy;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _map = /*#__PURE__*/require('./internal/_map');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xmap = /*#__PURE__*/require('./internal/_xmap');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nmodule.exports = map;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XMap = /*#__PURE__*/function () {\n\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nmodule.exports = _xmap;","function _identity(x) {\n  return x;\n}\nmodule.exports = _identity;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nmodule.exports = hasPath;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDrop = /*#__PURE__*/function () {\n\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nmodule.exports = _xdrop;","var take = /*#__PURE__*/require('../take');\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xtake = /*#__PURE__*/require('./internal/_xtake');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nmodule.exports = take;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XTake = /*#__PURE__*/function () {\n\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nmodule.exports = _xtake;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDropLast = /*#__PURE__*/function () {\n\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nmodule.exports = _xdropLast;","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","module.exports = require(\"crypto\");","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFind = /*#__PURE__*/function () {\n\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nmodule.exports = _xfind;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Bytes module\n * @module @aeternity/aepp-sdk/es/utils/bytes\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/bytes'\n */\n\n/**\n * Left pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function leftPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([fillArray, inputBuffer])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Right pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function rightPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([inputBuffer, fillArray])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Convert bignumber to byte array\n * @param x bignumber instance\n * @return Buffer\n */\nexport function bigNumberToByteArray (x) {\n  let hexString = x.toString(16)\n  if (hexString.length % 2 > 0) hexString = '0' + hexString\n  return Buffer.from(hexString, 'hex')\n}\nexport function toBytes (val, big = false) {\n  // \"\"\"\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined) return undefined\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = BigNumber(val)\n    return bigNumberToByteArray(val)\n  }\n  if (typeof val === 'string') {\n    return val.toString('utf-8')\n  }\n  throw new Error('Byte serialization not supported')\n}\n","/**\n * Transaction Schema for TxBuilder\n * @module @aeternity/aepp-sdk/es/tx/builder/schema\n * @export TxSchema\n * @example import TxSchema from '@aeternity/aepp-sdk/es/tx/builder/schema'\n */\n/* eslint-disable no-unused-vars */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js'\n\nexport const VSN = 1\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\n// # OBJECT tags\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\nconst OBJECT_TAG_ACCOUNT = 10\nexport const OBJECT_TAG_SIGNED_TRANSACTION = 11\nconst OBJECT_TAG_SPEND_TRANSACTION = 12\nconst OBJECT_TAG_ORACLE_REGISTER_TRANSACTION = 22\nconst OBJECT_TAG_ORACLE_QUERY_TRANSACTION = 23\nconst OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION = 24\nconst OBJECT_TAG_ORACLE_EXTEND_TRANSACTION = 25\nconst OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION = 32\nconst OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION = 33\nconst OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION = 34\nconst OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION = 35\nconst OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION = 36\nconst OBJECT_TAG_CONTRACT = 40\nconst OBJECT_TAG_CONTRACT_CALL = 41\nconst OBJECT_TAG_CONTRACT_CREATE_TRANSACTION = 42\nconst OBJECT_TAG_CONTRACT_CALL_TRANSACTION = 43\nconst OBJECT_TAG_CHANNEL_CREATE_TX = 50\nconst OBJECT_TAG_CHANNEL_DEPOSIT_TX = 51\nconst OBJECT_TAG_CHANNEL_WITHRAW_TX = 52\nconst OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX = 53\nconst OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX = 54\nconst OBJECT_TAG_CHANNEL_SLASH_TX = 55\nconst OBJECT_TAG_CHANNEL_SETTLE_TX = 56\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_TX = 57\nconst OBJECT_TAG_CHANNEL = 58\nconst OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX = 59\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = 570\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = 571\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = 572\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = 573\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = 574\nconst OBJECT_TAG_PROOF_OF_INCLUSION = 60\nconst OBJECT_TAG_STATE_TREES = 62\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE = 63\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE = 64\nconst OBJECT_TAG_CONTRACTS_TREE = 621\nconst OBJECT_TAG_CONTRACT_CALLS_TREE = 622\nconst OBJECT_TAG_CHANNELS_TREE = 623\nconst OBJECT_TAG_NAMESERVICE_TREE = 624\nconst OBJECT_TAG_ORACLES_TREE = 625\nconst OBJECT_TAG_ACCOUNTS_TREE = 626\nconst OBJECT_TAG_GA_ATTACH = 80\nconst OBJECT_TAG_GA_META = 81\nconst OBJECT_TAG_SOPHIA_BYTE_CODE = 70\n\nconst TX_FIELD = (name, type, prefix) => [name, type, prefix]\nconst TX_SCHEMA_FIELD = (schema, objectId) => [schema, objectId]\n\nexport const MIN_GAS_PRICE = 1000000000 // min gasPrice 1e9\nexport const MAX_AUTH_FUN_GAS = 50000 // min gasPrice 1e9\n\nconst revertObject = (obj) => Object.entries(obj).reduce((acc, [key, v]) => (acc[v] = key) && acc, {})\n\n/**\n * @constant\n * @description Object with transaction types\n * @type {Object} TX_TYPE\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/schema\n * @property {String} signed\n * @property {String} spend\n * @property {String} nameClaim\n * @property {String} namePreClaim\n * @property {String} nameUpdate\n * @property {String} nameRevoke\n * @property {String} nameTransfer\n * @property {String} contractCreate\n * @property {String} contractCall\n * @property {String} oracleRegister\n * @property {String} oracleExtend\n * @property {String} oracleQuery\n * @property {String} oracleResponse\n */\nexport const TX_TYPE = {\n  account: 'account',\n  signed: 'signedTx',\n  spend: 'spendTx',\n  // AENS\n  nameClaim: 'nameClaimTx',\n  namePreClaim: 'namePreClaimTx',\n  nameUpdate: 'nameUpdateTx',\n  nameRevoke: 'nameRevokeTx',\n  nameTransfer: 'nameTransfer',\n  // CONTRACT\n  contract: 'contract',\n  contractCreate: 'contractCreateTx',\n  contractCall: 'contractCallTx',\n  contractCallResult: 'contractCallResult',\n  // ORACLE\n  oracleRegister: 'oracleRegister',\n  oracleExtend: 'oracleExtend',\n  oracleQuery: 'oracleQuery',\n  oracleResponse: 'oracleResponse',\n  // STATE CHANNEL\n  channelCreate: 'channelCreate',\n  channelCloseMutual: 'channelCloseMutual',\n  channelCloseSolo: 'channelCloseSolo',\n  channelSlash: 'channelSlash',\n  channelDeposit: 'channelDeposit',\n  channelWithdraw: 'channelWithdraw',\n  channelSettle: 'channelSettle',\n  channelOffChain: 'channelOffChain',\n  channel: 'channel',\n  channelSnapshotSolo: 'channelSnapshotSolo',\n  channelOffChainUpdateTransfer: 'channelOffChainUpdateTransfer',\n  channelOffChainUpdateDeposit: 'channelOffChainUpdateDeposit',\n  channelOffChainUpdateWithdrawal: 'channelOffChainUpdateWithdrawal',\n  channelOffChainCreateContract: 'channelOffChainCreateContract',\n  channelOffChainCallContract: 'channelOffChainCallContract',\n  proofOfInclusion: 'proofOfInclusion',\n  stateTrees: 'stateTrees',\n  merklePatriciaTree: 'merklePatriciaTree',\n  merklePatriciaTreeValue: 'merklePatriciaTreeValue',\n  contractsTree: 'contractsTree',\n  contractCallsTree: 'contractCallsTree',\n  channelsTree: 'channelsTree',\n  nameserviceTree: 'nameserviceTree',\n  oraclesTree: 'oraclesTree',\n  accountsTree: 'accountsTree',\n  // GA ACCOUNTS\n  gaAttach: 'gaAttach',\n  gaMeta: 'gaMeta',\n  sophiaByteCode: 'sophiaByteCode'\n}\n\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const VM_VERSIONS = {\n  NO_VM: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  SOPHIA_IMPROVEMENTS_MINERVA: 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA: 4\n}\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const ABI_VERSIONS = {\n  NO_ABI: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2\n}\n\nexport const VM_ABI_MAP_ROMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_MINERVA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA, VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_FORTUNA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const PROTOCOL_VM_ABI = {\n  // Roma\n  '1': VM_ABI_MAP_ROMA,\n  // Minerva\n  '2': VM_ABI_MAP_MINERVA,\n  // Fortuna\n  '3': VM_ABI_MAP_FORTUNA\n}\n\nexport const OBJECT_ID_TX_TYPE = {\n  [OBJECT_TAG_ACCOUNT]: TX_TYPE.account,\n  [OBJECT_TAG_SIGNED_TRANSACTION]: TX_TYPE.signed,\n  [OBJECT_TAG_SPEND_TRANSACTION]: TX_TYPE.spend,\n  // AENS\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: TX_TYPE.nameClaim,\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: TX_TYPE.namePreClaim,\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: TX_TYPE.nameUpdate,\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: TX_TYPE.nameRevoke,\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: TX_TYPE.nameTransfer,\n  // CONTRACT\n  [OBJECT_TAG_CONTRACT]: TX_TYPE.contract,\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: TX_TYPE.contractCreate,\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: TX_TYPE.contractCall,\n  [OBJECT_TAG_CONTRACT_CALL]: TX_TYPE.contractCallResult,\n  // ORACLE\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: TX_TYPE.oracleRegister,\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: TX_TYPE.oracleExtend,\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: TX_TYPE.oracleQuery,\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: TX_TYPE.oracleResponse,\n  // STATE CHANNEL\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: TX_TYPE.channelCreate,\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: TX_TYPE.channelCloseMutual,\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: TX_TYPE.channelCloseSolo,\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: TX_TYPE.channelSlash,\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: TX_TYPE.channelDeposit,\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: TX_TYPE.channelWithdraw,\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: TX_TYPE.channelSettle,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: TX_TYPE.channelOffChain,\n  [OBJECT_TAG_CHANNEL]: TX_TYPE.channel,\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: TX_TYPE.channelSnapshotSolo,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: TX_TYPE.channelOffChainUpdateTransfer,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: TX_TYPE.channelOffChainUpdateDeposit,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: TX_TYPE.channelOffChainUpdateWithdrawal,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: TX_TYPE.channelOffChainCreateContract,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: TX_TYPE.channelOffChainCallContract,\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: TX_TYPE.proofOfInclusion,\n  [OBJECT_TAG_STATE_TREES]: TX_TYPE.stateTrees,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: TX_TYPE.merklePatriciaTree,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: TX_TYPE.merklePatriciaTreeValue,\n  [OBJECT_TAG_CONTRACTS_TREE]: TX_TYPE.contractsTree,\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: TX_TYPE.contractCallsTree,\n  [OBJECT_TAG_CHANNELS_TREE]: TX_TYPE.channelsTree,\n  [OBJECT_TAG_NAMESERVICE_TREE]: TX_TYPE.nameserviceTree,\n  [OBJECT_TAG_ORACLES_TREE]: TX_TYPE.oraclesTree,\n  [OBJECT_TAG_ACCOUNTS_TREE]: TX_TYPE.accountsTree,\n  // GA Accounts\n  [OBJECT_TAG_GA_ATTACH]: TX_TYPE.gaAttach,\n  [OBJECT_TAG_GA_META]: TX_TYPE.gaMeta,\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: TX_TYPE.sophiaByteCode\n}\n\nexport const FIELD_TYPES = {\n  int: 'int',\n  id: 'id',\n  ids: 'ids',\n  string: 'string',\n  binary: 'binary',\n  rlpBinary: 'rlpBinary',\n  rlpBinaries: 'rlpBinaries',\n  rawBinary: 'rawBinary',\n  bool: 'bool',\n  hex: 'hex',\n  signatures: 'signatures',\n  pointers: 'pointers',\n  offChainUpdates: 'offChainUpdates',\n  callStack: 'callStack',\n  proofOfInclusion: 'proofOfInclusion',\n  mptree: 'mptree',\n  callReturnType: 'callReturnType',\n  ctVersion: 'ctVersion',\n  sophiaCodeTypeInfo: 'sophiaCodeTypeInfo',\n  payload: 'payload'\n}\n\n// FEE CALCULATION\nexport const BASE_GAS = 15000\nexport const GAS_PER_BYTE = 20\nexport const DEFAULT_FEE = 20000\nexport const KEY_BLOCK_INTERVAL = 3\n\n// MAP WITH FEE CALCULATION https://github.com/aeternity/protocol/blob/master/consensus/consensus.md#gas\nexport const TX_FEE_BASE_GAS = (txType) => {\n  switch (txType) {\n    // case TX_TYPE.gaMeta: // TODO investigate MetaTx calculation\n    case TX_TYPE.gaAttach:\n    case TX_TYPE.contractCreate:\n      return BigNumber(5 * BASE_GAS)\n    // Todo Implement meta tx fee calculation\n    case TX_TYPE.gaMeta:\n    case TX_TYPE.contractCall:\n      return BigNumber(30 * BASE_GAS)\n    default:\n      return BigNumber(BASE_GAS)\n  }\n}\n\nexport const TX_FEE_OTHER_GAS = (txType) => ({ txSize, relativeTtl }) => {\n  switch (txType) {\n    case TX_TYPE.oracleRegister:\n    case TX_TYPE.oracleExtend:\n    case TX_TYPE.oracleQuery:\n    case TX_TYPE.oracleResponse:\n      return BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil(32000 * relativeTtl / Math.floor(60 * 24 * 365 / KEY_BLOCK_INTERVAL))\n        )\n    default:\n      return BigNumber(txSize).times(GAS_PER_BYTE)\n  }\n}\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\nexport const PREFIX_ID_TAG = {\n  'ak': ID_TAG.account,\n  'nm': ID_TAG.name,\n  'cm': ID_TAG.commitment,\n  'ok': ID_TAG.oracle,\n  'ct': ID_TAG.contract,\n  'ch': ID_TAG.channel\n}\nexport const ID_TAG_PREFIX = revertObject(PREFIX_ID_TAG)\nconst VALIDATION_ERROR = (msg) => msg\n\nexport const VALIDATION_MESSAGE = {\n  [FIELD_TYPES.int]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.id]: ({ value, prefix }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}' or ID_TAG for prefix not found`),\n  [FIELD_TYPES.binary]: ({ prefix, value }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}'`),\n  [FIELD_TYPES.string]: ({ value }) => VALIDATION_ERROR(`Not a string`),\n  [FIELD_TYPES.pointers]: ({ value }) => VALIDATION_ERROR(`Value must be of type Array and contains only object's like '{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}'`),\n  [FIELD_TYPES.ctVersion]: ({ value }) => VALIDATION_ERROR(`Value must be an object with \"vmVersion\" and \"abiVersion\" fields`)\n}\n\nconst BASE_TX = [\n  TX_FIELD('tag', FIELD_TYPES.int),\n  TX_FIELD('VSN', FIELD_TYPES.int)\n]\n\nconst ACCOUNT_TX = [\n  ...BASE_TX,\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int)\n]\n\nexport const CONTRACT_BYTE_CODE_MINERVA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string)\n]\n\nexport const CONTRACT_BYTE_CODE_ROMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary)\n]\n\nconst ACCOUNT_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('flags', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int),\n  TX_FIELD('gaContract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gaAuthFun', FIELD_TYPES.binary, 'cb')\n]\n\nconst SPEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('payload', FIELD_TYPES.payload)\n]\n\nconst SIGNED_TX = [\n  ...BASE_TX,\n  TX_FIELD('signatures', FIELD_TYPES.signatures),\n  TX_FIELD('encodedTx', FIELD_TYPES.rlpBinary)\n]\n\nconst NAME_PRE_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('commitmentId', FIELD_TYPES.id, 'cm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_UPDATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('nameTtl', FIELD_TYPES.int),\n  TX_FIELD('pointers', FIELD_TYPES.pointers),\n  TX_FIELD('clientTtl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_REVOKE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('log', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('active', FIELD_TYPES.bool),\n  TX_FIELD('referers', FIELD_TYPES.ids, 'ak'),\n  TX_FIELD('deposit', FIELD_TYPES.int)\n]\n\nconst GA_ATTACH_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('authFun', FIELD_TYPES.rawBinary),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst GA_META_TX = [\n  ...BASE_TX,\n  TX_FIELD('gaId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('authData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('tx', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_RESULT_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('callerNonce', FIELD_TYPES.int),\n  TX_FIELD('height', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasUsed', FIELD_TYPES.int),\n  TX_FIELD('returnValue', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('returnType', FIELD_TYPES.callReturnType),\n  // TODO: add serialization for <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n  TX_FIELD('log', FIELD_TYPES.rawBinary)\n]\n\nconst ORACLE_REGISTER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryFormat', FIELD_TYPES.string),\n  TX_FIELD('responseFormat', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('abiVersion', FIELD_TYPES.int)\n]\n\nconst ORACLE_EXTEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst ORACLE_QUERY_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('query', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('queryTtlType', FIELD_TYPES.int),\n  TX_FIELD('queryTtlValue', FIELD_TYPES.int),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\nconst ORACLE_RESPOND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryId', FIELD_TYPES.binary, 'oq'),\n  TX_FIELD('response', FIELD_TYPES.string),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.string),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_WITHDRAW_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('toId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_MUTUAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SLASH_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SETTLE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('updates', FIELD_TYPES.offChainUpdates),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_OFFCHAIN_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int)\n]\n\nconst CHANNEL_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int),\n  TX_FIELD('initiatorAuth', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('responderAuth', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_SNAPSHOT_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('caller', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('contract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('callStack', FIELD_TYPES.callStack),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasLimit', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('to', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst PROOF_OF_INCLUSION_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.mptrees),\n  TX_FIELD('calls', FIELD_TYPES.mptrees),\n  TX_FIELD('channels', FIELD_TYPES.mptrees),\n  TX_FIELD('contracts', FIELD_TYPES.mptrees),\n  TX_FIELD('ns', FIELD_TYPES.mptrees),\n  TX_FIELD('oracles', FIELD_TYPES.mptrees)\n]\n\nconst STATE_TREES_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary),\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary),\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary),\n  TX_FIELD('ns', FIELD_TYPES.rlpBinary),\n  TX_FIELD('oracles', FIELD_TYPES.rlpBinary),\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nconst MERKLE_PATRICIA_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('values', FIELD_TYPES.rlpBinaries)\n]\n\nconst MERKLE_PATRICIA_TREE_VALUE_TX = [\n  ...BASE_TX,\n  TX_FIELD('key', FIELD_TYPES.hex),\n  TX_FIELD('value', FIELD_TYPES.rawBinary)\n]\n\nconst CONTRACTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CALLS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary)\n]\n\nconst CHANNELS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary)\n]\n\nconst NAMESERVICE_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('mtree', FIELD_TYPES.rlpBinary)\n]\n\nconst ORACLES_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('otree', FIELD_TYPES.rlpBinary)\n]\n\nconst ACCOUNTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nexport const TX_SERIALIZATION_SCHEMA = {\n  [TX_TYPE.account]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [TX_TYPE.signed]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [TX_TYPE.spend]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [TX_TYPE.namePreClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameUpdate]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [TX_TYPE.nameTransfer]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [TX_TYPE.nameRevoke]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [TX_TYPE.contract]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [TX_TYPE.contractCreate]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [TX_TYPE.contractCall]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [TX_TYPE.contractCallResult]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [TX_TYPE.oracleRegister]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [TX_TYPE.oracleExtend]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [TX_TYPE.oracleQuery]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [TX_TYPE.oracleResponse]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [TX_TYPE.channelCreate]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [TX_TYPE.channelCloseMutual]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [TX_TYPE.channelCloseSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [TX_TYPE.channelSlash]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [TX_TYPE.channelDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelWithdraw]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [TX_TYPE.channelSettle]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [TX_TYPE.channelOffChain]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [TX_TYPE.channel]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [TX_TYPE.channelSnapshotSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateTransfer]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateWithdrawal]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [TX_TYPE.channelOffChainCreateContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [TX_TYPE.channelOffChainCallContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [TX_TYPE.proofOfInclusion]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [TX_TYPE.stateTrees]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [TX_TYPE.merklePatriciaTree]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [TX_TYPE.merklePatriciaTreeValue]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [TX_TYPE.contractsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [TX_TYPE.contractCallsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [TX_TYPE.channelsTree]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [TX_TYPE.nameserviceTree]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [TX_TYPE.oraclesTree]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [TX_TYPE.accountsTree]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [TX_TYPE.gaAttach]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [TX_TYPE.gaMeta]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  }\n}\n\nexport const TX_DESERIALIZATION_SCHEMA = {\n  [OBJECT_TAG_ACCOUNT]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [OBJECT_TAG_SIGNED_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [OBJECT_TAG_SPEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [OBJECT_TAG_CHANNEL]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [OBJECT_TAG_STATE_TREES]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [OBJECT_TAG_CONTRACTS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [OBJECT_TAG_CHANNELS_TREE]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [OBJECT_TAG_NAMESERVICE_TREE]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [OBJECT_TAG_ORACLES_TREE]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [OBJECT_TAG_ACCOUNTS_TREE]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [OBJECT_TAG_GA_ATTACH]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [OBJECT_TAG_GA_META]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  },\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_ROMA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    2: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_MINERVA, OBJECT_TAG_SOPHIA_BYTE_CODE)\n  }\n}\n\n// VERIFICATION SCHEMA\n\nconst ERROR_TYPE = { ERROR: 'error', WARNING: 'warning' }\nconst VERIFICATION_FIELD = (msg, verificationFn, error) => [msg, verificationFn, error]\n\nconst VALIDATORS = {\n  signature: 'signature',\n  insufficientFee: 'insufficientFee',\n  expiredTTL: 'expiredTTL',\n  insufficientBalanceForAmountFee: 'insufficientBalanceForAmountFee',\n  insufficientBalanceForAmount: 'insufficientBalanceForAmount',\n  nonceUsed: 'nonceUsed',\n  nonceHigh: 'nonceHigh',\n  minGasPrice: 'minGasPrice',\n  vmAndAbiVersion: 'vmAndAbiVersion'\n}\n\nconst ERRORS = {\n  invalidSignature: { key: 'InvalidSignature', type: ERROR_TYPE.ERROR, txKey: 'signature' },\n  insufficientFee: { key: 'InsufficientFee', type: ERROR_TYPE.ERROR, txKey: 'fee' },\n  expiredTTL: { key: 'ExpiredTTL', type: ERROR_TYPE.ERROR, txKey: 'ttl' },\n  insufficientBalanceForAmountFee: { key: 'InsufficientBalanceForAmountFee', type: ERROR_TYPE.WARNING, txKey: 'fee' },\n  insufficientBalanceForAmount: { key: 'InsufficientBalanceForAmount', type: ERROR_TYPE.WARNING, txKey: 'amount' },\n  nonceUsed: { key: 'NonceUsed', type: ERROR_TYPE.ERROR, txKey: 'nonce' },\n  nonceHigh: { key: 'NonceHigh', type: ERROR_TYPE.WARNING, txKey: 'nonce' },\n  minGasPrice: { key: 'minGasPrice', type: ERROR_TYPE.ERROR, txKey: 'gasPrice' },\n  vmAndAbiVersion: { key: 'vmAndAbiVersion', type: ERROR_TYPE.ERROR, txKey: 'ctVersion' }\n}\n\nexport const SIGNATURE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    () => `The signature cannot be verified, please verify that you used the correct network id and the correct private key for the sender address`,\n    VALIDATORS.signature,\n    ERRORS.invalidSignature\n  )\n]\nexport const CONTRACT_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ ctVersion, consensusProtocolVersion, txType }) => `Wrong abi/vm version, Supported is: ${PROTOCOL_VM_ABI[consensusProtocolVersion] ? JSON.stringify(PROTOCOL_VM_ABI[consensusProtocolVersion][txType]) : ' None for this protocol ' + consensusProtocolVersion}`,\n    VALIDATORS.vmAndAbiVersion,\n    ERRORS.vmAndAbiVersion\n  ),\n  VERIFICATION_FIELD(\n    () => `The gasPrice must be bigger then ${MIN_GAS_PRICE}`,\n    VALIDATORS.minGasPrice,\n    ERRORS.minGasPrice\n  )\n]\nexport const BASE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ minFee }) => `The fee for the transaction is too low, the minimum fee for this transaction is ${minFee}`,\n    VALIDATORS.insufficientFee,\n    ERRORS.insufficientFee\n  ),\n  VERIFICATION_FIELD(\n    ({ height }) => `The TTL is already expired, the current height is ${height}`,\n    VALIDATORS.expiredTTL,\n    ERRORS.expiredTTL\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmountFee,\n    ERRORS.insufficientBalanceForAmountFee\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmount,\n    ERRORS.insufficientBalanceForAmount\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is invalid(already used). Next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceUsed,\n    ERRORS.nonceUsed\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is technically valid but will not be processed immediately by the node (next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceHigh,\n    ERRORS.nonceHigh\n  )\n]\n","import {\n  assertedType,\n  decodeBase58Check,\n  decodeBase64Check,\n  encodeBase58Check, encodeBase64Check,\n  hash,\n  nameId,\n  salt\n} from '../../utils/crypto'\nimport { toBytes } from '../../utils/bytes'\nimport { ID_TAG_PREFIX, PREFIX_ID_TAG } from './schema'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * JavaScript-based Transaction builder helper function's\n * @module @aeternity/aepp-sdk/es/tx/builder/helpers\n * @export TxBuilderHelper\n * @example import TxBuilderHelper from '@aeternity/aepp-sdk/es/tx/builder/helpers'\n */\n\nexport const createSalt = salt\n\nconst base64Types = ['tx', 'st', 'ss', 'pi', 'ov', 'or', 'cb', 'cs', 'ba']\n\n/**\n * Build a contract public key\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} ownerId The public key of the owner account\n * @param {number} nonce the nonce of the transaction\n * @return {string} Contract public key\n */\nexport function buildContractId (ownerId, nonce) {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId, 'ak'), ...toBytes(nonce)])\n  const b2bHash = hash(ownerIdAndNonce)\n  return encode(b2bHash, 'ct')\n}\n\n/**\n * Build hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} prefix Transaction hash prefix\n * @param {Buffer} data Rlp encoded transaction buffer\n * @return {String} Transaction hash\n */\nexport function buildHash (prefix, data) {\n  return encode(hash(data), prefix)\n}\n\n/**\n * Build a oracle query id\n * @function\n * @function* @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} senderId The public key of the sender account\n * @param {Number} nonce the nonce of the transaction\n * @param {Number} oracleId The oracle public key\n * @return {string} Contract public key\n */\nexport function oracleQueryId (senderId, nonce, oracleId) {\n  function _int32 (val) {\n    const nonceBE = toBytes(val, true)\n    return Buffer.concat([Buffer.alloc(32 - nonceBE.length), nonceBE])\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId, 'ak'), ..._int32(nonce), ...decode(oracleId, 'ok')]))\n  return encode(b2bHash, 'oq')\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {number} salt\n * @return {string} Zero-padded hex string of salt\n */\nexport function formatSalt (salt) {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex')\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n *\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @function commitmentHash\n * @category async\n * @rtype (name: String, salt?: String) => hash: Promise[String]\n * @param {String} name - Name to be registered\n * @param {Number} salt Random salt\n * @return {String} Commitment hash\n */\nexport async function commitmentHash (name, salt = createSalt()) {\n  return `cm_${encodeBase58Check(hash(Buffer.concat([nameId(name), formatSalt(salt)])))}`\n}\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} data  An encoded and prefixed string (ex tx_..., sg_..., ak_....)\n * @param {string} type Prefix of Transaction\n * @return {Buffer} Buffer of decoded Base58check or Base64check data\n */\nexport function decode (data, type) {\n  if (!type) type = data.split('_')[0]\n  return base64Types.includes(type)\n    ? decodeBase64Check(assertedType(data, type))\n    : decodeBase58Check(assertedType(data, type))\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer|String} data  An decoded data\n * @param {string} type Prefix of Transaction\n * @return {String} Encoded string Base58check or Base64check data\n */\nexport function encode (data, type) {\n  return `${type}_${base64Types.includes(type)\n    ? encodeBase64Check(data)\n    : encodeBase58Check(data)}`\n}\n\n/**\n * Utility function to create and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} hashId Encoded hash\n * @return {Buffer} Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId (hashId) {\n  const prefix = hashId.slice(0, 2)\n  const idTag = PREFIX_ID_TAG[prefix]\n  if (!idTag) throw new Error(`Id tag for prefix ${prefix} not found.`)\n  return Buffer.from([...toBytes(idTag), ...decode(hashId, prefix)])\n}\n\n/**\n * Utility function to read and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Data\n * @return {String} Encoided hash string with prefix\n */\nexport function readId (buf) {\n  const tag = buf.readUIntBE(0, 1)\n  const prefix = ID_TAG_PREFIX[tag]\n  if (!prefix) throw new Error(`Prefix for id-tag ${tag} not found.`)\n  return encode(buf.slice(1, buf.length), prefix)\n}\n\n/**\n * Utility function to convert int to bytes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Number|String|BigNumber} val Value\n * @return {Buffer} Buffer Buffer from number(BigEndian)\n */\nexport function writeInt (val) {\n  return toBytes(val, true)\n}\n\n/**\n * Utility function to convert bytes to int\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Value\n * @return {String} Buffer Buffer from number(BigEndian)\n */\nexport function readInt (buf = Buffer.from([])) {\n  return BigNumber(buf.toString('hex'), 16).toString(10)\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Serialized pointers array\n */\nexport function buildPointers (pointers) {\n  return pointers.map(\n    p => [\n      toBytes(p['key']),\n      writeId(p['id'])\n    ]\n  )\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Deserialize pointer array\n */\nexport function readPointers (pointers) {\n  return pointers.map(\n    ([key, id]) => Object.assign({\n      key: key.toString(),\n      id: readId(id)\n    })\n  )\n}\n\nexport default {\n  readPointers,\n  buildPointers,\n  buildContractId,\n  readId,\n  writeId,\n  readInt,\n  writeInt,\n  encode,\n  decode,\n  commitmentHash,\n  formatSalt,\n  oracleQueryId,\n  createSalt,\n  buildHash\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Crypto module\n * @module @aeternity/aepp-sdk/es/utils/crypto\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/crypto'\n */\n\nimport bs58check from 'bs58check'\nimport * as RLP from 'rlp'\nimport { blake2b } from 'blakejs'\nimport nacl from 'tweetnacl'\nimport aesjs from 'aes-js'\nimport { leftPad, rightPad, toBytes } from './bytes'\nimport shajs from 'sha.js'\nimport { decode as decodeNode } from '../tx/builder/helpers'\n\nconst Ecb = aesjs.ModeOfOperation.ecb\n\n/**\n * Check whether a string is valid base-64.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid base-64, false otherwise.\n */\nexport function isBase64 (str) {\n  let index\n  // eslint-disable-next-line no-useless-escape\n  if (str.length % 4 > 0 || str.match(/[^0-9a-z+\\/=]/i)) return false\n  index = str.indexOf('=')\n  return !!(index === -1 || str.slice(index).match(/={1,2}/))\n}\n\nexport const ADDRESS_FORMAT = {\n  sophia: 1,\n  api: 2,\n  raw: 3\n}\n\n/**\n * Format account address\n * @rtype (format: String, address: String) => tx: Promise[String]\n * @param {String} format - Format type\n * @param {String} address - Base58check account address\n * @return {String} Formatted address\n */\nexport function formatAddress (format = ADDRESS_FORMAT.api, address) {\n  switch (format) {\n    case ADDRESS_FORMAT.api:\n      return address\n    case ADDRESS_FORMAT.sophia:\n      return `0x${decodeNode(address, 'ak').toString('hex')}`\n  }\n}\n\n/**\n * Check if address is valid\n * @rtype (input: String) => valid: Boolean\n * @param {String} address - Address\n * @return {Boolean} valid\n */\nexport function isAddressValid (address) {\n  let isValid\n  try {\n    isValid = decodeBase58Check(assertedType(address, 'ak')).length === 32\n  } catch (e) {\n    isValid = false\n  }\n  return isValid\n}\n\n/**\n * Convert base58Check address to hex string\n * @rtype (base58CheckAddress: String) => hexAddress: String\n * @param {String} base58CheckAddress - Address\n * @return {String} Hex string\n */\nexport function addressToHex (base58CheckAddress) {\n  return `0x${decodeBase58Check(assertedType(base58CheckAddress, 'ak')).toString('hex')}`\n}\n\n/**\n * Parse decimal address and return base58Check encoded address with prefix 'ak'\n * @rtype (input: String) => address: String\n * @param {String} decimalAddress - Address\n * @return {String} address\n */\nexport function addressFromDecimal (decimalAddress) {\n  return aeEncodeKey(toBytes(decimalAddress, true))\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String|Buffer} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function hash (input) {\n  return Buffer.from(blake2b(input, null, 32)) // 256 bits\n}\n\n/**\n * Calculate 256bits Blake2b nameId of `input`\n * as defined in https://github.com/aeternity/protocol/blob/master/AENS.md#hashing\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function nameId (input) {\n  let buf = Buffer.allocUnsafe(32).fill(0)\n  if (!input) {\n    return buf\n  } else {\n    const labels = input.split('.')\n    for (let i = 0; i < labels.length; i++) {\n      buf = hash(Buffer.concat([buf, hash(labels[i])]))\n    }\n    return buf\n  }\n}\n\n/**\n * Calculate SHA256 hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {String} Hash\n */\nexport function sha256hash (input) {\n  return shajs('sha256').update(input).digest()\n}\n\n/**\n * Generate a random salt (positive integer)\n * @rtype () => salt: Number\n * @return {Number} random salt\n */\nexport function salt () {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER))\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String} input - Data to encode\n * @return {Buffer} Base64check encoded data\n */\nexport function encodeBase64Check (input) {\n  const buffer = Buffer.from(input)\n  const checksum = checkSumFn(input)\n  const payloadWithChecksum = Buffer.concat([buffer, checksum], buffer.length + 4)\n  return payloadWithChecksum.toString('base64')\n}\n\nexport function checkSumFn (payload) {\n  return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nfunction decodeRaw (buffer) {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = checkSumFn(payload)\n\n  if (!checksum.equals(newChecksum)) return\n\n  return payload\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nexport function decodeBase64Check (str) {\n  const buffer = Buffer.from(str, 'base64')\n  const payload = decodeRaw(buffer)\n  if (!payload) throw new Error('Invalid checksum')\n  return Buffer.from(payload)\n}\n\n/**\n * Base58 encode given `input`\n * @rtype (input: String) => String\n * @param {String} input - Data to encode\n * @return {String} Base58 encoded data\n */\nexport function encodeBase58Check (input) {\n  return bs58check.encode(Buffer.from(input))\n}\n\n/**\n * Base58 decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58 decoded data\n */\nexport function decodeBase58Check (str) {\n  return bs58check.decode(str)\n}\n\n/**\n * Conver hex string to Uint8Array\n * @rtype (str: String) => Uint8Array\n * @param {String} str - Data to conver\n * @return {Uint8Array} - converted data\n */\nexport function hexStringToByte (str) {\n  if (!str) {\n    return new Uint8Array()\n  }\n\n  var a = []\n  for (var i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16))\n  }\n\n  return new Uint8Array(a)\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @rtype (value: Number) => Buffer\n * @param {Number} value - Value to encode\n * @return {Buffer} - Encoded data\n */\nexport function encodeUnsigned (value) {\n  const binary = Buffer.allocUnsafe(4)\n  binary.writeUInt32BE(value)\n  return binary.slice(binary.findIndex(i => i !== 0))\n}\n\n/**\n * Compute contract address\n * @rtype (owner: String, nonce: Number) => String\n * @param {String} owner - Address of contract owner\n * @param {Number} nonce - Round when contract was created\n * @return {String} - Contract address\n */\nexport function encodeContractAddress (owner, nonce) {\n  const publicKey = decodeBase58Check(assertedType(owner, 'ak'))\n  const binary = Buffer.concat([publicKey, encodeUnsigned(nonce)])\n  return `ct_${encodeBase58Check(hash(binary))}`\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @rtype (secret: Uint8Array) => KeyPair\n * @param {Uint8Array} secret - secret key\n * @return {Object} - Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret (secret) {\n  return nacl.sign.keyPair.fromSecretKey(secret)\n}\n\n/**\n * Generate a random ED25519 keypair\n * @rtype (raw: Boolean) => {publicKey: String, secretKey: String} | {publicKey: Buffer, secretKey: Buffer}\n * @param {Boolean} raw - Whether to return raw (binary) keys\n * @return {Object} Key pair\n */\nexport function generateKeyPair (raw = false) {\n  // <node>/apps/aens/test/aens_test_utils.erl\n  const keyPair = nacl.sign.keyPair()\n\n  const publicBuffer = Buffer.from(keyPair.publicKey)\n  const secretBuffer = Buffer.from(keyPair.secretKey)\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer\n    }\n  } else {\n    return {\n      publicKey: `ak_${encodeBase58Check(publicBuffer)}`,\n      secretKey: secretBuffer.toString('hex')\n    }\n  }\n}\n\n/**\n * Encrypt given public key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPublicKey (password, binaryKey) {\n  return encryptKey(password, rightPad(32, binaryKey))\n}\n\n/**\n * Encrypt given private key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPrivateKey (password, binaryKey) {\n  return encryptKey(password, leftPad(64, binaryKey))\n}\n\n/**\n * Encrypt given data using `password`\n * @rtype (password: String, binaryData: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryData - Data to encrypt\n * @return {Uint8Array} Encrypted data\n */\nexport function encryptKey (password, binaryData) {\n  let hashedPasswordBytes = sha256hash(password)\n  let aesEcb = new Ecb(hashedPasswordBytes)\n  return aesEcb.encrypt(binaryData)\n}\n\n/**\n * Decrypt given data using `password`\n * @rtype (password: String, encrypted: String) => Uint8Array\n * @param {String} password - Password to decrypt with\n * @param {String} encrypted - Data to decrypt\n * @return {Buffer} Decrypted data\n */\nexport function decryptKey (password, encrypted) {\n  const encryptedBytes = Buffer.from(encrypted)\n  let hashedPasswordBytes = sha256hash(password)\n  let aesEcb = new Ecb(hashedPasswordBytes)\n  return Buffer.from(aesEcb.decrypt(encryptedBytes))\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @rtype (data: String|Buffer, privateKey: Buffer) => Buffer\n * @param {String|Buffer} data - Data to sign\n * @param {String|Buffer} privateKey - Key to sign with\n * @return {Buffer} Signature\n */\nexport function sign (data, privateKey) {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey))\n}\n\n/**\n * Verify that signature was signed by public key\n * @rtype (str: String, signature: Buffer, publicKey: Buffer) => Boolean\n * @param {String} str - Data to verify\n * @param {Buffer} signature - Signature to verify\n * @param {Buffer} publicKey - Key to verify against\n * @return {Boolean} Valid?\n */\nexport function verify (str, signature, publicKey) {\n  return nacl.sign.detached.verify(new Uint8Array(str), signature, publicKey)\n}\n\n/**\n * @typedef {Array} Transaction\n * @rtype Transaction: [tag: Buffer, version: Buffer, [signature: Buffer], data: Buffer]\n */\n\n/**\n * Prepare a transaction for posting to the blockchain\n * @rtype (signature: Buffer | String, data: Buffer) => Transaction\n * @param {Buffer} signature - Signature of `data`\n * @param {Buffer} data - Transaction data\n * @return {Transaction} Transaction\n */\nexport function prepareTx (signature, data) {\n  // the signed tx deserializer expects a 4-tuple:\n  // <tag, version, signatures_array, binary_tx>\n  return [Buffer.from([11]), Buffer.from([1]), [Buffer.from(signature)], data]\n}\n\nexport function personalMessageToBinary (message) {\n  const p = Buffer.from('æternity Signed Message:\\n', 'utf8')\n  const msg = Buffer.from(message, 'utf8')\n  if (msg.length >= 0xFD) throw new Error('message too long')\n  return Buffer.concat([Buffer.from([p.length]), p, Buffer.from([msg.length]), msg])\n}\n\nexport function signPersonalMessage (message, privateKey) {\n  return sign(personalMessageToBinary(message), privateKey)\n}\n\nexport function verifyPersonalMessage (str, signature, publicKey) {\n  return verify(personalMessageToBinary(str), signature, publicKey)\n}\n\n/**\n * æternity readable public keys are the base58-encoded public key, prepended\n * with 'ak_'\n * @rtype (binaryKey: Buffer) => String\n * @param {Buffer} binaryKey - Key to encode\n * @return {String} Encoded key\n */\nexport function aeEncodeKey (binaryKey) {\n  const publicKeyBuffer = Buffer.from(binaryKey, 'hex')\n  const pubKeyAddress = encodeBase58Check(publicKeyBuffer)\n  return `ak_${pubKeyAddress}`\n}\n\n/**\n * Generate a new key pair using {@link generateKeyPair} and encrypt it using `password`\n * @rtype (password: String) => {publicKey: Uint8Array, secretKey: Uint8Array}\n * @param {String} password - Password to encrypt with\n * @return {Object} Encrypted key pair\n */\nexport function generateSaveWallet (password) {\n  let keys = generateKeyPair(true)\n  return {\n    publicKey: encryptPublicKey(password, keys.publicKey),\n    secretKey: encryptPrivateKey(password, keys.secretKey)\n  }\n}\n\n/**\n * Decrypt an encrypted private key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPrivateKey (password, encrypted) {\n  return decryptKey(password, encrypted)\n}\n\n/**\n * Decrypt an encrypted public key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPubKey (password, encrypted) {\n  return decryptKey(password, encrypted).slice(0, 65)\n}\n\n/**\n * Assert base58 encoded type and return its payload\n * @rtype (data: String, type: String) => String, throws: Error\n * @param {String} data - ae data\n * @param {String} type - Prefix\n * @param forceError\n * @return {String|Boolean} Payload\n */\nexport function assertedType (data, type, forceError = false) {\n  if (RegExp(`^${type}_.+$`).test(data)) {\n    return data.split('_')[1]\n  } else {\n    if (!forceError) throw Error(`Data doesn't match expected type ${type}`)\n    return false\n  }\n}\n\n/**\n * Decode a transaction\n * @rtype (txHash: String) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Array} Decoded transaction\n */\nexport function decodeTx (txHash) {\n  return RLP.decode(Buffer.from(decodeBase64Check(assertedType(txHash, 'tx'))))\n}\n\n/**\n * Encode a transaction\n * @rtype (txData: Transaction) => String\n * @param {Transaction} txData - Transaction to encode\n * @return {String} Encoded transaction\n */\nexport function encodeTx (txData) {\n  const encodedTxData = RLP.encode(txData)\n  const encodedTx = encodeBase64Check(encodedTxData)\n  return `tx_${encodedTx}`\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @rtype (privateKey: Buffer, publicKey: Buffer) => Boolean\n * @param {Buffer} privateKey - Private key to verify\n * @param {Buffer} publicKey - Public key to verify\n * @return {Boolean} Valid?\n */\nexport function isValidKeypair (privateKey, publicKey) {\n  const message = Buffer.from('TheMessage')\n  const signature = sign(message, privateKey)\n  return verify(message, signature, publicKey)\n}\n\n/**\n * Obtain key pair from `env`\n *\n * Designed to be used with `env` from nodejs. Assumes enviroment variables\n * `WALLET_PRIV` and `WALLET_PUB`.\n * @rtype (env: Object) => {publicKey: String, secretKey: String}, throws: Error\n * @param {Object} env - Environment\n * @return {Object} Key pair\n */\nexport function envKeypair (env, force = false) {\n  const keypair = {\n    secretKey: env['WALLET_PRIV'],\n    publicKey: env['WALLET_PUB']\n  }\n\n  if (keypair.publicKey && keypair.secretKey) {\n    return keypair\n  } else {\n    if (!force) throw Error('Environment variables WALLET_PRIV and WALLET_PUB need to be set')\n  }\n}\n\n/**\n * RLP decode\n * @rtype (data: Any) => Buffer[]\n * @param {Buffer|String|Integer|Array} data - Data to decode\n * @return {Array} Array of Buffers containing the original message\n */\nexport const decode = RLP.decode\nexport const encode = RLP.encode\nexport const rlp = RLP\n\nconst OBJECT_TAGS = {\n  SIGNED_TX: 11,\n  CHANNEL_CREATE_TX: 50,\n  CHANNEL_CLOSE_MUTUAL_TX: 53,\n  CHANNEL_OFFCHAIN_TX: 57,\n  CHANNEL_OFFCHAIN_UPDATE_TRANSFER: 570\n}\n\nfunction objectTag (tag, pretty) {\n  if (pretty) {\n    const entry = Object.entries(OBJECT_TAGS).find(([key, value]) => tag === value)\n    return entry ? entry[0] : tag\n  }\n  return tag\n}\n\nfunction readInt (buf) {\n  return buf.readIntBE(0, buf.length)\n}\n\nfunction readId (buf) {\n  const type = buf.readUIntBE(0, 1)\n  const prefix = {\n    1: 'ak',\n    2: 'nm',\n    3: 'cm',\n    4: 'ok',\n    5: 'ct',\n    6: 'ch'\n  }[type]\n  const hash = encodeBase58Check(buf.slice(1, buf.length))\n  return `${prefix}_${hash}`\n}\n\nfunction readSignatures (buf) {\n  const signatures = []\n\n  for (let i = 0; i < buf.length; i++) {\n    signatures.push(encodeBase58Check(buf[i]))\n  }\n\n  return signatures\n}\n\nfunction deserializeOffChainUpdate (binary, opts) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_UPDATE_TRANSFER:\n      return Object.assign(obj, {\n        from: readId(binary[2]),\n        to: readId(binary[3]),\n        amount: readInt(binary[4])\n      })\n  }\n\n  return obj\n}\n\nfunction readOffChainTXUpdates (buf, opts) {\n  const updates = []\n\n  for (let i = 0; i < buf.length; i++) {\n    updates.push(deserializeOffChainUpdate(decode(buf[i]), opts))\n  }\n\n  return updates\n}\n\n/**\n * Deserialize `binary` state channel transaction\n * @rtype (binary: String) => Object\n * @param {String} binary - Data to deserialize\n * @param {Object} opts - Options\n * @return {Object} Channel data\n */\nexport function deserialize (binary, opts = { prettyTags: false }) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.SIGNED_TX:\n      return Object.assign(obj, {\n        signatures: readSignatures(binary[2]),\n        tx: deserialize(decode(binary[3]), opts)\n      })\n\n    case OBJECT_TAGS.CHANNEL_CREATE_TX:\n      return Object.assign(obj, {\n        initiator: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responder: readId(binary[4]),\n        responderAmount: readInt(binary[5]),\n        channelReserve: readInt(binary[6]),\n        lockPeriod: readInt(binary[7]),\n        ttl: readInt(binary[8]),\n        fee: readInt(binary[9])\n      })\n\n    case OBJECT_TAGS.CHANNEL_CLOSE_MUTUAL_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responderAmount: readInt(binary[4]),\n        ttl: readInt(binary[5]),\n        fee: readInt(binary[6]),\n        nonce: readInt(binary[7])\n      })\n\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        round: readInt(binary[3]),\n        updates: readOffChainTXUpdates(binary[4], opts),\n        state: encodeBase58Check(binary[5])\n      })\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { rlp, hash } from './crypto'\n\nconst NODE_TYPES = {\n  branch: 1,\n  extension: 2,\n  leaf: 3\n}\n\nfunction nodeType (node) {\n  if (node.length === 17) {\n    return NODE_TYPES.branch\n  }\n  if (node.length === 2) {\n    const nibble = node[0].toString('hex')[0]\n    if (nibble === '0' || nibble === '1') {\n      return NODE_TYPES.extension\n    }\n    if (nibble === '2' || nibble === '3') {\n      return NODE_TYPES.leaf\n    }\n  }\n}\n\nfunction decodePath (path) {\n  if (path[0] === '0' || path[0] === '2') {\n    return path.slice(2)\n  }\n  if (path[0] === '1' || path[0] === '3') {\n    return path.slice(1)\n  }\n}\n\n/**\n * Deserialize Merkle Patricia Tree\n * @rtype (binary: Array) => Object\n * @param {Array} binary - Binary\n * @return {Object} Merkle Patricia Tree\n */\nexport function deserialize (binary) {\n  return {\n    rootHash: binary[0].toString('hex'),\n    nodes: binary[1].reduce((prev, node) => ({\n      ...prev,\n      [node[0].toString('hex')]: node[1]\n    }), {})\n  }\n}\n\n/**\n * Serialize Merkle Patricia Tree\n * @rtype (tree: Object) => Array\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Array} Binary\n */\nexport function serialize (tree) {\n  return [\n    Buffer.from(tree.rootHash, 'hex'),\n    Object.entries(tree.nodes).map(([mptHash, value]) => ([\n      Buffer.from(mptHash, 'hex'),\n      value\n    ]))\n  ]\n}\n\n/**\n * Retrieve value from Merkle Patricia Tree\n * @rtype (tree: Object, key: String) => Buffer\n * @param {Object} tree - Merkle Patricia Tree\n * @param {String} key - The key of the element to retrieve\n * @return {Buffer} Value associated to the specified key\n */\nexport function get (tree, key, hash) {\n  const node = hash ? tree.nodes[hash] : tree.nodes[tree.rootHash]\n  const type = nodeType(node)\n  if (type === NODE_TYPES.branch) {\n    if (key.length) {\n      const nextHash = node[parseInt(key[0], 16)].toString('hex')\n      return get(tree, key.substr(1), nextHash)\n    }\n    return node[16]\n  }\n  if (type === NODE_TYPES.extension) {\n    const path = decodePath(node[0].toString('hex'))\n    if (key.substr(0, path.length) === path) {\n      return get(tree, key.substr(path.length), node[1].toString('hex'))\n    }\n  }\n  if (type === NODE_TYPES.leaf) {\n    if (node[0].toString('hex').substr(1) === key) {\n      return node[1]\n    }\n  }\n}\n\nfunction nodeHash (node) {\n  return Buffer.from(hash(rlp.encode(node))).toString('hex')\n}\n\n/**\n * Verify if rootHash of Merkle Patricia Tree is correct\n * @rtype (tree: Object) => Boolean\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Boolean} Boolean indicating whether or not rootHash is correct\n */\nexport function verify (tree, key, verified = []) {\n  const hash = key || tree.rootHash\n  if (verified.includes(hash)) {\n    return true\n  }\n  const node = tree.nodes[hash]\n  const type = nodeType(node)\n  if (nodeHash(node) !== hash) {\n    return false\n  }\n  verified.push(hash)\n  if (type === NODE_TYPES.branch) {\n    return !node.some((n, i) => {\n      const nextKey = n.toString('hex')\n      if (i < 16) {\n        return !verify(tree, nextKey, verified)\n      }\n      return false\n    })\n  }\n  if (type === NODE_TYPES.extension) {\n    return verify(tree, node[1].toString('hex'), verified)\n  }\n  return true\n}\n","/* eslint-disable curly */\nimport { BigNumber } from 'bignumber.js'\nimport { assertedType, rlp } from '../../utils/crypto'\n\nimport {\n  DEFAULT_FEE,\n  FIELD_TYPES,\n  OBJECT_ID_TX_TYPE,\n  PREFIX_ID_TAG,\n  TX_DESERIALIZATION_SCHEMA,\n  TX_FEE_BASE_GAS,\n  TX_FEE_OTHER_GAS,\n  TX_SERIALIZATION_SCHEMA,\n  VALIDATION_MESSAGE,\n  VSN\n} from './schema'\nimport { readInt, readId, readPointers, writeId, writeInt, buildPointers, encode, decode, buildHash } from './helpers'\nimport { toBytes } from '../../utils/bytes'\nimport * as mpt from '../../utils/mptree'\n\n/**\n * JavaScript-based Transaction builder\n * @module @aeternity/aepp-sdk/es/tx/builder\n * @export TxBuilder\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/builder'\n */\n\nconst ORACLE_TTL_TYPES = {\n  delta: 'delta',\n  block: 'block'\n}\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField (value, type, prefix) {\n  if (!value) return ''\n  switch (type) {\n    case FIELD_TYPES.ctVersion:\n      // eslint-disable-next-line no-unused-vars\n      const [vm, _, abi] = value\n      return { vmVersion: readInt(Buffer.from([vm])), abiVersion: readInt(Buffer.from([abi])) }\n    case FIELD_TYPES.int:\n      return readInt(value)\n    case FIELD_TYPES.id:\n      return readId(value)\n    case FIELD_TYPES.ids:\n      return value.map(readId)\n    case FIELD_TYPES.bool:\n      return value[0] === 1\n    case FIELD_TYPES.binary:\n      return encode(value, prefix)\n    case FIELD_TYPES.string:\n      return value.toString()\n    case FIELD_TYPES.payload:\n      return encode(value, 'ba')\n    case FIELD_TYPES.pointers:\n      return readPointers(value)\n    case FIELD_TYPES.rlpBinary:\n      return unpackTx(value, true)\n    case FIELD_TYPES.rlpBinaries:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.rawBinary:\n      return value\n    case FIELD_TYPES.hex:\n      return value.toString('hex')\n    case FIELD_TYPES.offChainUpdates:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)]\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.deserialize)\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0': return 'ok'\n        case '1': return 'error'\n        case '2': return 'revert'\n        default: return value\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value\n        .reduce(\n          (acc, [funHash, fnName, argType, outType]) =>\n            ({ ...acc, [fnName.toString()]: { funHash, argType, outType } }),\n          {}\n        )\n    default:\n      return value\n  }\n}\n\nfunction serializeField (value, type, prefix) {\n  switch (type) {\n    case FIELD_TYPES.int:\n      return writeInt(value)\n    case FIELD_TYPES.id:\n      return writeId(value)\n    case FIELD_TYPES.ids:\n      return value.map(writeId)\n    case FIELD_TYPES.bool:\n      return Buffer.from([value ? 1 : 0])\n    case FIELD_TYPES.binary:\n      return decode(value, prefix)\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex')\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from)\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value, 'ba')\n        : toBytes(value)\n    case FIELD_TYPES.string:\n      return toBytes(value)\n    case FIELD_TYPES.pointers:\n      return buildPointers(value)\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.serialize)\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)])\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0)\n        case 'error': return writeInt(1)\n        case 'revert': return writeInt(2)\n        default: return value\n      }\n    default:\n      return value\n  }\n}\n\nfunction validateField (value, key, type, prefix) {\n  const assert = (valid, params) => valid ? {} : { [key]: VALIDATION_MESSAGE[type](params) }\n  // All fields are required\n  if (value === undefined || value === null) return { [key]: 'Field is required' }\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.int:\n      const isMinusValue = (!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).lt(0)\n      return assert((!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).gte(0), { value, isMinusValue })\n    case FIELD_TYPES.id:\n      return assert(assertedType(value, prefix) && PREFIX_ID_TAG[value.split('_')[0]] && value.split('_')[0] === prefix, { value, prefix })\n    case FIELD_TYPES.binary:\n      return assert(value.split('_')[0] === prefix, { prefix, value })\n    case FIELD_TYPES.string:\n      return assert(true)\n    case FIELD_TYPES.ctVersion:\n      return assert(typeof value === 'object' && value.hasOwnProperty('abiVersion') && value.hasOwnProperty('vmVersion'))\n    case FIELD_TYPES.pointers:\n      return assert(Array.isArray(value) && !value.find(e => e !== Object(e)), { value })\n    default:\n      return {}\n  }\n}\n\nfunction transformParams (params) {\n  return Object\n    .entries(params)\n    .reduce(\n      (acc, [key, value]) => {\n        acc[key] = value\n        if (key === 'oracleTtl') acc = {\n          ...acc,\n          oracleTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          oracleTtlValue: value.value\n        }\n        if (key === 'queryTtl') acc = {\n          ...acc,\n          queryTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          queryTtlValue: value.value\n        }\n        if (key === 'responseTtl') acc = {\n          ...acc,\n          responseTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          responseTtlValue: value.value\n        }\n        return acc\n      },\n      {}\n    )\n}\n\n// INTERFACE\n\nfunction getOracleRelativeTtl (params) {\n  // eslint-disable-next-line no-unused-vars\n  const [_, { value = 500 }] = Object.entries(params).find(([key]) => ['oracleTtl', 'queryTtl', 'responseTtl'].includes(key)) || ['', {}]\n  return value // TODO investigate this\n}\n\n/**\n * Calculate min fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/index\n * @rtype (txType, { gas = 0, params }) => String\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateMinFee('spendTx', { gas, params })\n */\nexport function calculateMinFee (txType, { gas = 0, params }) {\n  const multiplier = BigNumber(1e9) // 10^9 GAS_PRICE\n  if (!params) return BigNumber(DEFAULT_FEE).times(multiplier).toString(10)\n\n  let actualFee = buildFee(txType, { params: { ...params, fee: 0 }, multiplier, gas })\n  let expected = BigNumber(0)\n\n  while (!actualFee.eq(expected)) {\n    actualFee = buildFee(txType, { params: { ...params, fee: actualFee }, multiplier, gas })\n    expected = actualFee\n  }\n  return expected.toString(10)\n}\n\n/**\n * Calculate fee based on tx type and params\n * @param txType\n * @param params\n * @param gas\n * @param multiplier\n * @return {BigNumber}\n */\nfunction buildFee (txType, { params, gas = 0, multiplier }) {\n  const { rlpEncoded: txWithOutFee } = buildTx({ ...params }, txType)\n  const txSize = txWithOutFee.length\n  return TX_FEE_BASE_GAS(txType)\n    .plus(TX_FEE_OTHER_GAS(txType)({ txSize, relativeTtl: getOracleRelativeTtl(params) }))\n    .times(multiplier)\n}\n\n/**\n * Calculate fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @rtype (fee, txType, gas = 0) => String\n * @param {String|Number} fee - fee\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateFee(null, 'spendTx', { gas, params })\n */\nexport function calculateFee (fee = 0, txType, { gas = 0, params, showWarning = true } = {}) {\n  if (!params && showWarning) console.warn(`Can't build transaction fee, we will use DEFAULT_FEE(${DEFAULT_FEE})`)\n\n  const minFee = calculateMinFee(txType, { params, gas })\n  if (fee && BigNumber(minFee).gt(BigNumber(fee)) && showWarning) console.warn(`Transaction fee is lower then min fee! Min fee: ${minFee}`)\n\n  return fee || minFee\n}\n\n/**\n * Validate transaction params\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Array} excludeKeys  Array of keys to exclude for validation\n * @return {Object} Object with validation errors\n */\nexport function validateParams (params, schema, { excludeKeys = [] }) {\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key) && key !== 'payload')\n    .reduce(\n      (acc, [key, type, prefix]) => Object.assign(acc, validateField(params[key], key, type, prefix)),\n      {}\n    )\n}\n\n/**\n * Build binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @throws {Error} Validation error\n * @return {Array} Array with binary fields of transaction\n */\nexport function buildRawTx (params, schema, { excludeKeys = [] } = {}) {\n  // Transform params(reason is for do not break current interface of `tx`)\n  params = transformParams(params)\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys })\n  if (Object.keys(valid).length) {\n    throw new Error('Transaction build error. ' + JSON.stringify(valid))\n  }\n\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key))\n    .map(([key, fieldType, prefix]) => serializeField(params[key], fieldType, prefix))\n}\n\n/**\n * Unpack binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Array} binary Array with binary transaction field's\n * @param {Array} schema Transaction schema\n * @return {Object} Object with transaction field's\n */\nexport function unpackRawTx (binary, schema) {\n  return schema\n    .reduce(\n      (\n        acc,\n        [key, fieldType, prefix],\n        index\n      ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n      {}\n    )\n}\n\n/**\n * Build transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {String} type Transaction type\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.prefix] Prefix of transaction\n * @throws {Error} Validation error\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Base64Check transaction hash with 'tx_' prefix, rlp encoded transaction and binary transaction\n */\nexport function buildTx (params, type, { excludeKeys = [], prefix = 'tx' } = {}) {\n  if (!TX_SERIALIZATION_SCHEMA[type]) {\n    throw new Error('Transaction serialization not implemented for ' + type)\n  }\n  if (!TX_SERIALIZATION_SCHEMA[type][VSN]) {\n    throw new Error('Transaction serialization not implemented for ' + type + ' version ' + VSN)\n  }\n  const [schema, tag] = TX_SERIALIZATION_SCHEMA[type][VSN]\n  const binary = buildRawTx({ ...params, VSN, tag }, schema, { excludeKeys }).filter(e => e !== undefined)\n\n  const rlpEncoded = rlp.encode(binary)\n  const tx = encode(rlpEncoded, prefix)\n\n  return { tx, rlpEncoded, binary, txObject: unpackRawTx(binary, schema) }\n}\n\n/**\n * Unpack transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String|Array} encodedTx String or RLP encoded transaction array (if fromRlpBinary flag is true)\n * @param {Boolean} fromRlpBinary Unpack from RLP encoded transaction (default: false)\n * @param {String} prefix - Prefix of data\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Object with transaction param's, rlp encoded transaction and binary transaction\n */\nexport function unpackTx (encodedTx, fromRlpBinary = false, prefix = 'tx') {\n  const rlpEncoded = fromRlpBinary ? encodedTx : decode(encodedTx, prefix)\n  const binary = rlp.decode(rlpEncoded)\n\n  const objId = readInt(binary[0])\n  if (!TX_DESERIALIZATION_SCHEMA[objId]) {\n    return { message: 'Transaction deserialization not implemented for tag ' + objId }\n  }\n  const vsn = readInt(binary[1])\n  if (!TX_DESERIALIZATION_SCHEMA[objId][vsn]) {\n    return { message: 'Transaction deserialization not implemented for tag ' + objId + ' version ' + vsn }\n  }\n  const [schema] = TX_DESERIALIZATION_SCHEMA[objId][vsn]\n\n  return { txType: OBJECT_ID_TX_TYPE[objId], tx: unpackRawTx(binary, schema), rlpEncoded, binary }\n}\n\n/**\n * Build a transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String | Buffer} rawTx base64 or rlp encoded transaction\n * @return {String} Transaction hash\n */\nexport function buildTxHash (rawTx) {\n  if (typeof rawTx === 'string' && rawTx.indexOf('tx_') !== -1) return buildHash('th', unpackTx(rawTx).rlpEncoded)\n  return buildHash('th', rawTx)\n}\n\nexport default { calculateMinFee, calculateFee, unpackTx, unpackRawTx, buildTx, buildRawTx, validateParams, buildTxHash }\n","import nacl from 'tweetnacl'\nimport { full as hmac } from 'tweetnacl-auth'\nimport { fromString } from 'bip32-path'\nimport { validateMnemonic, mnemonicToSeed, generateMnemonic as genMnemonic } from '@aeternity/bip39'\nimport { decryptKey, encodeBase58Check, encryptKey } from './crypto'\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed')\nconst HARDENED_OFFSET = 0x80000000\n\nconst toHex = (buffer) => Buffer.from(buffer).toString('hex')\n\nexport function derivePathFromKey (path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray()\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new Error(`Segment #${i + 1} is not hardened`)\n    }\n  })\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key)\n}\n\nexport function derivePathFromSeed (path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new Error('Invalid path')\n  }\n  const masterKey = getMasterKeyFromSeed(seed)\n  return derivePathFromKey(path.slice(2), masterKey)\n}\n\nfunction formatAccount (keys) {\n  const { secretKey, publicKey } = keys\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: `ak_${encodeBase58Check(publicKey)}`\n  }\n}\n\nexport function getKeyPair (secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey)\n}\n\nexport function generateMnemonic () {\n  return genMnemonic()\n}\n\nexport function getMasterKeyFromSeed (seed) {\n  const I = hmac(seed, ED25519_CURVE)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function deriveChild ({ secretKey, chainCode }, index) {\n  if (index < HARDENED_OFFSET) {\n    throw new Error(`Child index #${index} is not supported`)\n  }\n  const indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  const data = Buffer.concat([Buffer.alloc(1, 0), secretKey, indexBuffer])\n\n  const I = hmac(data, chainCode)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function generateSaveHDWallet (mnemonic, password) {\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  }\n}\n\nexport function getSaveHDWalletAccounts (saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex'))\n  }\n  return (new Array(accountCount)).fill()\n    .map((_, idx) =>\n      formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)))\n}\n\nexport default {\n  getSaveHDWalletAccounts,\n  generateSaveHDWallet,\n  generateMnemonic,\n  deriveChild,\n  getMasterKeyFromSeed\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Tx module\n * @module @aeternity/aepp-sdk/es/tx\n * @export Tx\n * @example import Tx from '@aeternity/aepp-sdk/es/tx'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Tx Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Tx is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides methods to\n * create aeternity transactions.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Tx instance\n * @example Tx()\n */\nconst Tx = stampit({\n  deepConf: {\n    Ae: {\n      methods: [\n        'spendTx', 'namePreclaimTx', 'nameClaimTx', 'nameTransferTx',\n        'nameUpdateTx', 'nameRevokeTx', 'contractCreateTx', 'contractCallTx',\n        'oracleRegisterTx', 'oracleExtendTx', 'oraclePostQueryTx', 'oracleRespondTx', 'getAccountNonce',\n        'channelCloseSoloTx', 'channelSlashTx', 'channelSettleTx', 'channelSnapshotSoloTx', 'gaAttachTx', 'getVmVersion', 'prepareTxParams'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    spendTx: required,\n    namePreclaimTx: required,\n    nameClaimTx: required,\n    nameTransferTx: required,\n    nameUpdateTx: required,\n    nameRevokeTx: required,\n    contractCreateTx: required,\n    contractCallTx: required,\n    oracleRegisterTx: required,\n    oracleExtendTx: required,\n    oraclePostQueryTx: required,\n    oracleRespondTx: required,\n    getAccountNonce: required,\n    channelCloseSoloTx: required,\n    channelSlashTx: required,\n    channelSettleTx: required,\n    channelSnapshotSoloTx: required,\n    gaAttachTx: required,\n    getVmVersion: required,\n    prepareTxParams: required\n  }\n}))\n\n/**\n * Create a `spend_tx` transaction\n * @function spendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({sender?: String, recipientId: String, amount: Number, fee?: Number, ttl?: Number, nonce?: Number, payload?: String}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `spend_tx` transaction\n */\n\n/**\n * Create a `name_preclaim_tx` transaction\n * @function namePreclaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, commitment: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_preclaim_tx` transaction\n */\n\n/**\n * Create a `name_claim_tx` transaction\n * @function nameClaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, name: String, nameSalt: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_claim_tx` transaction\n */\n\n/**\n * Create a `name_transfer_tx` transaction\n * @function nameTransferTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, recipientId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_transfer_tx` transaction\n */\n\n/**\n * Create a `name_update_tx` transaction\n * @function nameUpdateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, pointers: Object, nameTtl: Number, clientTtl: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_update_tx` transaction\n */\n\n/**\n * Create a `name_revoke_tx` transaction\n * @function nameRevokeTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_revoke_tx` transaction\n */\n\n/**\n * Create a `contract_create_tx` transaction\n * @function contractCreateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({owner: String, code: String, callData: String, vmVersion: Number, deposit: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_create_tx` transaction\n */\n\n/**\n * Create a `contract_call_tx` transaction\n * @function contractCallTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({callerId: String, contract: String, callData: String, vmVersion: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_call_tx` transaction\n */\n\n/**\n * Create a `oracle_register_tx` transaction\n * @function oracleRegisterTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ accountId: String, queryFormat: String, responseFormat: String, queryFee: String|Number, oracleTtl: Object, vmVersion: Number = ORACLE_VM_VERSION, fee?: Number, ttl?: Number, nonce?: Number }) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_register_tx` transaction\n */\n\n/**\n * Create a `oracle_extend_tx` transaction\n * @function oracleExtendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, oracleTtl: Object, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_extend_tx` transaction\n */\n\n/**\n * Create a `oracle_post_query_tx` transaction\n * @function oraclePostQuery\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, responseTtl: Object, query: String, queryTtl: Object, queryFee: String|Number, senderId: String, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_post_query_tx` transaction\n */\n\n/**\n * Create a `oracle_respond_tx` transaction\n * @function oracleRespondTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, responseTtl: Object, queryId: String, response: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_respond_tx` transaction\n */\n\n/**\n * Get Account Nonce\n * @function getAccountNonce\n * @instance\n * @abstract\n * @category async\n * @rtype (address) => result: Number\n * @param {String} address - Account public key\n * @return {Number} Result\n */\n\nexport default Tx\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle Base module\n * @module @aeternity/aepp-sdk/es/oracle\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/oracle'\n */\n\nimport { required } from '@stamp/required'\nimport stampit from '@stamp/it'\n\n/**\n * Basic Oracle Stamp\n *\n * This stamp include api call's related to oracle functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst OracleBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'getOracle',\n        'getOracleQueries',\n        'getOracleQuery'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    getOracle: required,\n    getOracleQueries: required,\n    getOracleQuery: required\n  }\n}))\n\n/**\n * Get oracle by oracle public key\n * @function getOracle\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracle: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @return {Object} - Oracle object\n */\n\n/**\n * Get oracle queries\n * @function getOracleQueries\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracleQueries: Promise[Object]\n * @param {String} oracleId- Oracle public key\n * @return {Object} - Oracle queries\n */\n\n/**\n * Get oracle query\n * @function getOracleQuery\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String, queryId: String) => oracleQuery: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @param {String} queryId - Query id\n * @return {Object} - Oracle query object\n */\n\nexport default OracleBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Chain module\n * @module @aeternity/aepp-sdk/es/chain\n * @export Chain\n * @example import Chain from '@aeternity/aepp-sdk/es/chain'\n */\n\nimport Oracle from '../oracle'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Chain Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Chain instance\n */\nconst Chain = Oracle.compose({\n  deepProps: { Chain: { defaults: { waitMined: true } } },\n  statics: { waitMined (bool) { return this.deepProps({ Chain: { defaults: { waitMined: bool } } }) } },\n  deepConf: {\n    Ae: {\n      methods: [\n        'sendTransaction', 'height', 'awaitHeight', 'poll', 'balance', 'tx',\n        'mempool', 'topBlock', 'getTxInfo', 'txDryRun', 'getName', 'getNodeInfo', 'getAccount'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    sendTransaction: required,\n    height: required,\n    awaitHeight: required,\n    topBlock: required,\n    poll: required,\n    balance: required,\n    tx: required,\n    getTxInfo: required,\n    mempool: required,\n    txDryRun: required,\n    getAccount: required\n  }\n}))\n\n/**\n * Reconfigure Stamp to (not) wait until transactions are mined\n * @function waitMined\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to wait for transactions\n * @return {Stamp} Reconfigured Chain Stamp\n */\n\n/**\n * Submit a signed transaction for mining\n * @function sendTransaction\n * @instance\n * @abstract\n * @category async\n * @rtype (tx: String, options?: Object) => tx: Promise[Object]|txHash: Promise[String]\n * @param {String} tx - Transaction to submit\n * @param {String} [options={}] - Options to pass to the implementation\n * @param {String} [options.verify = false] - Verify transaction before broadcast.\n * @return {Object|String} Transaction or transaction hash\n */\n\n/**\n * Obtain current height of the chain\n * @function height\n * @instance\n * @abstract\n * @category async\n * @rtype () => height: Number\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for the chain to reach a specific height\n * @function awaitHeight\n * @instance\n * @abstract\n * @category async\n * @rtype (height: Number, options?: Object) => height: Number\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.attempts - Number of polling attempts after which to fail\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for a transaction to be mined\n * @function poll\n * @instance\n * @abstract\n * @category async\n * @rtype (th: String, options?: Object) => tx: Object\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.blocks - Number of blocks mined after which to fail\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Request the balance of specified account\n * @function balance\n * @instance\n * @abstract\n * @category async\n * @rtype (address: String, options?: Object) => balance: Number\n * @param {String} address - The public account address to obtain the balance for\n * @param {Object} [options={}] - Options\n * @param {Number} options.height - The chain height at which to obtain the balance for (default: top of chain)\n * @param {String} options.hash - The block hash on which to obtain the balance for (default: top of chain)\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Obtain a transaction based on its hash\n * @function tx\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String, info = false) => tx: Object\n * @param {String} hash - Transaction hash\n * @param {Boolean} info - Retrieve additional transaction date. Works only for (ContractCreate and ContractCall transaction's)\n * @return {Object} Transaction\n */\n\n/**\n * Obtain a transaction info based on its hash\n * @function getTxInfo\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String) => tx: Object\n * @param {String} hash - Transaction hash\n * @return {Object} Transaction\n */\n\n/**\n * Obtain transaction's from mempool\n * @function mempool\n * @instance\n * @abstract\n * @category async\n * @rtype () => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Obtain current generation\n * @function getCurrentGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype () => generation: Object\n * @return {Object} Current Generation\n */\n\n/**\n * Get generation by hash or height\n * @function getGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => generation: Object\n * @param {String|Number} hashOrHeight - Generation hash or height\n * @return {Object} Generation\n */\n\n/**\n * Get micro block transactions\n * @function getMicroBlockTransactions\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Get key block\n * @function getKeyBlock\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => keyBlock: Object\n * @return {Object} Key Block\n */\n\n/**\n * Get micro block header\n * @function getMicroBlockHeader\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => header: Object\n * @return {Object} Micro block header\n */\n\n/**\n * Get account by account public key\n * @function getAccount\n * @instance\n * @abstract\n * @category async\n * @rtype (address, { hash, height }) => account: Object\n * @param {String} address - Account public key\n * @param {Object} [options={}] - Options\n * @param {Number} [options.height] - Get account on specific block by block height\n * @param {String} [options.hash] - Get account on specific block by block hash\n * @return {Object} Account\n */\n\n/**\n * Transaction dry-run\n * @function txDryRun\n * @instance\n * @abstract\n * @category async\n * @rtype (txs, accounts, hashOrHeight) => result: Object\n * @param {Array} txs - Array of transaction's\n * @param {Array} accounts - Array of account's\n * @param {String|Number} hashOrHeight - hash or height of block on which to make dry-run\n * @return {Object} Result\n */\n\n/**\n * Get Node Info\n * @function getInfo\n * @instance\n * @abstract\n * @category async\n * @rtype () => result: Object\n * @return {Object} Result\n */\n\nexport default Chain\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Account module\n * @module @aeternity/aepp-sdk/es/account\n * @export Account\n * @example import Account from '@aeternity/aepp-sdk/es/account'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\nimport * as Crypto from '../utils/crypto'\nimport { buildTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\n\nconst DEFAULT_NETWORK_ID = `ae_mainnet`\n\n/**\n * Sign encoded transaction\n * @instance\n * @category async\n * @rtype (tx: String) => tx: Promise[String], throws: Error\n * @param {String} tx - Transaction to sign\n * @param {Object} opt - Options\n * @return {String} Signed transaction\n */\nasync function signTransaction (tx, opt = {}) {\n  const networkId = this.getNetworkId()\n  const rlpBinaryTx = Crypto.decodeBase64Check(Crypto.assertedType(tx, 'tx'))\n  // Prepend `NETWORK_ID` to begin of data binary\n  const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpBinaryTx])\n\n  const signatures = [await this.sign(txWithNetworkId, opt)]\n  return buildTx({ encodedTx: rlpBinaryTx, signatures }, TX_TYPE.signed).tx\n}\n\n/**\n * Obtain networkId for signing\n * @instance\n * @category async\n * @rtype () => networkId: String\n * @return {String} NetworkId\n */\nfunction getNetworkId () {\n  return this.networkId || (this.selectedNode ? this.selectedNode.networkId : false) || DEFAULT_NETWORK_ID\n}\n\n/**\n * Basic Account Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Account is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides access to a\n * signing key pair.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.networkId - NETWORK_ID using for signing transaction's\n * @return {Object} Account instance\n */\nconst Account = stampit({\n  init ({ networkId }) { // NETWORK_ID using for signing transaction's\n    if (!this.networkId && networkId) {\n      this.networkId = networkId\n    }\n  },\n  methods: { signTransaction, getNetworkId },\n  deepConf: {\n    Ae: {\n      methods: ['sign', 'address', 'signTransaction', 'getNetworkId']\n    }\n  }\n}, required({ methods: {\n  sign: required,\n  address: required\n} }))\n\n/**\n * Sign data blob\n * @function sign\n * @instance\n * @abstract\n * @category async\n * @rtype (data: String) => data: Promise[String]\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\n\n/**\n * Obtain account address\n * @function address\n * @instance\n * @abstract\n * @category async\n * @rtype () => address: Promise[String]\n * @return {String} Public account address\n */\n\nexport default Account\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Ae module\n * @module @aeternity/aepp-sdk/es/ae\n * @export Ae\n * @example import Ae from '@aeternity/aepp-sdk/es/ae'\n */\n\nimport stampit from '@stamp/it'\nimport Tx from '../tx'\nimport Chain from '../chain'\nimport Account from '../account'\nimport TxBuilder from '../tx/builder'\nimport * as R from 'ramda'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Sign and post a transaction to the chain\n * @instance\n * @category async\n * @rtype (tx: String, options: Object) => Promise[String]\n * @param {String} tx - Transaction\n * @param {Object} [options={}] options - Options\n * @param {Object} [options.verify] verify - Verify transaction before broadcast, throw error if not valid\n * @return {String|String} Transaction or transaction hash\n */\nasync function send (tx, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const { contractId: gaId, authFun } = await this.getAccount(await this.address(opt))\n  const signed = gaId\n    ? await this.signUsingGA(tx, { ...opt, authFun })\n    : await this.signTransaction(tx, options)\n  return this.sendTransaction(signed, options)\n}\n\nasync function signUsingGA (tx, options = {}) {\n  const { authData, authFun } = options\n  return this.createMetaTx(tx, authData, authFun, options)\n}\n\n/**\n * Send tokens to another account\n * @instance\n * @category async\n * @rtype (amount: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} amount - Amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function spend (amount, recipientId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(opt), recipientId, amount: amount }))\n  return this.send(spendTx, opt)\n}\n\n/**\n * Send a percentage of funds to another account\n * @instance\n * @category async\n * @rtype (percentage: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} percentage - Percentage of amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function transferFunds (percentage, recipientId, options = { excludeFee: false }) {\n  if (percentage < 0 || percentage > 1) throw new Error(`Percentage should be a number between 0 and 1, got ${percentage}`)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const requestTransferAmount = BigNumber(await this.balance(await this.address())).times(percentage)\n  let spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount: requestTransferAmount }))\n\n  const { tx: txObject } = TxBuilder.unpackTx(spendTx)\n  // If the requestTransferAmount should include the fee keep calculating the fee\n  let amount = requestTransferAmount\n  if (!options.excludeFee) {\n    while (amount.plus(txObject.fee).gt(requestTransferAmount)) {\n      amount = requestTransferAmount.minus(txObject.fee)\n    }\n  }\n\n  // Rebuild tx\n  spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount }))\n\n  return this.send(spendTx, opt)\n}\n\n/**\n * Remove all listeners for RPC\n * @instance\n * @return {void}\n */\nfunction destroyInstance () {\n  const destroyMethods = ['destroyClient', 'destroyServer'] // Array with destroy function's\n  destroyMethods.forEach(m => this[m] && typeof this[m] === 'function' && this[m]())\n}\n\n/**\n * Basic Ae Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Ae objects are the composition of three basic building blocks:\n * * {@link module:@aeternity/aepp-sdk/es/tx--Tx}\n * * {@link module:@aeternity/aepp-sdk/es/account--Account}\n * * {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * Only by providing the joint functionality of those three, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Ae instance\n */\nconst Ae = stampit(Tx, Account, Chain, {\n  methods: { send, spend, transferFunds, destroyInstance, signUsingGA },\n  deepProps: { Ae: { defaults: {} } },\n  deepConfiguration: { Ae: { methods: ['signUsingGA'] } }\n})\n\nexport default Ae\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * OracleNodeAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/oracle}.\n * @module @aeternity/aepp-sdk/es/oracle/node\n * @export OracleNodeAPI\n * @example import OracleNodeAPI from '@aeternity/aepp-sdk/es/oracle/node'\n */\n\nimport OracleBase from './'\n\nasync function getOracle (oracleId) {\n  return this.api.getOracleByPubkey(oracleId)\n}\n\nasync function getOracleQueries (oracleId) {\n  return this.api.getOracleQueriesByPubkey(oracleId)\n}\n\nasync function getOracleQuery (oracleId, queryId) {\n  return this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId)\n}\n\nconst OracleNodeAPI = OracleBase.compose({\n  methods: {\n    getOracle,\n    getOracleQueries,\n    getOracleQuery\n  }\n})\n\nexport default OracleNodeAPI\n","import { BigNumber } from 'bignumber.js'\n\nconst prefixes = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 }\n]\n\nconst getNearestPrefix = exponent => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p))\n\nconst getLowerBoundPrefix = exponent => prefixes\n  .find(p => p.magnitude <= exponent) || prefixes[prefixes.length - 1]\n\nexport default (value) => {\n  if (!BigNumber.isBigNumber(value)) value = BigNumber(value)\n\n  const { name, magnitude } = (value.e < 0 ? getNearestPrefix : getLowerBoundPrefix)(value.e)\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(value.e - magnitude, 0))\n    .toFixed()\n  return `${v}${name ? ' ' : ''}${name}`\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\n\nfunction asyncInit (options = {}, { stamp, args, instance }) {\n  return stamp.compose.deepConfiguration.AsyncInit.initializers.reduce(async (instance, init) => {\n    instance = await Promise.resolve(instance)\n    if (typeof init === 'function') {\n      const ret = await Promise.resolve(init.call(instance, options, { stamp, args, instance }))\n      return ret === undefined ? instance : ret\n    }\n    return instance\n  }, instance)\n}\n\nconst AsyncInit = stampit({\n  deepConf: { AsyncInit: { initializers: [] } },\n  composers ({ stamp, composables }) {\n    const conf = stamp.compose.deepConfiguration.AsyncInit\n    conf.initializers = R.without([asyncInit], R.uniqWith(R.identical, R.flatten(composables.map(c => R.path(['compose', 'deepConfiguration', 'AsyncInit', 'initializers'], c) || (c.compose || c).initializers || []))))\n    stamp.compose.initializers = [asyncInit]\n  }\n})\n\nexport default AsyncInit\n","import BigNumber from 'bignumber.js'\n\n/* eslint-disable */\nexport default {\n  stringify: (function () {\n    'use strict';\n\n    function f(n) {\n      // Format integers to have at least two digits.\n      return n < 10 ? '0' + n : n;\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      gap,\n      indent,\n      meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      },\n      rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n      escapable.lastIndex = 0;\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string'\n          ? c\n          : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n      var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key],\n        isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value) || BigNumber(value).toString(10) === value);\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n      if (value && typeof value === 'object' &&\n        typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n      }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n      if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n      }\n\n// What happens next depends on the value's type.\n\n      switch (typeof value) {\n        case 'string':\n          if (isBigNumber) {\n            return value;\n          } else {\n            return quote(value);\n          }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n          return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n          return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n          if (!value) {\n            return 'null';\n          }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n          gap += indent;\n          partial = [];\n\n// Is the value an array?\n\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n            length = value.length;\n            for (i = 0; i < length; i += 1) {\n              partial[i] = str(i, value) || 'null';\n            }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n            v = partial.length === 0\n              ? '[]'\n              : gap\n                ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                : '[' + partial.join(',') + ']';\n            gap = mind;\n            return v;\n          }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n          if (rep && typeof rep === 'object') {\n            length = rep.length;\n            for (i = 0; i < length; i += 1) {\n              if (typeof rep[i] === 'string') {\n                k = rep[i];\n                v = str(k, value);\n                if (v) {\n                  partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                }\n              }\n            }\n          } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n            Object.keys(value).forEach(function(k) {\n              var v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v);\n              }\n            });\n          }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n          v = partial.length === 0\n            ? '{}'\n            : gap\n              ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n              : '{' + partial.join(',') + '}';\n          gap = mind;\n          return v;\n      }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    return function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n      var i;\n      gap = '';\n      indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n      if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n          indent += ' ';\n        }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === 'string') {\n        indent = space;\n      }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== 'function' &&\n        (typeof replacer !== 'object' ||\n          typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n      }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n      return str('', {'': value});\n    };\n  }()),\n  parse: ((options) => {\n    // This is a function that can parse a JSON text, producing a JavaScript\n    // data structure. It is a simple, recursive descent parser. It does not use\n    // eval or regular expressions, so it can be used as a model for implementing\n    // a JSON parser in other languages.\n\n    // We are defining the function inside of another function to avoid creating\n    // global letiables.\n\n    // Default options one can override by passing options to the parse()\n    const _options = {\n      'strict': false, // not being strict means do not generate syntax errors for \"duplicate key\"\n      'storeAsString': false // toggles whether the values should be stored as BigNumber (default) or a string\n    }\n\n    const escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t'\n    }\n\n    // If there are options, then use them to override the default _options\n    if (options !== undefined && options !== null) {\n      if (options.strict === true) {\n        _options.strict = true\n      }\n      if (options.storeAsString === true) {\n        _options.storeAsString = true\n      }\n    }\n\n    let at\n    // The index of the current character\n\n    let ch\n    // The current character\n\n    let text\n\n    let error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text\n      }\n    }\n\n    let next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error('Expected \\'' + c + '\\' instead of \\'' + ch + '\\'')\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at)\n      at += 1\n      return ch\n    }\n\n    let number = function () {\n      // Parse a number value.\n\n      let number\n\n      let string = ''\n\n      if (ch === '-') {\n        string = '-'\n        next('-')\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch\n        next()\n      }\n      if (ch === '.') {\n        string += '.'\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch\n        next()\n        if (ch === '-' || ch === '+') {\n          string += ch\n          next()\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch\n          next()\n        }\n      }\n      number = +string\n      if (!isFinite(number)) {\n        error('Bad number')\n      } else {\n        // if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15) { return string }\n        return number\n      }\n    }\n\n    let string = function () {\n      // Parse a string value.\n\n      let hex\n\n      let i\n\n      let string = ''\n\n      let uffff\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        while (next()) {\n          if (ch === '\"') {\n            next()\n            return string\n          }\n          if (ch === '\\\\') {\n            next()\n            if (ch === 'u') {\n              uffff = 0\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16)\n                if (!isFinite(hex)) {\n                  break\n                }\n                uffff = uffff * 16 + hex\n              }\n              string += String.fromCharCode(uffff)\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch]\n            } else {\n              break\n            }\n          } else {\n            string += ch\n          }\n        }\n      }\n      error('Bad string')\n    }\n\n    let white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next()\n      }\n    }\n\n    let word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t')\n          next('r')\n          next('u')\n          next('e')\n          return true\n        case 'f':\n          next('f')\n          next('a')\n          next('l')\n          next('s')\n          next('e')\n          return false\n        case 'n':\n          next('n')\n          next('u')\n          next('l')\n          next('l')\n          return null\n      }\n      error('Unexpected \\'' + ch + '\\'')\n    }\n\n    let value\n    // Place holder for the value function.\n\n    let array = function () {\n      // Parse an array value.\n\n      let array = []\n\n      if (ch === '[') {\n        next('[')\n        white()\n        if (ch === ']') {\n          next(']')\n          return array // empty array\n        }\n        while (ch) {\n          array.push(value())\n          white()\n          if (ch === ']') {\n            next(']')\n            return array\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad array')\n    }\n\n    let object = function () {\n      // Parse an object value.\n\n      let key\n\n      let object = {}\n\n      if (ch === '{') {\n        next('{')\n        white()\n        if (ch === '}') {\n          next('}')\n          return object // empty object\n        }\n        while (ch) {\n          key = string()\n          white()\n          next(':')\n          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {\n            error('Duplicate key \"' + key + '\"')\n          }\n          object[key] = value()\n          white()\n          if (ch === '}') {\n            next('}')\n            return object\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad object')\n    }\n\n    value = function () {\n      // Parse a JSON value. It could be an object, an array, a string, a number,\n      // or a word.\n\n      white()\n      switch (ch) {\n        case '{':\n          return object()\n        case '[':\n          return array()\n        case '\"':\n          return string()\n        case '-':\n          return number()\n        default:\n          return ch >= '0' && ch <= '9' ? number() : word()\n      }\n    }\n\n    // Return the json_parse function. It will have access to all of the above\n    // functions and letiables.\n\n    return function (source, reviver) {\n      let result\n\n      text = source + ''\n      at = 0\n      ch = ' '\n      result = value()\n      white()\n      if (ch) {\n        error('Syntax error')\n      }\n\n      // If there is a reviver function, we recursively walk the new structure,\n      // passing each name/value pair to the reviver function for possible\n      // transformation, starting with a temporary root object that holds the result\n      // in an empty key. If there is not a reviver function, we simply return the\n      // result.\n\n      return typeof reviver === 'function'\n        ? (function walk (holder, key) {\n          let k; let v; let value = holder[key]\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k)\n              if (v !== undefined) {\n                value[k] = v\n              } else {\n                delete value[k]\n              }\n            })\n          }\n          return reviver.call(holder, key, value)\n        }({ '': result }, ''))\n        : result\n    }\n  })()\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as R from 'ramda'\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeToPascal (s) {\n  return s.replace(/_./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeOrKebabToPascal (s) {\n  return s.replace(/[_|-]./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function pascalToSnake (s) {\n  return s.replace(/[A-Z]/g, match => `_${R.toLower(match)}`)\n}\n\n/**\n * Check whether a string is valid hex.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid hex, false otherwise.\n */\nexport function isHex (str) {\n  return !!(str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i))\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Swagger module\n * @module @aeternity/aepp-sdk/es/utils/swagger\n * @export Swagger\n * @example import Swagger from '@aeternity/aepp-sdk/es/utils/swagger'\n */\n\nimport JsonBig from './json-big'\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport { snakeToPascal, pascalToSnake } from './string'\nimport BigNumber from 'bignumber.js'\n\n/**\n * Perform path string interpolation\n * @static\n * @rtype (path: String, replacements: Object) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nfunction expandPath (path, replacements) {\n  return R.toPairs(replacements).reduce((path, [key, value]) => path.replace(`{${key}}`, value), path)\n}\n\n/**\n * Lookup type\n * @rtype (path: [String...], spec: Object, types: Object) => Object\n * @param {String[]} path - Path to look up\n * @param {Object} spec\n * @param {Object} types\n * @return {Object} Looked up type definition\n */\nfunction lookupType (path, spec, types) {\n  const type = (() => {\n    const match = R.path(path, spec).match(/^#\\/definitions\\/(.+)/)\n    if (match !== void 0) {\n      return match[1]\n    } else {\n      throw Error(`Reference path does not meet specification: ${path}`)\n    }\n  })()\n\n  if (type in types) {\n    return types[type]\n  } else {\n    throw Error(`Couldn't find definition for ${type}`)\n  }\n}\n\n/**\n * Intercept errors thrown by `fn()`, extending them with information from `key`\n * @rtype (key: String, fn: Function) => Any\n * @param {String} key - Information to attach\n * @param {Function} fn - Thunk\n * @return {Any} Execution result\n */\nfunction extendingErrorPath (key, fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw Object.assign(e, { path: [key].concat(e.path || []) })\n  }\n}\n\n/**\n * Construct Error with additional type information (not thrown)\n * @rtype (msg: String, spec: String, value: String) => Error\n * @param {String} msg - Error message\n * @param {String} spec\n * @param {String} value\n * @return {Error} Enhanced Error\n */\nfunction TypeError (msg, spec, value) {\n  const e = Error(msg)\n  return Object.assign(e, { spec, value })\n}\n\n/**\n * Per-type {@link conform} dispatcher\n * @rtype [(dispatch(value: String, spec: Object, types: Object) => Any, throws: Error)...]\n */\nconst conformTypes = {\n  integer (value, spec, types) {\n    if (R.type(value) === 'Number' || BigNumber(value).toString(10) === value) {\n      return R.type(value) === 'Number' ? Math.floor(value) : value\n    } else {\n      throw TypeError('Not an integer', spec, value)\n    }\n  },\n  enum (value, spec, types) {\n    const { enum: values } = spec\n    if (R.contains(value, values)) {\n      return value\n    } else {\n      throw TypeError(`Not one of [${R.join(', ', values)}]`, spec, value)\n    }\n  },\n  string (value, spec, types) {\n    if (R.type(value) === 'String') {\n      return value\n    } else {\n      throw TypeError(`Not a string`, spec, value)\n    }\n  },\n  object (value, spec, types) {\n    if (R.type(value) === 'Object') {\n      const required = (spec.required || []).map(snakeToPascal)\n      const properties = pascalizeKeys(spec.properties)\n      const missing = R.difference(required, R.keys(value))\n\n      if (missing.length > 0) {\n        throw TypeError(`Required properties missing: ${R.join(', ', missing)}`, spec, value)\n      } else {\n        return R.mapObjIndexed((value, key) => extendingErrorPath(key, () => conform(value, properties[key], types)), R.reject(R.isNil, R.pick(R.keys(properties), value)))\n      }\n    } else {\n      throw TypeError(`Not an object`, spec, value)\n    }\n  },\n  array (value, spec, types) {\n    if (R.type(value) === 'Array') {\n      return value.map(o => conform(o, spec.items, types))\n    } else {\n      throw TypeError(`Not an array`, spec, value)\n    }\n  },\n  schema (value, spec, types) {\n    return conform(value, lookupType(['schema', '$ref'], spec, types), types)\n  },\n  $ref (value, spec, types) {\n    return conform(value, lookupType(['$ref'], spec, types), types)\n  },\n  allOf (value, spec, types) {\n    return R.mergeAll(spec.allOf.map(spec => conform(value, spec, types)))\n  }\n}\n\n/**\n * {@link conform} dispatcher\n * @rtype (spec: Object) => String, throws: Error\n * @param {Object} spec\n * @return {String} Value to dispatch on\n */\nfunction conformDispatch (spec) {\n  if ('schema' in spec) {\n    return 'schema'\n  } else if ('$ref' in spec) {\n    return '$ref'\n  } else if ('enum' in spec) {\n    return 'enum'\n  } else if ('allOf' in spec) {\n    return 'allOf'\n  } else if ('type' in spec) {\n    return spec.type\n  } else {\n    throw Object.assign(Error('Could not determine type'), { spec })\n  }\n}\n\n/**\n * Conform `value` against its `spec`\n * @static\n * @rtype (value: Any, spec: Object, types: Object) => Any, throws: Error\n * @param {Object} value - Value to conform (validate and transform)\n * @param {Object} spec - Specification object\n * @param {Object} types - Types specification\n * @return {Object} Conformed value\n */\nfunction conform (value, spec, types) {\n  return (conformTypes[conformDispatch(spec)] || (() => {\n    throw Object.assign(Error('Unsupported type'), { spec })\n  }))(value, spec, types)\n}\n\nconst httpConfig = {\n  headers: { 'Content-Type': 'application/json' },\n  transformResponse: [(data) => {\n    try {\n      return JsonBig.parse(data)\n    } catch (e) {\n      return data\n    }\n  }],\n  transformRequest: [(data) => {\n    try {\n      return JsonBig.stringify(data)\n    } catch (e) {\n      return data\n    }\n  }]\n}\n\nconst httpClients = {\n  get: (config) => (url, params) => axios.get(url, [httpConfig, config, params].reduce(R.mergeDeepRight)),\n  post: (config) => (url, params) => axios.post(url, params, R.mergeDeepRight(httpConfig, config))\n}\n\n/**\n * Classify given `parameters`\n * @rtype (parameters: [{required: Boolean, in: String}...]) => {pathArgs: [...Object], queryArgs: [...Object], bodyArgs: [...Object], req: [...Object], opts: [...Object]}\n * @param {Object[]} parameters - Parameters to classify\n * @return {Object[]} Classified parameters\n */\nfunction classifyParameters (parameters) {\n  const { req, opts } = R.groupBy(p => p.required ? 'req' : 'opts', parameters)\n  const { path, query, body } = R.groupBy(p => p.in, parameters)\n\n  return {\n    pathArgs: R.pluck('name', path || []),\n    queryArgs: R.pluck('name', query || []),\n    bodyArgs: R.pluck('name', body || []),\n    req: req || [],\n    opts: opts || []\n  }\n}\n\n/**\n * Convert `name` attributes in `parameters` from snake_case to PascalCase\n * @rtype (parameters: [{name: String}...]) => [{name: String}...]\n * @param {Object[]} parameters - Parameters to pascalize\n * @return {Object[]} Pascalized parameters\n */\nfunction pascalizeParameters (parameters) {\n  return parameters.map(o => R.assoc('name', snakeToPascal(o.name), o))\n}\n\n/**\n * Key traversal metafunction\n * @static\n * @function\n * @rtype (fn: (s: String) => String) => (o: Object) => Object\n * @param {Function} fn - Key transformation function\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n */\nconst traverseKeys = R.curry((fn, o) => {\n  const dispatch = {\n    Object: o => R.fromPairs(R.toPairs(o).map(function (arr) {\n      const k = arr[0]\n      const v = arr[1]\n      return [fn(k), traverseKeys(fn, v)]\n    })),\n    Array: o => o.map(traverseKeys(fn))\n  }\n\n  return (dispatch[R.type(o)] || R.identity)(o)\n})\n\n/**\n * snake_case key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see pascalToSnake\n */\nfunction snakizeKeys (o) {\n  return traverseKeys(pascalToSnake, o)\n}\n\n/**\n * PascalCase key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see snakeToPascal\n */\nfunction pascalizeKeys (o) {\n  return traverseKeys(snakeToPascal, o)\n}\n\n/**\n * Obtain readable signature for operation\n * @rtype (name: String, req: [...Object], opts: [...Object]) => Object\n * @param {String} name - Name of operation\n * @param {Object[]} req - Required parameters to operation\n * @param {Object[]} opts - Optional parameters to operation\n * @return {String} Signature\n */\nfunction operationSignature (name, req, opts) {\n  const args = req.length ? `${R.join(', ', R.pluck('name', req))}` : null\n  const opt = opts.length ? `{${R.join(', ', R.pluck('name', opts))}}` : null\n\n  return `${name} (${R.join(', ', [args, opt].filter(R.identity))})`\n}\n\n/**\n * Assert that `coll` is a sequence with a length of 1 and extract the only element\n * @static\n * @rtype (coll: [...Any]) => Any, throws: Error\n * @param {Object[]} coll\n * @return {Object}\n */\nfunction assertOne (coll) {\n  if (coll.length === 1) {\n    return R.head(coll)\n  } else {\n    throw Error(`Expected exactly one element in ${coll}`)\n  }\n}\n\n/**\n * Destructure HTTP client `error`\n * @rtype (error: Error) => String\n * @param {Error} error\n * @return {String}\n */\nfunction destructureClientError (error) {\n  const { method, url } = error.config\n  const { status, data } = error.response\n  const reason = R.has('reason', data) ? data.reason : R.toString(data)\n\n  return `${method.toUpperCase()} to ${url} failed with ${status}: ${reason}`\n}\n\n/**\n * Generate callable operation\n * @function\n * @static\n * @rtype (path: String, method: String, definition: Object, types: Object) => (instance: Swagger, url: String) => Promise[Any], throws: Error\n * @param {String} path - Path to call in URL\n * @param {String} method - HTTP method\n * @param {Object} definition - Complex definition\n * @param {Object} types - Swagger types\n * @return {Function}\n */\nconst operation = (path, method, definition, types, { config, errorHandler } = {}) => {\n  config = config || {}\n  delete config.transformResponse // Prevent of overwriting transform response\n  const { operationId, description } = definition\n  let { parameters } = definition\n  const name = `${R.head(operationId).toLowerCase()}${R.drop(1, operationId)}`\n  const pascalized = pascalizeParameters(parameters)\n\n  const { pathArgs, queryArgs, bodyArgs, req, opts } = classifyParameters(pascalized)\n  const optNames = R.pluck('name', opts)\n  const indexedParameters = R.indexBy(R.prop('name'), pascalized)\n\n  const signature = operationSignature(name, req, opts)\n  const client = httpClients[method](config)\n\n  return (instance, url) => {\n    const fn = async function () {\n      const { defaults } = this.Swagger\n\n      try {\n        const [arg, opt] = (() => {\n          if (arguments.length === req.length) {\n            return [Array.from(arguments), defaults]\n          } else if (arguments.length === req.length + 1) {\n            return [R.dropLast(1, arguments), R.merge(defaults, R.last(arguments))]\n          } else {\n            throw Error(`Function call doesn't conform to ${signature}`)\n          }\n        })()\n\n        if (opt.debug) {\n          console.log(`Invoked ${name} with ${R.toString(arg)} ${R.toString(opt)}`)\n        }\n\n        const values = R.merge(R.reject(R.isNil, R.pick(optNames, opt)), R.zipObj(R.pluck('name', req), arg))\n        const conformed = R.mapObjIndexed((val, key) => {\n          try {\n            return conform(val, indexedParameters[key], types)\n          } catch (e) {\n            const path = [key].concat(e.path || [])\n            throw Object.assign(e, {\n              path,\n              value: val,\n              message: `validating ${R.join(' -> ', path)}: ${e.message}`\n            })\n          }\n        }, values)\n        const expandedPath = expandPath(path, snakizeKeys(R.pick(pathArgs, conformed)))\n        const params = snakizeKeys((() => {\n          if (method === 'get') {\n            return { params: R.pick(queryArgs, conformed) }\n          } else if (method === 'post') {\n            return conformed[assertOne(bodyArgs)]\n          } else {\n            throw Error(`Unsupported method ${method}`)\n          }\n        })())\n\n        if (opt.debug) {\n          console.log(`Going to ${method.toUpperCase()} ${url}${expandedPath} with ${R.toString(params)}`)\n        }\n\n        try {\n          const response = await client(`${url}${expandedPath}`, params).catch(this.axiosError(errorHandler))\n          // return opt.fullResponse ? response : conform(pascalizeKeys(response.data), responses['200'], types)\n          return opt.fullResponse ? response : pascalizeKeys(response.data)\n        } catch (e) {\n          if (R.path(['response', 'data'], e)) {\n            e.message = destructureClientError(e)\n          }\n          throw e\n        }\n      } catch (e) {\n        e.message = `While calling ${signature}, ${e.message}`\n        throw e\n      }\n    }.bind(instance)\n\n    Object.assign(fn, {\n      signature,\n      description\n    })\n\n    return Object.defineProperties(fn, {\n      name: {\n        value: name,\n        writable: false\n      },\n      length: {\n        value: req.length + (opts.length ? 1 : 0),\n        writable: false\n      }\n    })\n  }\n}\n\n/**\n * Swagger Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/swagger\n * @rtype Stamp\n * @param {Object} options - Initializer object\n * @param {Object} options.swag - Swagger definition\n * @param {Object} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Account instance\n * @example Swagger({swag})\n */\nconst Swagger = stampit({\n  init ({ swag = this.swag, axiosConfig }, { stamp }) {\n    const { paths, definitions } = swag\n    const methods = R.indexBy(\n      R.prop('name'),\n      R.flatten(\n        R.values(\n          R.mapObjIndexed(\n            (methods, path) => R.values(\n              R.mapObjIndexed((definition, method) => {\n                const op = operation(path, method, definition, definitions, axiosConfig)\n                return op(this, this.urlFor(swag.basePath, definition))\n              }, methods)),\n            paths\n          )\n        )\n      )\n    )\n\n    return Object.assign(this, {\n      methods: R.keys(methods),\n      api: methods\n    })\n  },\n  deepProps: {\n    Swagger: {\n      defaults: {\n        debug: false,\n        txEncoding: 'json'\n      }\n    }\n  },\n  statics: { debugSwagger (bool) { return this.deepProps({ Swagger: { defaults: { debug: bool } } }) } }\n})\n\n/**\n * Reconfigure Swagger to (not) spill debugging logs\n * @function debugSwagger\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to debug\n * @return {Stamp} Reconfigured Swagger Stamp\n */\n\nexport default Swagger\n\nexport {\n  conform,\n  operation,\n  expandPath,\n  assertOne,\n  snakeToPascal,\n  pascalToSnake,\n  traverseKeys\n}\n","export default function (version, geVersion, ltVersion) {\n  const versionComponents = version.split('.')\n  const geComponents = geVersion.split('.')\n  const ltComponents = ltVersion.split('.')\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1\n  const toNumber = components => components.reverse()\n    .reduce((acc, n, idx) => acc + n * Math.pow(base, idx), 0)\n\n  const vNumber = toNumber(versionComponents)\n  const geNumber = toNumber(geComponents)\n  const ltNumber = toNumber(ltComponents)\n  return vNumber >= geNumber && vNumber < ltNumber\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Node module\n * @module @aeternity/aepp-sdk/es/node\n * @export Node\n * @example import Node from '@aeternity/aepp-sdk/es/node'\n */\n\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport AsyncInit from './utils/async-init'\nimport Swagger from './utils/swagger'\nimport semverSatisfies from './utils/semver-satisfies'\n\n/**\n * Obtain Swagger configuration from Node node\n * @category async\n * @rtype (url: String) => swagger: Object\n * @param {String} url - Node base URL\n * @param {Object} axiosConfig Axios configuration object\n * @return {Object} Swagger configuration\n */\nasync function remoteSwag (url, axiosConfig) {\n  return (await axios.get(`${url}/api`, axiosConfig)).data\n}\n\n/**\n * Node specific loader for `urlFor`\n * @rtype ({url: String, internalUrl?: String}) => (path: String, definition: Object) => tx: String\n * @param {Object} options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @return {Function} Implementation for {@link urlFor}\n */\nconst loader = ({ url, internalUrl }) => (path, definition) => {\n  const { tags, operationId } = definition\n\n  if (R.contains('external', tags)) {\n    return `${url}${path}`\n  } else if (!R.isNil(internalUrl) && R.contains('internal', tags)) {\n    return `${internalUrl}${path}`\n  } else {\n    throw Error(`Method ${operationId} is unsupported. No interface for ${R.toString(tags)}`)\n  }\n}\n\n/**\n * get consensus protocol version\n * @param {Array} protocols Array of protocols\n * @param {Number} height Height\n * @return {Number} version Protocol version\n */\nasync function getConsensusProtocolVersion (protocols = [], height) {\n  if (!protocols) throw new Error('Protocols must be an array')\n  if (!height) height = (await this.api.getCurrentKeyBlock()).height\n  if (height < 0) throw new Error('height must be a number >= 0')\n\n  const { version } = protocols\n    .reduce(\n      ({ effectiveAtHeight, version }, p) => height >= p.effectiveAtHeight && p.effectiveAtHeight > effectiveAtHeight\n        ? { effectiveAtHeight: p.effectiveAtHeight, version: p.version }\n        : { effectiveAtHeight, version },\n      { effectiveAtHeight: -1, version: 0 }\n    )\n  return version\n}\n\nfunction axiosError (handler) {\n  return (error) => {\n    handler && typeof handler === 'function' && handler(error)\n    throw error\n  }\n}\n\n/**\n * {@link Swagger} based Node remote API Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node\n * @rtype Stamp\n * @param {Object} [options={}] - Options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @param {String} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Node client\n * @example Node({url: 'https://sdk-testnet.aepps.com'})\n */\nconst Node = stampit(AsyncInit, {\n  async init ({ name, url = this.url, internalUrl = this.internalUrl, axiosConfig: { config, errorHandler } = {} }) {\n    if (!url) throw new Error('\"url\" required')\n    url = url.replace(/\\/?$/, '')\n    internalUrl = internalUrl ? internalUrl.replace(/\\/?$/, '') : url\n    // Get swagger schema\n    const swag = await remoteSwag(url, config).catch(this.axiosError(errorHandler))\n    this.version = swag.info.version\n    return Object.assign(this, {\n      url,\n      internalUrl,\n      swag: swag,\n      urlFor: loader({ url, internalUrl })\n    })\n  },\n  methods: {\n    axiosError,\n    getNodeInfo () {\n      return {\n        url: this.url,\n        internalUrl: this.internalUrl,\n        nodeNetworkId: this.nodeNetworkId,\n        version: this.version,\n        consensusProtocolVersion: this.consensusProtocolVersion\n      }\n    },\n    getConsensusProtocolVersion\n  },\n  props: {\n    version: null,\n    consensusProtocolVersion: null,\n    nodeNetworkId: null\n  }\n}, Swagger, {\n  async init ({ forceCompatibility = false }) {\n    const { nodeRevision: revision, genesisKeyBlockHash: genesisHash, networkId, protocols } = await this.api.getStatus()\n    this.consensusProtocolVersion = await this.getConsensusProtocolVersion(protocols)\n    if (\n      !semverSatisfies(this.version.split('-')[0], NODE_GE_VERSION, NODE_LT_VERSION) &&\n      !forceCompatibility\n    ) {\n      throw new Error(\n        `Unsupported node version ${this.version}. ` +\n        `Supported: >= ${NODE_GE_VERSION} < ${NODE_LT_VERSION}`\n      )\n    }\n\n    this.nodeNetworkId = networkId\n    return Object.assign(this, { revision, genesisHash })\n  }\n})\n\nconst NODE_GE_VERSION = '3.0.1'\nconst NODE_LT_VERSION = '5.0.0'\n\nexport default Node\n","export const DEFAULT_NETWORK_ID = 'ae_mainnet'\n\nexport const getterForCurrentNode = (currentNode) => {\n  if (!currentNode || !currentNode.instance) throw new Error(`You can't use Node API. Node is not connected or not defined!`)\n\n  return currentNode.instance.api\n}\n\nexport const prepareNodeObject = (name, node) => ({\n  name,\n  instance: node,\n  url: node.url,\n  internalUrl: node.internalUrl,\n  networkId: node.nodeNetworkId,\n  version: node.version,\n  consensusProtocolVersion: node.consensusProtocolVersion\n})\n","/**\n * NodePool module\n * @module @aeternity/aepp-sdk/es/node-pool\n * @export NodePool\n * @example import NodePool from '@aeternity/aepp-sdk/es/node-pool'\n */\nimport Node from '../node'\nimport { DEFAULT_NETWORK_ID, getterForCurrentNode, prepareNodeObject } from './helpers'\nimport AsyncInit from '../utils/async-init'\n\n/**\n * Node Pool Stamp\n * This stamp allow you to make basic manipulation(add, remove, select) on list of nodes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node-pool\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.nodes] - Array with Node instances\n * @return {Object} NodePool instance\n */\nexport const NodePool = AsyncInit.compose({\n  async init ({ nodes = [], url = this.url, internalUrl = this.internalUrl } = {}) {\n    this.pool = new Map()\n    this.validateNodes(nodes)\n\n    nodes.forEach(node => {\n      const { name, instance } = node\n      this.pool.set(name, prepareNodeObject(name, instance))\n    })\n    if (nodes.length) this.selectNode(nodes[0].name)\n\n    // DEPRECATED. TODO Remove deprecated param\n    // Prevent BREAKING CHANGES. Support for init params `url`, `internalUrl`\n    if (url) {\n      this.addNode('default', await Node({ url, internalUrl }), true)\n    }\n  },\n  propertyDescriptors: {\n    api: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return getterForCurrentNode(this.selectedNode)\n      }\n    }\n  },\n  methods: {\n    /**\n     * Add Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String, nodeInstance: Object, select: Boolean) => Void\n     * @param {String} name - Node name\n     * @param {Object} nodeInstance - Node instance\n     * @param {Boolean} select - Select this node as current\n     * @return {Void}\n     * @example\n     * nodePool.addNode('testNode', awaitNode({ url, internalUrl }), true) // add and select new node with name 'testNode'\n     */\n    addNode (name, nodeInstance, select = false) {\n      if (this.pool.has(name)) throw new Error(`Node with name ${name} already exist`)\n\n      this.validateNodes([{ name, instance: nodeInstance }])\n\n      this.pool.set(name, prepareNodeObject(name, nodeInstance))\n      if (select || !this.selectedNode) {\n        this.selectNode(name)\n      }\n    },\n    /**\n     * Select Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String) => Void\n     * @param {String} name - Node name\n     * @return {Void}\n     * @example\n     * nodePool.selectNode('testNode')\n     */\n    selectNode (name) {\n      if (!this.pool.has(name)) throw new Error(`Node with name ${name} not in pool`)\n\n      this.selectedNode = this.pool.get(name)\n    },\n    /**\n     * Get NetworkId of current Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => String\n     * @return {String}\n     * @example\n     * nodePool.getNetworkId()\n     */\n    getNetworkId () {\n      return this.networkId || this.selectedNode.networkId || DEFAULT_NETWORK_ID\n    },\n    /**\n     * Check if you have selected node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Boolean\n     * @return {Boolean}\n     * @example\n     * nodePool.isNodeConnected()\n     */\n    isNodeConnected () {\n      return !!this.selectedNode.instance\n    },\n    /**\n     * Get information about node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object\n     * @return {Object}\n     * @example\n     * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n     */\n    getNodeInfo () {\n      if (!this.isNodeConnected()) throw new Error('Can not get node info. Node is not connected')\n      return {\n        name: this.selectedNode.name,\n        ...this.selectedNode.instance.getNodeInfo()\n      }\n    },\n    /**\n     * Get array of available nodes\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object[]\n     * @return {Object[]}\n     * @example\n     * nodePool.getNodesInPool()\n     */\n    getNodesInPool () {\n      return Array.from(this.pool.entries()).map(([name, node]) => ({\n        name,\n        ...node.instance.getNodeInfo()\n      }))\n    },\n    validateNodes (nodes) {\n      const nodeProps = ['Swagger', 'api', 'consensusProtocolVersion', 'genesisHash', 'methods']\n      nodes.forEach((node, index) => {\n        if (typeof node !== 'object') throw new Error('Node must be an object with \"name\" and \"instance\" props')\n        if (['name', 'instance'].find(k => !node[k])) throw new Error(`Node object on index ${index} must contain node \"name\" and \"ins\"`)\n        if (!node.instance || typeof node.instance !== 'object' || nodeProps.find(prop => !(prop in node.instance))) {\n          throw new Error('Invalid node instance object')\n        }\n      })\n    }\n  },\n  props: {\n    selectedNode: {}\n  }\n})\n\nexport default NodePool\n","import {\n  verify,\n  decodeBase58Check,\n  assertedType\n} from '../utils/crypto'\nimport { encode } from '../tx/builder/helpers'\n\nimport { BigNumber } from 'bignumber.js'\nimport {\n  BASE_VERIFICATION_SCHEMA, CONTRACT_VERIFICATION_SCHEMA, MIN_GAS_PRICE, OBJECT_ID_TX_TYPE,\n  OBJECT_TAG_SIGNED_TRANSACTION, PROTOCOL_VM_ABI,\n  SIGNATURE_VERIFICATION_SCHEMA, TX_TYPE\n} from './builder/schema'\nimport { calculateFee, unpackTx } from './builder'\nimport { NodePool } from '../node-pool'\n\n/**\n * Transaction validator\n * @module @aeternity/aepp-sdk/es/tx/validator\n * @export TransactionValidator\n * @example import TransactionValidator from '@aeternity/aepp-sdk/es/tx/validator'\n */\n\nconst VALIDATORS = {\n  // VALIDATE SIGNATURE\n  signature ({ rlpEncoded, signature, ownerPublicKey, networkId = 'ae_mainnet' }) {\n    const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpEncoded])\n    return verify(txWithNetworkId, signature, decodeBase58Check(assertedType(ownerPublicKey, 'ak')))\n  },\n  // VALIDATE IF ENOUGH FEE\n  insufficientFee ({ minFee, fee }) {\n    return BigNumber(minFee).lte(BigNumber(fee))\n  },\n  // VALIDATE IF TTL VALID\n  expiredTTL ({ ttl, height }) {\n    return BigNumber(ttl).eq(0) || BigNumber(ttl).gte(BigNumber(height))\n  },\n  // Insufficient Balance for Amount plus Fee\n  insufficientBalanceForAmountFee ({ balance, amount = 0, fee }) {\n    return BigNumber(balance).gt(BigNumber(amount).plus(fee))\n  },\n  // Insufficient Balance for Amount\n  insufficientBalanceForAmount ({ balance, amount = 0 }) {\n    return BigNumber(balance).gt(BigNumber(amount))\n  },\n  // IF NONCE USED\n  nonceUsed ({ accountNonce, nonce }) {\n    return BigNumber(nonce).gt(BigNumber(accountNonce))\n  },\n  // IF NONCE TO HIGH\n  nonceHigh ({ accountNonce, nonce }) {\n    return !(BigNumber(nonce).gt(BigNumber(accountNonce).plus(1)))\n  },\n  minGasPrice ({ gasPrice }) {\n    return isNaN(gasPrice) || BigNumber(gasPrice).gte(BigNumber(MIN_GAS_PRICE))\n  },\n  // VM/ABI version validation based on consensus protocol version\n  vmAndAbiVersion ({ ctVersion, abiVersion, consensusProtocolVersion, txType }) {\n    // If not contract tx\n    if (!ctVersion) ctVersion = { abiVersion }\n    const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n    // If protocol not implemented\n    if (!supportedProtocol) return true\n    // If protocol for tx type not implemented\n    const txProtocol = supportedProtocol[txType]\n\n    return !Object.entries(ctVersion)\n      .reduce((acc, [key, value]) =>\n        [...acc, value === undefined ? true : txProtocol[key].includes(parseInt(value))],\n      []).includes(false)\n  }\n}\n\nconst resolveDataForBase = async (chain, { ownerPublicKey }) => {\n  let accountNonce = 0\n  let accountBalance = 0\n  try {\n    const { nonce, balance } = await chain.api.getAccountByPubkey(ownerPublicKey)\n    accountNonce = nonce\n    accountBalance = balance\n  } catch (e) { console.log('We can not get info about this publicKey') }\n  return {\n    height: (await chain.api.getCurrentKeyBlockHeight()).height,\n    balance: accountBalance,\n    accountNonce,\n    ownerPublicKey,\n    ...chain.getNodeInfo()\n  }\n}\n\n// Verification using SCHEMA\nconst verifySchema = (schema, data) => {\n  // Verify through schema\n  return schema.reduce(\n    (acc, [msg, validatorKey, { key, type, txKey }]) => {\n      if (!VALIDATORS[validatorKey](data)) acc.push({ msg: msg(data), txKey, type })\n      return acc\n    },\n    []\n  )\n}\n\n/**\n * Unpack and verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {String} txHash Base64Check transaction hash\n * @param {Object} [options={}] Options\n * @param {String} [options.networkId] networkId Use in signature verification\n * @return {Promise<Object>} Object with verification errors and warnings\n */\nasync function unpackAndVerify (txHash, { networkId } = {}) {\n  const { tx: unpackedTx, rlpEncoded, txType } = unpackTx(txHash)\n\n  if (+unpackedTx.tag === OBJECT_TAG_SIGNED_TRANSACTION) {\n    const { txType, tx } = unpackedTx.encodedTx\n    const signatures = unpackedTx.signatures.map(raw => ({ raw, hash: encode(raw, 'sg') }))\n    const rlpEncodedTx = unpackedTx.encodedTx.rlpEncoded\n\n    return {\n      validation: await this.verifyTx({ tx, signatures, rlpEncoded: rlpEncodedTx }, networkId),\n      tx,\n      signatures,\n      txType\n    }\n  }\n  return {\n    validation: await this.verifyTx({ tx: unpackedTx, rlpEncoded }, networkId),\n    tx: unpackedTx,\n    txType\n  }\n}\n\nconst getOwnerPublicKey = (tx) =>\n  tx[['senderId', 'accountId', 'ownerId', 'callerId', 'oracleId', 'fromId', 'initiator', 'gaId'].find(key => tx[key])].replace('ok_', 'ak_')\n\n/**\n * Verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {Object} [data={}] data TX data object\n * @param {String} [data.tx] tx Transaction hash\n * @param {Array} [data.signatures] signatures Transaction signature's\n * @param {Array} [data.rlpEncoded] rlpEncoded RLP encoded transaction\n * @param {String} networkId networkId Use in signature verification\n * @return {Promise<Array>} Object with verification errors and warnings\n */\nasync function verifyTx ({ tx, signatures, rlpEncoded }, networkId) {\n  networkId = networkId || this.getNetworkId() || 'ae_mainnet'\n  // Fetch data for verification\n  const ownerPublicKey = getOwnerPublicKey(tx)\n  const gas = tx.hasOwnProperty('gas') ? +tx.gas : 0\n  const txType = OBJECT_ID_TX_TYPE[+tx.tag]\n  const resolvedData = {\n    minFee: calculateFee(0, txType, { gas, params: tx, showWarning: false }),\n    ...(await resolveDataForBase(this, { ownerPublicKey })),\n    ...tx,\n    txType\n  }\n  const signatureVerification = signatures && signatures.length\n    ? verifySchema(SIGNATURE_VERIFICATION_SCHEMA, {\n      rlpEncoded,\n      signature: signatures[0].raw,\n      ownerPublicKey,\n      networkId\n    })\n    : []\n  const baseVerification = verifySchema(BASE_VERIFICATION_SCHEMA, resolvedData)\n\n  return [\n    ...baseVerification,\n    ...signatureVerification,\n    ...customVerification(txType, resolvedData)\n  ]\n}\n\n/**\n * Verification for speciific txType\n * @param txType\n * @param data\n * @return {Array}\n */\nfunction customVerification (txType, data) {\n  switch (txType) {\n    case TX_TYPE.contractCreate:\n    case TX_TYPE.contractCall:\n    case TX_TYPE.oracleRegister:\n      return verifySchema(CONTRACT_VERIFICATION_SCHEMA, data)\n    default:\n      return []\n  }\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.url] - Node url\n * @param {Object} [options.internalUrl] - Node internal url\n * @return {Object} Transaction Validator instance\n * @example TransactionValidator({url: 'https://sdk-testnet.aepps.com'})\n */\nconst TransactionValidator = NodePool.compose({\n  methods: {\n    verifyTx,\n    unpackAndVerify\n  }\n})\n\nexport default TransactionValidator\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as R from 'ramda'\nimport Chain from './'\nimport Oracle from '../oracle/node'\nimport formatBalance from '../utils/amount-formatter'\nimport TransactionValidator from '../tx/validator'\nimport NodePool from '../node-pool'\n\n/**\n * ChainNode module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/chain}.\n * @module @aeternity/aepp-sdk/es/chain/node\n * @export ChainNode\n * @example import ChainNode from '@aeternity/aepp-sdk/es/chain/node'\n */\n\nasync function sendTransaction (tx, options = {}) {\n  const { waitMined, verify } = R.merge(this.Chain.defaults, options)\n  // Verify transaction before broadcast\n  if (this.verifyTxBeforeSend || verify) {\n    const { validation, tx: txObject, txType } = await this.unpackAndVerify(tx)\n    if (validation.length) {\n      throw Object.assign(Error('Transaction verification error'), {\n        code: 'TX_VERIFICATION_ERROR',\n        errorData: { validation, tx: txObject, txType },\n        txHash: tx\n      })\n    }\n  }\n\n  try {\n    const { txHash } = await this.api.postTransaction({ tx })\n    return waitMined ? { ...(await this.poll(txHash, options)), rawTx: tx } : { hash: txHash, rawTx: tx }\n  } catch (e) {\n    throw Object.assign(\n      (new Error(e.message)),\n      {\n        rawTx: tx,\n        verifyTx: () => this.unpackAndVerify(tx)\n      }\n    )\n  }\n}\n\nasync function getAccount (address, { height, hash } = {}) {\n  if (height) return this.api.getAccountByPubkeyAndHeight(address, height)\n  if (hash) return this.api.getAccountByPubkeyAndHash(address, hash)\n  return this.api.getAccountByPubkey(address)\n}\n\nasync function balance (address, { height, hash, format = false } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height })\n\n  return format ? formatBalance(balance) : balance.toString()\n}\n\nasync function tx (hash, info = false) {\n  const tx = await this.api.getTransactionByHash(hash)\n  if (['ContractCreateTx', 'ContractCallTx'].includes(tx.tx.type) && info) {\n    try {\n      return { ...tx, ...await this.getTxInfo(hash) }\n    } catch (e) {\n      return tx\n    }\n  }\n  return tx\n}\n\nasync function height () {\n  return (await this.api.getCurrentKeyBlockHeight()).height\n}\n\nasync function pause (duration) {\n  await new Promise(resolve => setTimeout(resolve, duration))\n}\n\nasync function awaitHeight (h, { interval = 5000, attempts = 20 } = {}) {\n  const instance = this\n\n  async function probe (left) {\n    const current = await instance.height()\n    if (current >= h) {\n      return current\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms, current=${current}, h=${h}`)\n  }\n\n  return probe(attempts)\n}\n\nasync function topBlock () {\n  const top = await this.api.getTopBlock()\n  return top[R.head(R.keys(top))]\n}\n\nasync function poll (th, { blocks = 10, interval = 5000 } = {}) {\n  const instance = this\n  const max = await this.height() + blocks\n\n  async function probe () {\n    const tx = await instance.tx(th)\n    if (tx.blockHeight !== -1) {\n      return tx\n    }\n    if (await instance.height() < max) {\n      await pause(interval)\n      return probe()\n    }\n    throw new Error(`Giving up after ${blocks} blocks mined. TxHash ${th}`)\n  }\n\n  return probe()\n}\n\nasync function getTxInfo (hash) {\n  return this.api.getTransactionInfoByHash(hash).then(res => res.callInfo ? res.callInfo : res)\n}\n\nasync function mempool () {\n  return this.api.getPendingTransactions()\n}\n\nasync function getCurrentGeneration () {\n  return this.api.getCurrentGeneration()\n}\n\nasync function getGeneration (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getGenerationByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getGenerationByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockTransactions (hash) {\n  return (await this.api.getMicroBlockTransactionsByHash(hash)).transactions\n}\n\nasync function getKeyBlock (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getKeyBlockByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getKeyBlockByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockHeader (hash) {\n  return this.api.getMicroBlockHeaderByHash(hash)\n}\n\nasync function txDryRun (txs, accounts, top) {\n  return this.api.dryRunTxs({ txs, accounts, top })\n}\n\nasync function getContractByteCode (contractId) {\n  return this.api.getContractCode(contractId)\n}\n\nasync function getName (name) {\n  return this.api.getNameEntryByName(name)\n}\n\n/**\n * ChainNode Stamp\n *\n * This is implementation of {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * composed with {@link module:@aeternity/aepp-sdk/es/contract/node--ContractNodeAPI} and {@link module:@aeternity/aepp-sdk/es/oracle/node--OracleNodeAPI}\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain/node\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} ChainNode instance\n * @example ChainNode({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst ChainNode = Chain.compose(Oracle, TransactionValidator, NodePool, {\n  init ({ verifyTx = false }) {\n    this.verifyTxBeforeSend = verifyTx\n  },\n  methods: {\n    sendTransaction,\n    balance,\n    getAccount,\n    topBlock,\n    tx,\n    height,\n    awaitHeight,\n    poll,\n    getTxInfo,\n    mempool,\n    getCurrentGeneration,\n    getGeneration,\n    getMicroBlockHeader,\n    getMicroBlockTransactions,\n    getKeyBlock,\n    txDryRun,\n    getContractByteCode,\n    getName\n  }\n})\n\nexport default ChainNode\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction module\n * @module @aeternity/aepp-sdk/es/tx/tx\n * @export Transaction\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/tx'\n */\n\nimport * as R from 'ramda'\nimport Tx from './'\n\nimport { buildTx, calculateFee } from './builder'\nimport { MIN_GAS_PRICE, PROTOCOL_VM_ABI, TX_TYPE } from './builder/schema'\nimport { buildContractId, oracleQueryId } from './builder/helpers'\nimport { NodePool } from '../node-pool'\n\nasync function spendTx ({ senderId, recipientId, amount, payload = '' }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.spend, { senderId, ...R.head(arguments), payload })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee,\n      payload\n    }), TX_TYPE.spend)\n    : await this.api.postSpend(R.merge(R.head(arguments), {\n      amount: parseInt(amount),\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      payload\n    }))\n\n  return tx\n}\n\nasync function namePreclaimTx ({ accountId, commitmentId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.namePreClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.namePreClaim)\n    : await this.api.postNamePreclaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameClaimTx ({ accountId, name, nameSalt }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameClaim)\n    : await this.api.postNameClaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameTransferTx ({ accountId, nameId, recipientId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameTransfer, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee }), TX_TYPE.nameTransfer)\n    : await this.api.postNameTransfer(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameUpdateTx ({ accountId, nameId, nameTtl, pointers, clientTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameUpdate, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameUpdate)\n    : await this.api.postNameUpdate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameRevokeTx ({ accountId, nameId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameRevoke, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameRevoke)\n    : await this.api.postNameRevoke(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function contractCreateTx ({ ownerId, code, vmVersion, abiVersion, deposit, amount, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCreate, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return this.nativeMode\n    ? {\n      ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.contractCreate),\n      contractId: buildContractId(ownerId, nonce)\n    }\n    : this.api.postContractCreate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee), gas: parseInt(gas), gasPrice, vmVersion: ctVersion.vmVersion, abiVersion: ctVersion.abiVersion }))\n}\n\nasync function contractCallTx ({ callerId, contractId, abiVersion, amount, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCall, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCall, { senderId: callerId, ...R.head(arguments), gasPrice, abiVersion: ctVersion.abiVersion })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, abiVersion: ctVersion.abiVersion, gasPrice }), TX_TYPE.contractCall)\n    : await this.api.postContractCall(R.merge(R.head(arguments), {\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      gas: parseInt(gas),\n      gasPrice,\n      abiVersion: ctVersion.abiVersion\n    }))\n\n  return tx\n}\n\nasync function oracleRegisterTx ({ accountId, queryFormat, responseFormat, queryFee, oracleTtl, abiVersion }) {\n  const { abiVersion: abi } = this.getVmVersion(TX_TYPE.oracleRegister, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleRegister, { senderId: accountId, ...R.head(arguments), abiVersion: abi })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({\n      accountId,\n      queryFee,\n      abiVersion: abi,\n      fee,\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    }, TX_TYPE.oracleRegister)\n    : await this.api.postOracleRegister({\n      accountId,\n      queryFee,\n      abiVersion: abi,\n      fee: parseInt(fee),\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    })\n\n  return tx\n}\n\nasync function oracleExtendTx ({ oracleId, callerId, oracleTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleExtend, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, fee, oracleTtl, nonce, ttl }, TX_TYPE.oracleExtend)\n    : await this.api.postOracleExtend({ oracleId, fee: parseInt(fee), oracleTtl, nonce, ttl })\n\n  return tx\n}\n\nasync function oraclePostQueryTx ({ oracleId, responseTtl, query, queryTtl, queryFee, senderId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleQuery, { senderId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, query, queryTtl, fee, queryFee, ttl, nonce, senderId }, TX_TYPE.oracleQuery)\n    : await this.api.postOracleQuery({\n      oracleId,\n      responseTtl,\n      query,\n      queryTtl,\n      fee: parseInt(fee),\n      queryFee,\n      ttl,\n      nonce,\n      senderId\n    })\n\n  return { tx, queryId: oracleQueryId(senderId, nonce, oracleId) }\n}\n\nasync function oracleRespondTx ({ oracleId, callerId, responseTtl, queryId, response }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleResponse, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, queryId, response, fee, ttl, nonce }, TX_TYPE.oracleResponse)\n    : await this.api.postOracleRespond({ oracleId, responseTtl, queryId, response, fee: parseInt(fee), ttl, nonce })\n  return tx\n}\n\nasync function channelCloseSoloTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelCloseSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelCloseSolo)\n    : await this.api.postChannelCloseSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSlashTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSlash, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSlash)\n    : await this.api.postChannelSlash(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSettleTx ({ channelId, fromId, initiatorAmountFinal, responderAmountFinal }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSettle, { senderId: fromId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal,\n      responderAmountFinal,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSettle)\n    : await this.api.postChannelSettle(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal: parseInt(initiatorAmountFinal),\n      responderAmountFinal: parseInt(responderAmountFinal),\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSnapshotSoloTx ({ channelId, fromId, payload }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSnapshotSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSnapshotSolo)\n    : await this.api.postChannelSnapshotSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function gaAttachTx ({ ownerId, code, vmVersion, abiVersion, authFun, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.gaAttach, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return {\n    ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.gaAttach),\n    contractId: buildContractId(ownerId, nonce)\n  }\n}\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n *\n * @param {string} txType Type of transaction\n * @param {object} vmAbi Object with vm and abi version fields\n * @return {object} Object with vm/abi version ({ vmVersion: number, abiVersion: number })\n */\nfunction getVmVersion (txType, { vmVersion, abiVersion } = {}) {\n  const version = this.getNodeInfo().consensusProtocolVersion\n  const supportedProtocol = PROTOCOL_VM_ABI[version]\n  if (!supportedProtocol) throw new Error('Not supported consensus protocol version')\n  const protocolForTX = supportedProtocol[txType]\n  if (!protocolForTX) throw new Error('Not supported tx type')\n\n  const ctVersion = {\n    abiVersion: abiVersion !== undefined ? abiVersion : protocolForTX.abiVersion[0],\n    vmVersion: vmVersion !== undefined ? vmVersion : protocolForTX.vmVersion[0]\n  }\n  if (protocolForTX.vmVersion.length && !R.contains(ctVersion.vmVersion, protocolForTX.vmVersion)) throw new Error(`VM VERSION ${ctVersion.vmVersion} do not support by this node. Supported: [${protocolForTX.vmVersion}]`)\n  if (!R.contains(ctVersion.abiVersion, protocolForTX.abiVersion)) throw new Error(`ABI VERSION ${ctVersion.abiVersion} do not support by this node. Supported: [${protocolForTX.abiVersion}]`)\n\n  return ctVersion\n}\n\n/**\n * Compute the absolute ttl by adding the ttl to the current height of the chain\n *\n * @param {number} ttl\n * @param {boolean} relative ttl is absolute or relative(default: true(relative))\n * @return {number} Absolute Ttl\n */\nasync function calculateTtl (ttl = 0, relative = true) {\n  if (ttl === 0) return 0\n  if (ttl < 0) throw new Error('ttl must be greater than 0')\n\n  if (relative) {\n    const { height } = await this.api.getCurrentKeyBlock()\n    return +(height) + ttl\n  }\n  return ttl\n}\n\n/**\n * Get the next nonce to be used for a transaction for an account\n *\n * @param {string} accountId\n * @param {number} nonce\n * @return {number} Next Nonce\n */\nasync function getAccountNonce (accountId, nonce) {\n  if (nonce) return nonce\n  const { nonce: accountNonce } = await this.api.getAccountByPubkey(accountId).catch(() => ({ nonce: 0 }))\n  return accountNonce + 1\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n *\n * @param {String} txType Type of transaction\n * @param {Object} params Object which contains all tx data\n * @return {Object} { ttl, nonce, fee } Object with account nonce, absolute ttl and transaction fee\n */\nasync function prepareTxParams (txType, { senderId, nonce: n, ttl: t, fee: f, gas, absoluteTtl }) {\n  const account = await this.getAccount(senderId).catch(e => ({ nonce: 0 }))\n  // Is GA account\n  if (account.contractId) {\n    n = 0\n  } else {\n    n = n || (account.nonce + 1)\n  }\n  const ttl = await (calculateTtl.bind(this)(t, !absoluteTtl))\n  const fee = calculateFee(f, txType, { showWarning: this.showWarning, gas, params: R.merge(R.last(arguments), { nonce: n, ttl }) })\n  return { fee, ttl, nonce: n }\n}\n\n/**\n * Transaction Stamp\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link module:@aeternity/aepp-sdk/es/Node}.\n * This stamp provide ability to create native transaction's,\n * or transaction's using Node API.\n * As there is no built-in security between Node and client communication,\n * creating transaction using {@link module:@aeternity/aepp-sdk/es/Node} API\n * must never be used for production but can be very useful to verify other\n * implementations.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Boolean} [options.nativeMode=true] options.nativeMode - Use Native build of transaction's\n * @param {String} options.url - Node url\n * @param {String} options.internalUrl - Node internal url\n * @return {Object} Transaction instance\n * @example Transaction({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst Transaction = NodePool.compose(Tx, {\n  init ({ nativeMode = true, showWarning = false }) {\n    this.nativeMode = nativeMode\n    this.showWarning = showWarning\n  },\n  props: {\n    nativeMode: null,\n    showWarning: null\n  },\n  methods: {\n    spendTx,\n    namePreclaimTx,\n    nameClaimTx,\n    nameTransferTx,\n    nameUpdateTx,\n    nameRevokeTx,\n    contractCreateTx,\n    contractCallTx,\n    prepareTxParams,\n    oracleRegisterTx,\n    oracleExtendTx,\n    oraclePostQueryTx,\n    oracleRespondTx,\n    channelCloseSoloTx,\n    channelSlashTx,\n    channelSettleTx,\n    channelSnapshotSoloTx,\n    gaAttachTx,\n    getAccountNonce,\n    getVmVersion\n  }\n})\n\nexport default Transaction\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory'\n */\n\nimport Account from './'\nimport * as Crypto from '../utils/crypto'\nimport { isHex } from '../utils/string'\nimport { decode } from '../tx/builder/helpers'\n\nconst secrets = new WeakMap()\n\nasync function sign (data) {\n  return Promise.resolve(Crypto.sign(data, secrets.get(this).secretKey))\n}\n\nasync function address (format = Crypto.ADDRESS_FORMAT.api) {\n  return Promise.resolve(Crypto.formatAddress(format, secrets.get(this).publicKey))\n}\n\nfunction setSecret (keyPair) {\n  secrets.set(this, {\n    secretKey: Buffer.isBuffer(keyPair.secretKey) ? keyPair.secretKey : Buffer.from(keyPair.secretKey, 'hex'),\n    publicKey: keyPair.publicKey\n  })\n}\n\nfunction validateKeyPair (keyPair) {\n  if (!keyPair || typeof keyPair !== 'object') throw new Error('KeyPair must be an object')\n  if (keyPair.pub && keyPair.priv) {\n    keyPair = { publicKey: keyPair.pub, secretKey: keyPair.priv }\n  }\n  if (!keyPair.secretKey || !keyPair.publicKey) throw new Error('KeyPair must must have \"secretKey\", \"publicKey\" properties')\n  if (typeof keyPair.publicKey !== 'string' || keyPair.publicKey.indexOf('ak_') === -1) throw new Error('Public Key must be a base58c string with \"ak_\" prefix')\n  if (\n    !Buffer.isBuffer(keyPair.secretKey) &&\n    (typeof keyPair.secretKey === 'string' && !isHex(keyPair.secretKey))\n  ) throw new Error('Secret key must be hex string or Buffer')\n\n  const pubBuffer = Buffer.from(decode(keyPair.publicKey, 'ak'))\n  if (!Crypto.isValidKeypair(Buffer.from(keyPair.secretKey, 'hex'), pubBuffer)) throw new Error('Invalid Key Pair')\n}\n\n/**\n * In-memory `Account` factory\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\nconst MemoryAccount = Account.compose({\n  init ({ keypair }) {\n    validateKeyPair(keypair)\n    if (keypair.hasOwnProperty('priv') && keypair.hasOwnProperty('pub')) {\n      keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n      console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n    }\n\n    this.setSecret(keypair)\n  },\n  methods: { sign, address, setSecret }\n})\n\nexport default MemoryAccount\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts Selector module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/accounts}.\n * @module @aeternity/aepp-sdk/es/account/selector\n * @export Account\n * @example import Selector from '@aeternity/aepp-sdk/es/account/selector'\n */\n\nimport Account from './'\nimport required from '@stamp/required'\nimport { assertedType } from '../utils/crypto'\n\nasync function sign (data, { onAccount } = {}) {\n  if (onAccount && !assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n  return this.signWith(onAccount || this.Selector.address, data)\n}\n\nasync function address ({ onAccount } = {}) {\n  if (onAccount) {\n    if (!assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n    if (!this.accounts[onAccount]) throw Error(`Account for ${onAccount} not available`)\n    return Promise.resolve(onAccount)\n  }\n  if (this.Selector.address) return Promise.resolve(this.Selector.address)\n  throw new Error('You don\\'t have selected account')\n}\n\n/**\n * Select specific account\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @instance\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to select\n * @example selectAccount('ak_xxxxxxxx')\n */\nfunction selectAccount (address) {\n  if (!address || !assertedType(address, 'ak', true)) throw new Error(`Invalid account address`)\n  if (!this.accounts[address]) throw Error(`Account for ${address} not available`)\n  this.Selector.address = address\n}\n\n/**\n * Selector Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Account} Account instance\n * @example Selector()\n */\nconst Selector = Account.compose({\n  async init ({ address }) {\n    if (!address) address = Object.keys(this.accounts)[0]\n    if (address && !assertedType(address, 'ak', true)) throw new Error(`Invalid account address`)\n    this.Selector.address = address\n  },\n  methods: { sign, address, selectAccount },\n  deepProps: {\n    Selector: {}\n  }\n}, required({\n  methods: { signWith: required }\n}))\n\nexport default Selector\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts module\n * @module @aeternity/aepp-sdk/es/accounts\n * @export Accounts\n * @example import Accounts from '@aeternity/aepp-sdk/es/accounts'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from './utils/async-init'\nimport * as R from 'ramda'\nimport MemoryAccount from './account/memory'\nimport Selector from './account/selector'\nimport { envKeypair, generateKeyPair } from './utils/crypto'\n\n/**\n * Select specific account\n * @deprecated\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (keypair: {publicKey: String, secretKey: String}) => Void\n * @param {Object} keypair - Key pair to use\n * @param {String} keypair.publicKey - Public key\n * @param {String} keypair.secretKey - Private key\n * @return {Void}\n * @example setKeypair(keypair)\n */\nfunction setKeypair (keypair) {\n  const acc = this.accounts[this.Selector.address] || this._acc\n  if (keypair.hasOwnProperty('priv') && keypair.hasOwnProperty('pub')) {\n    keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n    console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n  }\n  acc.setSecret(keypair)\n  this.accounts[keypair.publicKey] = acc\n  delete this.accounts[this.Selector.address]\n  this.selectAccount(keypair.publicKey)\n}\n\n/**\n * Sign data blob with specific key\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (address: String, data: String) => data: Promise[String], throws: Error\n * @param {String} address - Public key of account to sign with\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\nasync function signWith (address, data) {\n  const account = this.accounts[address]\n\n  if (account === undefined) {\n    throw Error(`Account for ${address} not available`)\n  }\n\n  return account.sign(data)\n}\n\n/**\n * Add specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (account: Account, { select: Boolean }) => Void\n * @param {Object} account - Account instance\n * @param {Object} [options={}] - Options\n * @param {Boolean} [options.select] - Select account\n * @return {Void}\n * @example addAccount(account)\n */\nasync function addAccount (account, { select } = {}) {\n  const address = await account.address()\n  this.accounts[address] = account\n  if (select) this.selectAccount(address)\n}\n\n/**\n * Remove specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to remove\n * @return {Void}\n * @example removeAccount(address)\n */\nfunction removeAccount (address) {\n  if (this.accounts[address]) delete this.accounts[address]\n  if (this.Selector.address === address) this.Selector.address = undefined\n}\n\n/**\n * Get accounts addresses\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype () => String[]\n * @return {String[]}\n * @example addresses()\n */\nfunction addresses () {\n  return Object.keys(this.accounts)\n}\n\n/**\n * Accounts Stamp\n *\n * The purpose of the Accounts Stamp is to wrap up\n * {@link module:@aeternity/aepp-sdk/es/account--Account} objects and provide a\n * common interface to all of them. Accounts are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @return {Object} Accounts instance\n * @example\n * const accounts = await Accounts({ accounts: [ MemmoryAccount({ keypair: 'keypair_object' }) ] })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\nconst Accounts = stampit(AsyncInit, {\n  async init ({ accounts = [], keypair }) { // Deprecated. TODO Remove `keypair` param\n    this.accounts = R.fromPairs(await Promise.all(accounts.map(async a => [await a.address(), a])))\n    keypair = keypair || envKeypair(process.env, true)\n    if (keypair) {\n      await this.addAccount(await MemoryAccount({ keypair }), { select: !this.Selector.address })\n    }\n    // @Todo Remove after removing depricated `setKeypair` fn.\n    //  Prevent BREAKING CHANGES\n    //  Pre-init memoryAccount object to prevent async operation in `setKeypair` function\n    this._acc = await MemoryAccount({ keypair: generateKeyPair() })\n  },\n  props: {\n    accounts: {}\n  },\n  methods: { signWith, addAccount, removeAccount, setKeypair, addresses }\n}, Selector)\n\nexport default Accounts\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import Aens from '@aeternity/aepp-sdk/es/ae/aens'\n */\n\nimport * as R from 'ramda'\nimport { encodeBase58Check, salt } from '../utils/crypto'\nimport { commitmentHash } from '../tx/builder/helpers'\nimport Ae from './'\n\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} nameId\n * @param {String} account\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function transfer (nameId, account, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameTransferTx = await this.nameTransferTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt),\n    recipientId: account\n  }))\n\n  return this.send(nameTransferTx, opt)\n}\n\n/**\n * Revoke a domain\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} nameId\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function revoke (nameId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameRevokeTx = await this.nameRevokeTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt)\n  }))\n\n  return this.send(nameRevokeTx, opt)\n}\n\n/**\n * What kind of a hash is this? If it begins with 'ak_' it is an\n * account key, if with 'ok_' it's an oracle key.\n *\n * @param s - the hash.\n * returns the type, or throws an exception if type not found.\n */\nfunction classify (s) {\n  const keys = {\n    ak: 'account_pubkey',\n    ok: 'oracle_pubkey'\n  }\n\n  if (!s.match(/^[a-z]{2}_.+/)) {\n    throw Error('Not a valid hash')\n  }\n\n  const klass = s.substr(0, 2)\n  if (klass in keys) {\n    return keys[klass]\n  } else {\n    throw Error(`Unknown class ${klass}`)\n  }\n}\n\n/**\n * Update an aens entry\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param nameId domain hash\n * @param target new target\n * @param options\n * @return {Object}\n */\nasync function update (nameId, target, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const nameUpdateTx = await this.nameUpdateTx(R.merge(opt, {\n    nameId: nameId,\n    accountId: await this.address(opt),\n    pointers: [R.fromPairs([['id', target], ['key', classify(target)]])]\n  }))\n\n  return this.send(nameUpdateTx, opt)\n}\n\n/**\n * Query the status of an AENS registration\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @return {Promise<Object>}\n */\nasync function query (name, opt = {}) {\n  const o = await this.getName(name)\n  const nameId = o.id\n\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || {},\n    update: async (target, options) => {\n      return {\n        ...(await this.aensUpdate(nameId, target, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    transfer: async (account, options) => {\n      return {\n        ...(await this.aensTransfer(nameId, account, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    revoke: async (options) => this.aensRevoke(nameId, R.merge(opt, options))\n  }))\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {String} salt\n * @param {Record} [options={}]\n * @return {Promise<Object>} the result of the claim\n */\nasync function claim (name, salt, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const claimTx = await this.nameClaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name: `nm_${encodeBase58Check(Buffer.from(name))}`\n  }))\n\n  const result = await this.send(claimTx, opt)\n\n  return {\n    ...result,\n    ...opt.waitMined && await this.aensQuery(name, opt)\n  }\n}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @param {Record} [options={}]\n * @return {Promise<Object>}\n */\nasync function preclaim (name, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const _salt = salt()\n  const height = await this.height()\n  const hash = await commitmentHash(name, _salt)\n\n  const preclaimTx = await this.namePreclaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    commitmentId: hash\n  }))\n\n  const result = await this.send(preclaimTx, opt)\n\n  return Object.freeze({\n    ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options, onAccount: opt.onAccount }),\n    salt: _salt,\n    commitmentId: hash\n  })\n}\n\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke\n  },\n  deepProps: { Ae: { defaults: {\n    clientTtl: 1,\n    nameTtl: 50000 // aec_governance:name_claim_max_expiration() => 50000\n  } } }\n})\n\nexport default Aens\n","import axios from 'axios'\nimport JsonBig from './json-big'\nimport * as R from 'ramda'\nimport stampit from '@stamp/it'\n\nasync function get (url, options) {\n  return processResponse(\n    axios.get(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function post (url, body, options) {\n  return processResponse(\n    axios.post(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function put (url, body, options) {\n  return processResponse(\n    axios.put(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function _delete (url, options) {\n  return processResponse(\n    axios.delete(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nfunction changeBaseUrl (newUrl) {\n  this.baseUrl = newUrl\n}\n\nconst processResponse = async (res) => {\n  try {\n    return (await res).data\n  } catch (e) {\n    if (!e.response) throw e\n    throw Object.assign(\n      Error(`Http request for ${e.config.url} failed with status code ${e.response.status}. Status: ${e.response.statusText}. \\nError data: ${JSON.stringify(e.response.data)}`),\n      { data: e.response.data }\n    )\n  }\n}\n\nconst Http = stampit({\n  init ({ baseUrl }) {\n    this.baseUrl = baseUrl\n  },\n  methods: {\n    changeBaseUrl,\n    get,\n    post,\n    put,\n    'delete': _delete\n  },\n  props: {\n    httpConfig: {\n      headers: { 'Content-Type': 'application/json' },\n      transformResponse: [(data) => {\n        try {\n          return JsonBig.parse(data)\n        } catch (e) {\n          return data\n        }\n      }]\n    }\n  }\n})\n\nexport default Http\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract Base module\n * @module @aeternity/aepp-sdk/es/contract\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/contract'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Contract Stamp\n *\n * This stamp include api call's related to contract functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n */\nconst ContractBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'contractEncodeCallDataAPI',\n        'contractDecodeDataAPI',\n        'compileContractAPI',\n        'contractDecodeCallDataBySourceAPI',\n        'contractDecodeCallDataByCodeAPI',\n        'contractGetACI',\n        'setCompilerUrl',\n        'getCompilerVersion',\n        'contractDecodeCallResultAPI'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    contractEncodeCallDataAPI: required,\n    contractDecodeDataAPI: required,\n    compileContractAPI: required,\n    contractGetACI: required,\n    setCompilerUrl: required,\n    getCompilerVersion: required,\n    contractDecodeCallResultAPI: required\n  }\n}))\n\n/**\n * Encode contract data\n * @function contractEncodeCallDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, name: String, args: Array) => callData: Promise[String]\n * @param {String} source - Contract source code\n * @param {String} name - Function name\n * @param {Array} args - Function argument's\n * @return {String} - Contract encoded data\n */\n\n/**\n * Decode data\n * @function contractDecodeDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (type: String, data: String) => decodedResult: Promise[String]\n * @param {String} type - Contract call result type\n * @param {String} data - Encoded contract call result\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode contract call result data\n * @function contractDecodeCallResultAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, fn: String, callValue: String, callResult: String) => decodedResult: Promise[String]\n * @param {String} source - Contract source\n * @param {String} fn - Fn name\n * @param {String} callValue - result data (cb_das...)\n * @param {String} callResult - contract call result status('ok', 'revert', ...)\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode call data by source\n * @function contractDecodeCallDataBySourceAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, function: String, callData: String) => decodedResult: Promise[String]\n * @param {String} source - contract source\n * @param {String} function - function name\n * @param {String} callData - Encoded contract call data\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Decode call data by bytecode\n * @function contractDecodeCallDataByCodeAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, callData: String) => decodedResult: Promise[String]\n * @param {String} code - contract byte code\n * @param {String} callData - Encoded contract call data\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Compile contract\n * @function compileContractAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, options?: Object) => compiledContract: Object\n * @param {String} code - Contract source code\n * @param {Object} [options={}] - Options\n * @return {Object} Object which contain bytecode of contract\n */\n\n/**\n * Set compiler url\n * @function setCompilerUrl\n * @instance\n * @abstract\n * @category async\n * @rtype (url: String) => void\n * @param {String} url - Compiler url\n * @return {void}\n */\n\n/**\n * Get Compiler Version\n * @function getCompilerVersion\n * @instance\n * @abstract\n * @category async\n * @rtype () => String\n * @return {String} Compiler version\n */\n\nexport default ContractBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/contract}.\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerAPI\n * @example import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler'\n */\n\nimport Http from '../utils/http'\nimport ContractBase from './index'\nimport semverSatisfies from '../utils/semver-satisfies'\nimport AsyncInit from '../utils/async-init'\n\nasync function getCompilerVersion (options = {}) {\n  return this.http\n    .get('/version', options)\n    .then(({ version }) => version)\n}\n\nasync function contractEncodeCallDataAPI (source, name, args = [], options = {}) {\n  this.isInit()\n  return this.http\n    .post('/encode-calldata', { source, 'function': name, arguments: args }, options)\n    .then(({ calldata }) => calldata)\n}\n\nasync function contractDecodeCallDataByCodeAPI (bytecode, calldata, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/bytecode', { bytecode, calldata }, options)\n}\n\nasync function contractDecodeCallDataBySourceAPI (source, fn, callData, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/source', { 'function': fn, source, calldata: callData }, options)\n}\n\nasync function contractDecodeCallResultAPI (source, fn, callValue, callResult, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-call-result', { 'function': fn, source, 'call-result': callResult, 'call-value': callValue }, options)\n}\n\nasync function contractDecodeDataAPI (type, data, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-data', { data, 'sophia-type': type }, options)\n    .then(({ data }) => data)\n}\n\nasync function compileContractAPI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/compile', { code, options }, options)\n    .then(({ bytecode }) => bytecode)\n}\n\nasync function contractGetACI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/aci', { code, options }, options)\n}\n\nasync function setCompilerUrl (url) {\n  this.http.changeBaseUrl(url)\n  this.compilerVersion = null\n  await this.checkCompatibility()\n}\n\nasync function checkCompatibility (force = false) {\n  this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n  if (!this.compilerVersion && !force) throw new Error('Compiler do not respond')\n  if (this.compilerVersion && !semverSatisfies(this.compilerVersion.split('-')[0], COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n    const version = this.compilerVersion\n    this.compilerVersion = null\n    throw new Error(`Unsupported compiler version ${version}. ` +\n      `Supported: >= ${COMPILER_GE_VERSION} < ${COMPILER_LT_VERSION}`)\n  }\n}\n\nfunction isInit () {\n  if (this.compilerVersion === null) throw Error('Compiler not defined')\n  return true\n}\n\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerAPI({ compilerUrl: 'COMPILER_URL' })\n */\nconst ContractCompilerAPI = AsyncInit.compose(ContractBase, {\n  async init ({ compilerUrl = this.compilerUrl }) {\n    this.http = Http({ baseUrl: compilerUrl })\n    await this.checkCompatibility(true)\n  },\n  methods: {\n    contractEncodeCallDataAPI,\n    contractDecodeDataAPI,\n    compileContractAPI,\n    contractGetACI,\n    contractDecodeCallDataByCodeAPI,\n    contractDecodeCallDataBySourceAPI,\n    contractDecodeCallResultAPI,\n    setCompilerUrl,\n    getCompilerVersion,\n    isInit,\n    checkCompatibility\n  },\n  props: {\n    compilerVersion: null\n  }\n})\n\nconst COMPILER_GE_VERSION = '3.1.0'\nconst COMPILER_LT_VERSION = '4.0.0'\n\nexport default ContractCompilerAPI\n","/* eslint-disable no-unused-vars */\nimport Joi from 'joi-browser'\n\nexport const SOPHIA_TYPES = [\n  'int',\n  'string',\n  'tuple',\n  'address',\n  'bool',\n  'list',\n  'map',\n  'record',\n  'option',\n  'oracle',\n  'oracleQuery',\n  'hash',\n  'signature',\n  'bytes',\n  'variant'\n].reduce((acc, type) => ({ ...acc, [type]: type }), {})\n\nexport function injectVars (t, aciType) {\n  const [[baseType, generic]] = Object.entries(aciType.typedef)\n  const [[_, varianValue]] = Object.entries(t)\n  switch (baseType) {\n    case SOPHIA_TYPES.variant:\n      return {\n        [baseType]: generic.map(el => {\n          const [tag, gen] = Object.entries(el)[0]\n          return {\n            [tag]: gen.map(type => {\n              const index = aciType.vars.map(e => e.name).indexOf(type)\n              return index === -1\n                ? type\n                : varianValue[index]\n            })\n          }\n        })\n      }\n  }\n}\n\n/**\n * Ling Type Defs\n * @param t\n * @param bindings\n * @return {Object}\n */\nexport function linkTypeDefs (t, bindings) {\n  const [_, typeDef] = typeof t === 'object' ? Object.keys(t)[0].split('.') : t.split('.')\n  const aciType = [\n    ...bindings.typedef,\n    { name: 'state', typedef: bindings.state, vars: [] }\n  ].find(({ name }) => name === typeDef)\n  if (aciType.vars.length) {\n    aciType.typedef = injectVars(t, aciType)\n  }\n\n  return aciType.typedef\n}\n\n/**\n * Parse sophia type\n * @param type\n * @param returnType\n * @return {Object}\n */\nexport function readType (type, { bindings } = {}) {\n  let [t] = Array.isArray(type) ? type : [type]\n\n  // Link State and typeDef\n  if (\n    (typeof t === 'string' && t.indexOf(bindings.contractName) !== -1) ||\n    (typeof t === 'object' && Object.keys(t)[0] && Object.keys(t)[0].indexOf(bindings.contractName) !== -1)\n  ) {\n    t = linkTypeDefs(t, bindings)\n  }\n\n  // Map, Tuple, List, Record, Bytes\n  if (typeof t === 'object') {\n    const [[baseType, generic]] = Object.entries(t)\n    return { t: baseType, generic }\n  }\n  // Base types\n  if (typeof t === 'string') return { t }\n}\n\n// FUNCTION ARGUMENTS TRANSFORMATION ↓↓↓\n\n/**\n * Transform JS type to Sophia-type\n * @param type\n * @param value\n * @param bindings\n * @return {string}\n */\nexport async function transform (type, value, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.string:\n      return `\"${value}\"`\n    case SOPHIA_TYPES.list:\n      return `[${await Promise.all(value.map(async el => transform(generic, el, { bindings })))}]`\n    case SOPHIA_TYPES.tuple:\n      return `(${await Promise.all(value.map(async (el, i) => transform(generic[i], el, {\n        bindings\n      })))})`\n    case SOPHIA_TYPES.option:\n      const optionV = await value.catch(e => undefined)\n      return optionV === undefined ? 'None' : `Some(${await transform(generic, optionV, {\n        bindings\n      })})`\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return `#${typeof value === 'string' ? value : Buffer.from(value).toString('hex')}`\n    case SOPHIA_TYPES.record:\n      return `{${await generic.reduce(\n        async (acc, { name, type }, i) => {\n          acc = await acc\n          acc += `${i !== 0 ? ',' : ''}${name} = ${await transform(type, value[name], {\n            bindings\n          })}`\n          return acc\n        },\n        ''\n      )}}`\n    case SOPHIA_TYPES.map:\n      return transformMap(value, generic, { bindings })\n    case SOPHIA_TYPES.variant:\n      return transformVariant(value, generic, { bindings })\n  }\n\n  return `${value}`\n}\n\nasync function transformVariant (value, generic, { bindings }) {\n  const [[variant, variantArgs]] = typeof value === 'string' ? [[value, []]] : Object.entries(value)\n  const [[v, type]] = Object.entries(generic.find(o => Object.keys(o)[0].toLowerCase() === variant.toLowerCase()))\n  return `${v}${!type.length\n    ? ''\n    : `(${await Promise.all(variantArgs.slice(0, type.length).map(async (el, i) => transform(type[i], el, {\n      bindings\n    })))})`\n  }`\n}\n\nexport async function transformMap (value, generic, { bindings }) {\n  if (value instanceof Map) {\n    value = Array.from(value.entries())\n  }\n  if (!Array.isArray(value) && value instanceof Object) {\n    value = Object.entries(value)\n  }\n\n  return `{${await value\n    .reduce(\n      async (acc, [key, value], i) => {\n        acc = await acc\n        if (i !== 0) acc += ','\n        acc += `[${await transform(generic[0], key, {\n          bindings\n        })}] = ${await transform(generic[1], value, { bindings })}`\n        return acc\n      },\n      ``\n    )\n  }}`\n}\n\n// FUNCTION RETURN VALUE TRANSFORMATION ↓↓↓\n\n/**\n * Transform decoded data to JS type\n * @param aci\n * @param result\n * @param transformDecodedData\n * @return {*}\n */\nexport function transformDecodedData (aci, result, { skipTransformDecoded = false, addressPrefix = 'ak', bindings } = {}) {\n  if (skipTransformDecoded) return result\n  const { t, generic } = readType(aci, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.bool:\n      return !!result\n    case SOPHIA_TYPES.address:\n      return result === 0\n        ? 0\n        : result\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return result.split('#')[1]\n    case SOPHIA_TYPES.map:\n      const [keyT, valueT] = generic\n      return result\n        .reduce(\n          (acc, [key, val]) => {\n            key = transformDecodedData(keyT, key, { bindings })\n            val = transformDecodedData(valueT, val, { bindings })\n            acc.push([key, val])\n            return acc\n          },\n          []\n        )\n    case SOPHIA_TYPES.option:\n      if (result === 'None') return undefined\n      const [[variantType, [value]]] = Object.entries(result)\n      return variantType === 'Some' ? transformDecodedData(generic, value, { bindings }) : undefined\n    case SOPHIA_TYPES.list:\n      return result.map((value) => transformDecodedData(generic, value, { bindings }))\n    case SOPHIA_TYPES.tuple:\n      return result.map((value, i) => { return transformDecodedData(generic[i], value, { bindings }) })\n    case SOPHIA_TYPES.record:\n      const genericMap = generic.reduce((acc, val) => ({ ...acc, [val.name]: { type: val.type } }), {})\n      return Object.entries(result).reduce(\n        (acc, [name, value]) =>\n          ({\n            ...acc,\n            [name]: transformDecodedData(genericMap[name].type, value, { bindings })\n          }),\n        {}\n      )\n  }\n  return result\n}\n\n// FUNCTION ARGUMENTS VALIDATION ↓↓↓\n\n/**\n * Prepare Joi validation schema for sophia types\n * @param type\n * @param bindings\n * @return {Object} JoiSchema\n */\nexport function prepareSchema (type, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  if (!Object.keys(SOPHIA_TYPES).includes(t)) t = SOPHIA_TYPES.address // Handle Contract address transformation\n  switch (t) {\n    case SOPHIA_TYPES.int:\n      return Joi.number().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.variant:\n      return Joi.alternatives().try([\n        Joi.string().valid(\n          ...generic.reduce((acc, el) => {\n            const [[t, g]] = Object.entries(el)\n            if (!g || !g.length) acc.push(t)\n            return acc\n          }, [])\n        ),\n        Joi.object(generic\n          .reduce(\n            (acc, el) => {\n              const variant = Object.keys(el)[0]\n              return { ...acc, [variant]: Joi.array() }\n            },\n            {})\n        ).or(...generic.map(e => Object.keys(e)[0]))\n      ])\n    case SOPHIA_TYPES.string:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.address:\n      return Joi.string().regex(/^(ak_|ct_|ok_|oq_)/).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bool:\n      return Joi.boolean().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.list:\n      return Joi.array().items(prepareSchema(generic, { bindings })).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.tuple:\n      return Joi.array().ordered(generic.map(type => prepareSchema(type, { bindings }).required())).label('Tuple argument').error(getJoiErrorMsg)\n    case SOPHIA_TYPES.record:\n      return Joi.object(\n        generic.reduce((acc, { name, type }) => ({ ...acc, [name]: prepareSchema(type, { bindings }) }), {})\n      ).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.hash:\n      return JoiBinary.binary().bufferCheck(32).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bytes:\n      return JoiBinary.binary().bufferCheck(generic).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.signature:\n      return JoiBinary.binary().bufferCheck(64).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.option:\n      return Joi.object().type(Promise).error(getJoiErrorMsg)\n    // @Todo Need to transform Map to Array of arrays before validating it\n    // case SOPHIA_TYPES.map:\n    //   return Joi.array().items(Joi.array().ordered(generic.map(type => prepareSchema(type))))\n    default:\n      return Joi.any()\n  }\n}\n\n/**\n * Parse Joi validation error message\n * @param errors\n * @return {Object} JoiError\n */\nexport function getJoiErrorMsg (errors) {\n  return errors.map(err => {\n    const { path, type, context } = err\n    let value = context.hasOwnProperty('value') ? context.value : context.label\n    value = typeof value === 'object' ? JSON.stringify(value).slice(1).slice(0, -1) : value\n    switch (type) {\n      case 'string.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a string` })\n      case 'number.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a number` })\n      case 'boolean.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a boolean` })\n      case 'array.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a array` })\n      case 'object.base':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a object` })\n      case 'object.type':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a ${context.type}` })\n      case 'binary.bufferCheck':\n        return ({\n          ...err,\n          message: `Value '${Buffer.from(value).toString('hex')}' at path: [${path}] not a ${context.size} bytes`\n        })\n      default:\n        return err\n    }\n  })\n}\n\n/**\n * Custom Joi Validator for binary type\n */\nconst JoiBinary = Joi.extend((joi) => ({\n  name: 'binary',\n  base: joi.any(),\n  pre (value, state, options) {\n    if (options.convert && typeof value === 'string') {\n      try {\n        return Buffer.from(value, 'hex')\n      } catch (e) { return undefined }\n    }\n\n    return Buffer.from(value)\n  },\n  rules: [\n    {\n      name: 'bufferCheck',\n      params: {\n        size: joi.number().required()\n      },\n      validate (params, value, state, options) {\n        value = value === 'string' ? Buffer.from(value, 'hex') : Buffer.from(value)\n        if (!Buffer.isBuffer(value)) {\n          return this.createError('binary.base', { value }, state, options)\n        }\n        if (value.length !== params.size) {\n          return this.createError('binary.bufferCheck', { value, size: params.size }, state, options)\n        }\n\n        return value\n      }\n    }\n  ]\n}))\n\n/**\n * Validation contract function arguments\n * @param aci\n * @param params\n */\nexport function validateArguments (aci, params) {\n  const validationSchema = Joi.array().ordered(\n    aci.arguments\n      .map(({ type }, i) => prepareSchema(type, { bindings: aci.bindings }).label(`[${params[i]}]`))\n  ).label('Argument')\n  const { error } = Joi.validate(params, validationSchema, { abortEarly: false })\n  if (error) {\n    throw error\n  }\n}\n","import * as R from 'ramda'\n\n/**\n * Get function schema from contract ACI object\n * @param {Object} aci Contract ACI object\n * @param {String} name Function name\n * @return {Object} function ACI\n */\nexport function getFunctionACI (aci, name) {\n  const fn = aci.functions.find(f => f.name === name)\n  if (!fn && name !== 'init') throw new Error(`Function ${name} doesn't exist in contract`)\n\n  return {\n    ...fn,\n    bindings: {\n      state: aci.state,\n      typedef: aci.type_defs,\n      contractName: aci.name\n    }\n  }\n}\n\n/**\n * Build contract methods base on ACI\n * @return {Object} Contract instance methods\n */\nexport const buildContractMethods = (instance) => () => ({\n  ...instance.aci ? {\n    init () {\n      const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n      const { opt, args } = parseArguments(aciArgs)(arguments)\n      return instance.deploy(args, opt)\n    }\n  } : {},\n  ...instance.aci\n    ? instance\n      .aci\n      .functions\n      .reduce(\n        (acc, { name, arguments: aciArgs, stateful }) => ({\n          ...acc,\n          [name]: Object.assign(\n            function () {\n              const { opt, args } = parseArguments(aciArgs)(arguments)\n              if (name === 'init') return instance.deploy(args, opt)\n              return instance.call(name, args, { callStatic: !stateful, ...opt })\n            },\n            {\n              get () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                return instance.call(name, args, { ...opt, callStatic: true })\n              },\n              send () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                if (name === 'init') return instance.deploy(args, opt)\n                return instance.call(name, args, { ...opt, callStatic: false })\n              }\n            }\n          )\n        }),\n        {}\n      )\n    : {}\n})\n\nconst parseArguments = (aciArgs = []) => (args) => ({\n  opt: args.length > aciArgs.length ? R.last(args) : {},\n  args: Object.values(args).slice(0, aciArgs.length)\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export ContractACI\n * @example import ContractACI from '@aeternity/aepp-sdk/es/contract/aci'\n */\n\nimport * as R from 'ramda'\n\nimport { validateArguments, transform, transformDecodedData } from './transformation'\nimport { buildContractMethods, getFunctionACI } from './helpers'\nimport AsyncInit from '../../utils/async-init'\n\n/**\n * Validated contract call arguments using contract ACI\n * @function validateCallParams\n * @rtype (aci: Object, params: Array) => Object\n * @param {Object} aci Contract ACI\n * @param {Array} params Contract call arguments\n * @return Promise{Array} Object with validation errors\n */\nasync function prepareArgsForEncode (aci, params) {\n  if (!aci || !aci.arguments) return params\n  // Validation\n  if (aci.arguments.length > params.length) {\n    throw new Error(`Function \"${aci.name}\" require ${aci.arguments.length} arguments of types [${aci.arguments.map(a => JSON.stringify(a.type))}] but get [${params.map(JSON.stringify)}]`)\n  }\n\n  validateArguments(aci, params)\n  const bindings = aci.bindings\n  // Cast argument from JS to Sophia type\n  return Promise.all(aci.arguments.map(async ({ type }, i) => transform(type, params[i], {\n    bindings\n  })))\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {String} source Contract source code\n * @param {Object} [options] Options object\n * @param {Object} [options.aci] Contract ACI\n * @param {Object} [options.contractAddress] Contract address\n * @param {Object} [options.opt] Contract options\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await client.getContractInstance(sourceCode)\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is stateful or not\n */\nasync function getContractInstance (source, { aci, contractAddress, opt } = {}) {\n  aci = aci || await this.contractGetACI(source)\n  const defaultOptions = {\n    skipArgsConvert: false,\n    skipTransformDecoded: false,\n    callStatic: false,\n    deposit: 0,\n    gasPrice: 1000000000, // min gasPrice 1e9\n    amount: 0,\n    gas: 1600000 - 21000,\n    top: null, // using for contract call static\n    waitMined: true,\n    verify: false\n  }\n  const instance = {\n    interface: R.defaultTo(null, R.prop('interface', aci)),\n    aci: R.defaultTo(null, R.path(['encoded_aci', 'contract'], aci)),\n    source,\n    compiled: null,\n    deployInfo: { address: contractAddress },\n    options: R.merge(defaultOptions, opt),\n    compilerVersion: this.compilerVersion,\n    setOptions (opt) {\n      this.options = R.merge(this.options, opt)\n    }\n  }\n\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.compile = compile({ client: this, instance })\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false }) => ContractInstance: Object\n   * @param {Array} init Contract init function arguments array\n   * @param {Object} [options={}] options Options object\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.deploy = deploy({ client: this, instance })\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false, skipTransformDecoded: false, callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @param {Boolean} [options.skipTransformDecoded=false] Skip Transform decoded data to JS type\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n  instance.call = call({ client: this, instance })\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n  instance.methods = buildContractMethods(instance)()\n  return instance\n}\n\nconst call = ({ client, instance }) => async (fn, params = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, fn)\n  const source = opt.source || instance.source\n\n  if (!fn) throw new Error('Function name is required')\n  if (!instance.deployInfo.address) throw new Error('You need to deploy contract before calling!')\n\n  params = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, params) : params\n  const result = opt.callStatic\n    ? await client.contractCallStatic(source, instance.deployInfo.address, fn, params, {\n      top: opt.top,\n      options: opt\n    })\n    : await client.contractCall(source, instance.deployInfo.address, fn, params, opt)\n  return {\n    ...result,\n    decodedResult: await transformDecodedData(\n      fnACI.returns,\n      await result.decode(),\n      { ...opt, compilerVersion: instance.compilerVersion, bindings: fnACI.bindings }\n    )\n  }\n}\n\nconst deploy = ({ client, instance }) => async (init = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, 'init')\n\n  if (!instance.compiled) await instance.compile()\n  init = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, init) : init\n\n  const { owner, transaction, address, createdAt, result, rawTx } = await client.contractDeploy(instance.compiled, opt.source || instance.source, init, opt)\n  instance.deployInfo = { owner, transaction, address, createdAt, result, rawTx }\n  return instance.deployInfo\n}\n\nconst compile = ({ client, instance }) => async () => {\n  const { bytecode } = await client.contractCompile(instance.source)\n  instance.compiled = bytecode\n  return instance.compiled\n}\n\n/**\n * Contract ACI Stamp\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @rtype Stamp\n * @return {Object} Contract compiler instance\n * @example ContractACI()\n */\nexport default AsyncInit.compose({\n  methods: {\n    getContractInstance\n  }\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import Contract from '@aeternity/aepp-sdk/es/ae/contract' (Using tree-shaking)\n * @example import { Contract } from '@aeternity/aepp-sdk' (Using bundle)\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { isBase64 } from '../utils/crypto'\nimport ContractCompilerAPI from '../contract/compiler'\nimport ContractBase from '../contract'\nimport ContractACI from '../contract/aci'\nimport BigNumber from 'bignumber.js'\nimport NodePool from '../node-pool'\n\n/**\n * Handle contract call error\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {Object} result call result object\n * @throws Error Decoded error\n * @return {Promise<void>}\n */\nasync function handleCallError (result) {\n  const error = Buffer.from(result.returnValue).toString()\n  if (isBase64(error.slice(3))) {\n    const decodedError = Buffer.from(error.slice(3), 'base64').toString()\n    throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n  }\n\n  const decodedError = await this.contractDecodeDataAPI('string', error)\n  throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n}\n/**\n * Encode call data for contract call\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call\n * @return {Promise<String>}\n */\nasync function contractEncodeCall (source, name, args) {\n  return this.contractEncodeCallDataAPI(source, name, args)\n}\n\n/**\n * Decode contract call result data\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source - source code\n * @param {String } fn - function name\n * @param {String} callValue - result call data\n * @param {String} callResult - result status\n * @return {Promise<String>} Result object\n * @example\n * const decodedData = await client.contractDecodeData(SourceCode ,'functionName', 'cb_asdasdasd...', 'ok|revert')lt\n * @param options\n */\nasync function contractDecodeData (source, fn, callValue, callResult, options) {\n  return this.contractDecodeCallResultAPI(source, fn, callValue, callResult, options)\n}\n\n/**\n * Static contract call(using dry-run)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args  Argument's for call function\n * @param {Object} options [options={}]  Options\n * @param {String} top [options.top] Block hash on which you want to call contract\n * @param {String} options [options.options]  Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCallStatic(source, address, fnName, args = [], { top, options = {} })\n * {\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCallStatic (source, address, name, args = [], { top, options = {} } = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = opt.onAccount\n    ? await this.address(opt)\n    : await this.address().catch(e => opt.dryRunAccount.pub)\n\n  // Get block hash by height\n  if (top && !isNaN(top)) {\n    top = (await this.getKeyBlock(top)).hash\n  }\n\n  // Prepare `call` transaction\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId,\n    contractId: address,\n    callData: await this.contractEncodeCall(source, name, args),\n    nonce: top ? (await this.getAccount(callerId, { hash: top })).nonce + 1 : undefined\n  }))\n\n  // Dry-run\n  const dryRunAmount = BigNumber(opt.dryRunAccount.amount).gt(BigNumber(opt.amount || 0)) ? opt.dryRunAccount.amount : opt.amount\n  const dryRunAccount = {\n    amount: dryRunAmount,\n    pubKey: callerId\n  }\n  const [{ result: status, callObj, reason }] = (await this.txDryRun([tx], [dryRunAccount], top)).results\n\n  // check response\n  if (status !== 'ok') throw new Error('Dry run error, ' + reason)\n  const { returnType, returnValue } = callObj\n  if (returnType !== 'ok') {\n    await this.handleCallError(callObj)\n  }\n  return {\n    result: callObj,\n    decode: () => this.contractDecodeData(source, name, returnValue, returnType, options)\n  }\n}\n\n/**\n * Call contract function\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call function\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCall(source, address, fnName, args = [], options)\n * {\n *   hash: TX_HASH,\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCall (source, address, name, args = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId: await this.address(opt),\n    contractId: address,\n    callData: await this.contractEncodeCall(source, name, args)\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return {\n      hash,\n      rawTx,\n      result,\n      decode: () => this.contractDecodeData(source, name, result.returnValue, result.returnType)\n    }\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Deploy contract to the node\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} code Compiled contract\n * @param {String} source Contract source code\n * @param {Array} initState Arguments of contract constructor(init) function\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const deployed = await client.contractDeploy(bytecode, source, init = [], options)\n * {\n *   owner: OWNER_PUB_KEY,\n *   transaction: TX_HASH,\n *   address: CONTRACT_ADDRESS,\n *   createdAt: Date,\n *   result: DEPLOY_TX_DATA,\n *   call: (fnName, args = [], options) => Call contract function,\n *   callStatic: (fnName, args = [], options) => Static all contract function\n * }\n */\nasync function contractDeploy (code, source, initState = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callData = await this.contractEncodeCall(source, 'init', initState)\n  const ownerId = await this.address(opt)\n\n  const { tx, contractId } = await this.contractCreateTx(R.merge(opt, {\n    callData,\n    code,\n    ownerId\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return Object.freeze({\n      result,\n      owner: ownerId,\n      transaction: hash,\n      rawTx,\n      address: contractId,\n      call: async (name, args = [], options) => this.contractCall(source, contractId, name, args, R.merge(opt, options)),\n      callStatic: async (name, args = [], options = {}) => this.contractCallStatic(source, contractId, name, args, { ...options, options: { onAccount: opt.onAccount, ...options.options } }),\n      createdAt: new Date()\n    })\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Compile contract source code\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract sourece code\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const compiled = await client.contractCompile(SOURCE_CODE)\n * {\n *   bytecode: CONTRACT_BYTE_CODE,\n *   deploy: (init = [], options = {}) => Deploy Contract,\n *   encodeCall: (fnName, args = []) => Prepare callData\n * }\n */\nasync function contractCompile (source, options = {}) {\n  const bytecode = await this.compileContractAPI(source, options)\n  return Object.freeze(Object.assign({\n    encodeCall: async (name, args) => this.contractEncodeCall(source, name, args),\n    deploy: async (init, options = {}) => this.contractDeploy(bytecode, source, init, options)\n  }, { bytecode }))\n}\n\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import Transaction from '@aeternity/aepp-sdk/es/tx/tx\n * import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory\n * import ChainNode from '@aeternity/aepp-sdk/es/chain/node\n * import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler\n * // or using bundle\n * import {\n *   Transaction,\n *   MemoryAccount,\n *   ChainNode,\n *   ContractCompilerAPI\n * } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n *    .compose(ContractCompilerAPI) // ContractBase implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\nexport const ContractAPI = Ae.compose(ContractBase, ContractACI, {\n  methods: {\n    contractCompile,\n    contractCallStatic,\n    contractDeploy,\n    contractCall,\n    contractEncodeCall,\n    contractDecodeData,\n    handleCallError\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        deposit: 0,\n        gasPrice: 1000000000, // min gasPrice 1e9\n        amount: 0,\n        gas: 1600000 - 21000,\n        options: '',\n        dryRunAccount: { pub: 'ak_11111111111111111111111111111111273Yts', amount: '100000000000000000000000000000000000' }\n      }\n    }\n  }\n})\n\nexport const Contract = ContractAPI.compose(NodePool)\nexport const ContractWithCompiler = Contract.compose(ContractCompilerAPI)\nexport default ContractWithCompiler\n","import BigNumber from 'bignumber.js'\nimport { MAX_AUTH_FUN_GAS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx, unpackTx } from '../../tx/builder'\n\nexport const prepareGaParams = (ins) => async (authData, authFnName) => {\n  if (typeof authData !== 'object') throw new Error('AuthData must be an object')\n  if (authData.gas && BigNumber(authData.gas).gt(MAX_AUTH_FUN_GAS)) throw new Error(`the maximum gas value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${authData.gas}`)\n  const gas = authData.gas || MAX_AUTH_FUN_GAS\n  if (authData.callData) {\n    if (authData.callData.split('_')[0] !== 'cb') throw new Error('Auth data must be a string with \"cb\" prefix.')\n    return { authCallData: authData.callData, gas }\n  } else {\n    if (!authData.source || !authData.args) throw new Error('Auth data must contain source code and arguments.')\n    return { authCallData: await ins.contractEncodeCall(authData.source, authFnName, authData.args), gas }\n  }\n}\n\nexport const getContractAuthFan = (ins) => async (source, fnName) => {\n  const { bytecode } = await ins.contractCompile(source)\n  const { tx: { typeInfo } } = await unpackTx(bytecode, false, 'cb')\n  if (!typeInfo[fnName]) throw new Error(`Can't find authFan for function \"${fnName}\"`)\n  const { funHash: authFun } = typeInfo[fnName]\n  return { bytecode, authFun }\n}\n\nexport const wrapInEmptySignedTx = (rlp) => buildTx({ encodedTx: rlp, signatures: [] }, TX_TYPE.signed)\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalize Account module - routines to use generalize account\n *\n * @module @aeternity/aepp-sdk/es/contract/ga\n * @export GeneralizeAccount\n * @example import GeneralizeAccount from '@aeternity/aepp-sdk/es/contract/ga' (Using tree-shaking)\n * @example import { GeneralizeAccount } from '@aeternity/aepp-sdk' (Using bundle)\n */\nimport * as R from 'ramda'\n\nimport { Contract } from '../../ae/contract'\nimport { ABI_VERSIONS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { getContractAuthFan, prepareGaParams, wrapInEmptySignedTx } from './helpers'\nimport { assertedType, decodeBase64Check } from '../../utils/crypto'\n\n/**\n * GeneralizeAccount Stamp\n *\n * Provide Generalize Account implementation\n * {@link module:@aeternity/aepp-sdk/es/contract/ga} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} GeneralizeAccount instance\n * @example\n * const authContract = ``\n * await client.createGeneralizeAccount(authFnName, authContract, [...authFnArguments]\n * // Make spend using GA\n * const callData = 'cb_...' // encoded call data for auth contract\n * await client.spend(10000, receiverPub, { authData: { callData } })\n * // or\n * await client.spend(10000, receiverPub, { authData: { source: authContract, args: [...authContractArgs] } }) // sdk will prepare callData itself\n */\nexport const GeneralizeAccount = Contract.compose({\n  methods: {\n    createGeneralizeAccount,\n    createMetaTx,\n    isGA\n  }\n})\nexport default GeneralizeAccount\n\n/**\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * Check if account is GA account\n * @param {String} address - Account address\n * @return {Boolean}\n */\nasync function isGA (address) {\n  const { contractId } = await this.getAccount(address)\n  return !!contractId\n}\n\n/**\n * Convert current account to GA account\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} authFnName - Authorization function name\n * @param {String} source - Auth contract source code\n * @param {Array} args - init arguments\n * @param {Object} options - Options\n * @return {Promise<Readonly<{result: *, owner: *, createdAt: Date, address, rawTx: *, transaction: *}>>}\n */\nasync function createGeneralizeAccount (authFnName, source, args, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const ownerId = await this.address(opt)\n\n  if (await this.isGA(ownerId)) throw new Error(`Account ${ownerId} is already GA`)\n\n  const { authFun, bytecode } = await getContractAuthFan(this)(source, authFnName)\n  const callData = await this.contractEncodeCall(source, 'init', args)\n\n  const { tx, contractId } = await this.gaAttachTx(R.merge(opt, { ownerId, code: bytecode, callData, authFun }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    gaContractId: contractId\n  })\n}\n\n/**\n * Create a metaTx transaction\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} rawTransaction Inner transaction\n * @param {Object} authData Object with gaMeta params\n * @param {String} authFnName - Authorization function name\n * @param {Object} options - Options\n * @return {String}\n */\nasync function createMetaTx (rawTransaction, authData, authFnName, options = {}) {\n  if (!authData) throw new Error('authData is required')\n  // Check if authData is callData or if it's an object prepare a callData from source and args\n  const { authCallData, gas } = await prepareGaParams(this)(authData, authFnName)\n  const opt = R.merge(this.Ae.defaults, options)\n  // Get transaction rlp binary\n  const rlpBinaryTx = decodeBase64Check(assertedType(rawTransaction, 'tx'))\n  // Wrap in SIGNED tx with empty signatures\n  const { rlpEncoded } = wrapInEmptySignedTx(rlpBinaryTx)\n  // Prepare params for META tx\n  const params = { ...opt, tx: rlpEncoded, gaId: await this.address(opt), abiVersion: ABI_VERSIONS.SOPHIA, authData: authCallData, gas }\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl } = await this.prepareTxParams(TX_TYPE.gaMeta, params)\n  // Build META tx\n  const { rlpEncoded: metaTxRlp } = buildTx({ ...params, fee: `${fee}`, ttl }, TX_TYPE.gaMeta)\n  // Wrap in empty signed tx\n  const { tx } = wrapInEmptySignedTx(metaTxRlp)\n  // Send tx to the chain\n  return tx\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\nimport uuid from 'uuid/v4'\n\nfunction createSession () {\n  const id = uuid()\n  this.rpcSessions[id] = { id }\n  return id\n}\n\nfunction hello () {\n  return Promise.resolve(this.createSession())\n}\n\nasync function receive ({ data, origin, source }) {\n  if (typeof data !== 'object' || data.jsonrpc !== '2.0') return\n\n  const { id, method, params, session } = data\n\n  function error () {\n    return Promise.reject(Error(`Error: No such method ${method}`))\n  }\n\n  R.call(\n    (this.rpcMethods[method] || error).bind(this),\n    { params, session: this.rpcSessions[session], origin }\n  ).then(result => {\n    const resolve = typeof result === 'object' && Object.prototype.toString.call(result) === '[object Object]'\n      ? Object.entries(result)\n        .filter(([key, value]) => typeof value !== 'function')\n        .reduce((p, [key, value]) => ({ ...p, [key]: value }), {})\n      : result\n    source.postMessage({ jsonrpc: '2.0', id, result: { resolve } }, '*')\n  }).catch(error => {\n    source.postMessage({ jsonrpc: '2.0', id, result: { reject: error.message } }, '*')\n  })\n}\n\nconst RpcServer = stampit({\n  init ({ self = window }) {\n    const handler = this.receive.bind(this)\n    self.addEventListener('message', handler, false)\n    this.destroyServer = () =>\n      self.removeEventListener('message', handler, false)\n  },\n  methods: {\n    receive,\n    createSession\n  },\n  props: {\n    rpcSessions: {}\n  },\n  deepProps: {\n    rpcMethods: { hello }\n  }\n})\n\nexport default RpcServer\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import Wallet from '@aeternity/aepp-sdk/es/ae/wallet'\n */\n\nimport Ae from './'\nimport Account from '../account'\nimport ContractBase from '../contract'\nimport Accounts from '../accounts'\nimport Chain from '../chain/node'\nimport Rpc from '../rpc/server'\nimport * as R from 'ramda'\nimport Tx from '../tx/tx'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\nimport GeneralizeAccount from '../contract/ga'\n\nconst contains = R.flip(R.contains)\nconst isTxMethod = contains(Tx.compose.deepConfiguration.Ae.methods)\nconst isChainMethod = contains(Chain.compose.deepConfiguration.Ae.methods)\nconst isAccountMethod = contains(Account.compose.deepConfiguration.Ae.methods)\nconst isContractMethod = contains(ContractBase.compose.deepConfiguration.Contract.methods)\nconst handlers = [\n  { pred: isTxMethod, handler: 'onTx', error: 'Creating transaction [{}] rejected' },\n  { pred: isChainMethod, handler: 'onChain', error: 'Chain operation [{}] rejected' },\n  { pred: isAccountMethod, handler: 'onAccount', error: 'Account operation [{}] rejected' },\n  { pred: isContractMethod, handler: 'onContract', error: 'Contract operation [{}] rejected' }\n]\n\n/**\n * Confirm client connection attempt and associate new session with currently\n * selected account preset\n * @instance\n * @category async\n * @return {Promise<String>} Session ID\n */\nasync function hello () {\n  const id = await Rpc.compose.deepProperties.rpcMethods.hello.call(this)\n  this.rpcSessions[id].address = await this.address()\n  return Promise.resolve(id)\n}\n\nasync function rpc (method, params, session) {\n  const { handler, error } = R.find(({ pred }) => pred(method), handlers)\n\n  if (handler === undefined) {\n    return Promise.reject(Error(`Unknown method ${method}`))\n  } else if (await this[handler](method, params, session)) {\n    return this[method].apply(this, params)\n  } else {\n    return Promise.reject(Error(error.replace(/{}/, method)))\n  }\n}\n\nfunction onTx () {\n  console.log('Implement onTx!')\n  return Promise.resolve(false)\n}\n\nfunction onChain () {\n  console.log('Implement onChain!')\n  return Promise.resolve(false)\n}\n\nfunction onAccount () {\n  console.log('Implement onAccount!')\n  return Promise.resolve(false)\n}\n\nfunction onContract () {\n  console.log('Implement onContract!')\n  return Promise.resolve(false)\n}\n\nasync function rpcSign ({ params, session }) {\n  if (await this.onAccount('sign', params, session)) {\n    return this.signWith(session.address, params[0])\n  } else {\n    return Promise.reject(Error('Signing rejected'))\n  }\n}\n\nasync function rpcAddress ({ params, session }) {\n  if (await this.onAccount('address', params, session)) {\n    return Promise.resolve(session.address)\n  } else {\n    return Promise.reject(Error('Address rejected'))\n  }\n}\n\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @param {Function} [options.onTx] - Tx method protector function\n * @param {Function} [options.onChain] - Chain method protector function\n * @param {Function} [options.onAccount] - Account method protector function\n * @param {Function} [options.onContract] - Contract method protector function\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://sdk-testnet.aepps.com/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n  onTx: confirm,\n  onChain: confirm,\n  onAccount: confirm\n  onContract: confirm\n})\n */\nconst Wallet = Ae.compose(Accounts, Chain, NodePool, Tx, Contract, GeneralizeAccount, Rpc, {\n  init ({ onTx = this.onTx, onChain = this.onChain, onAccount = this.onAccount, onContract = this.onContract }, { stamp }) {\n    this.onTx = onTx\n    this.onChain = onChain\n    this.onAccount = onAccount\n    this.onContract = onContract\n\n    // Combine `AE` methods with `Contract` and `AENS`\n    const methods = [\n      ...stamp.compose.deepConfiguration.Ae.methods,\n      ...stamp.compose.deepConfiguration.Contract.methods\n    ]\n    this.rpcMethods = Object.assign(R.fromPairs(methods.map(m => [m, ({ params, session }) => this.rpc(m, params, session)])), this.rpcMethods)\n  },\n  methods: { rpc, onTx, onChain, onAccount, onContract },\n  deepProps: {\n    rpcMethods: {\n      sign: rpcSign,\n      address: rpcAddress,\n      hello\n    }\n  }\n})\n\nexport default Wallet\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * RPC client module\n * @module @aeternity/aepp-sdk/es/rpc/client\n * @export RpcClient\n * @example import RpcClient from '@aeternity/aepp-sdk/es/rpc/client'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from '../utils/async-init'\nimport * as R from 'ramda'\n\nfunction post (method) {\n  return function (...params) {\n    return this.post(method, params)\n  }\n}\n\n/**\n * RPC client Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/rpc/client\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.parent=window.parent] - IFrame parent window\n * @param {Object} [options.self=window] - IFrame window\n * @return {Object} RPC client\n * @example RpcClient()\n */\nconst RpcClient = stampit(AsyncInit, {\n  async init ({ parent = window.parent, self = window }, { stamp }) {\n    if (parent === self) {\n      throw new Error('rpc client: Can\\'t send messages to itself')\n    }\n\n    let sequence = 0\n    const callbacks = {}\n\n    function receive ({ data }) {\n      if (typeof data !== 'object' || data.type === 'webpackOk') {\n        return\n      }\n\n      const { result: { resolve, reject }, id } = data\n\n      if (callbacks[id]) {\n        if (resolve) {\n          callbacks[id].resolve(resolve)\n        } else if (reject) {\n          callbacks[id].reject(reject)\n        }\n        delete callbacks[id]\n      }\n    }\n\n    this.post = (method, params) => {\n      const ret = new Promise((resolve, reject) => {\n        callbacks[sequence] = { resolve, reject }\n      })\n\n      parent.postMessage({ jsonrpc: '2.0', id: sequence, method, params, session: this.session }, '*')\n      sequence++\n\n      return ret\n    }\n\n    const handler = receive\n    self.addEventListener('message', handler, false)\n    this.destroyClient = () =>\n      self.removeEventListener('message', handler, false)\n\n    this.session = await this.post('hello')\n  },\n  props: {\n    handler: null\n  },\n  methods: {},\n  composers ({ stamp, composables }) {\n    // Combine Ae and Contract methods\n    const methods = [\n      ...(R.path(['compose', 'deepConfiguration', 'Ae', 'methods'], stamp) || []),\n      ...(R.path(['compose', 'deepConfiguration', 'Contract', 'methods'], stamp) || [])\n    ]\n    const rpcMethods = R.fromPairs(methods.map(m => [m, post(m)]))\n    if (stamp.compose.methods) {\n      // remove signTransaction and getNetworkId from AEPP instance, let's go it through RPC\n      ['signTransaction', 'getNetworkId'].forEach(m => delete stamp.compose.methods[m])\n    }\n    stamp.compose.methods = Object.assign(rpcMethods, stamp.compose.methods)\n  }\n})\n\nexport default RpcClient\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import Oracle from '@aeternity/aepp-sdk/es/ae/oracle'\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { decodeBase64Check } from '../utils/crypto'\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\nasync function getOracleObject (oracleId) {\n  const oracle = await this.getOracle(oracleId)\n  const { oracleQueries: queries } = await this.getOracleQueries(oracleId)\n  return {\n    ...oracle,\n    queries,\n    postQuery: (query, options) => this.postQueryToOracle(oracleId, query, options),\n    respondToQuery: (queryId, response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    extendOracle: (oracleTtl, options) => this.extendOracleTtl(oracleId, oracleTtl, options),\n    getQuery: async (queryId) => {\n      return getQueryObject.bind(this)(oracleId, queryId)\n    }\n  }\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\nasync function getQueryObject (oracleId, queryId) {\n  return {\n    ...(await this.getOracleQuery(oracleId, queryId)),\n    respond: (response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    pollForResponse: ({ attempts, interval }) => this.pollForQueryResponse(oracleId, queryId, { attempts, interval }),\n    decode: (data) => decodeBase64Check(data.slice(3))\n  }\n}\n\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\nexport async function pollForQueryResponse (oracleId, queryId, { attempts = 20, interval = 5000 } = {}) {\n  const emptyResponse = 'or_Xfbg4g=='\n  async function pause (duration) {\n    await new Promise(resolve => setTimeout(resolve, duration))\n  }\n  async function probe (left) {\n    const query = await this.getOracleQuery(oracleId, queryId)\n    if (query.response !== emptyResponse) {\n      return { response: query.response, decode: () => decodeBase64Check(query.response.slice(3)) }\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe.bind(this)(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms`)\n  }\n  return probe.bind(this)(attempts)\n}\n\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] queryFee Oracle query Fee\n * @param {Object} [options.oracleTtl] oracleTtl OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] abiVersion Always 0 (do not use virtual machine)\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function registerOracle (queryFormat, responseFormat, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options) // Preset VmVersion for oracle\n  const accountId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oracleRegisterTx(R.merge(opt, {\n    accountId,\n    queryFormat,\n    responseFormat\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await getOracleObject.bind(this)(`ok_${accountId.slice(3)}`))\n  }\n}\n\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\nasync function postQueryToOracle (oracleId, query, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const senderId = await this.address(opt)\n\n  const { tx: oracleRegisterTx, queryId } = await this.oraclePostQueryTx(R.merge(opt, {\n    oracleId,\n    senderId,\n    query\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await (await getOracleObject.bind(this)(oracleId)).getQuery(queryId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function extendOracleTtl (oracleId, oracleTtl, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleExtendTx = await this.oracleExtendTx(R.merge(opt, {\n    oracleId,\n    callerId,\n    oracleTtl\n  }))\n  return {\n    ...(await this.send(oracleExtendTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function respondToQuery (oracleId, queryId, response, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleRespondTx = await this.oracleRespondTx(R.merge(opt, {\n    oracleId,\n    queryId,\n    callerId,\n    response\n  }))\n  return {\n    ...(await this.send(oracleRespondTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: { Ae: { defaults: {\n    queryFee: 30000,\n    oracleTtl: { type: 'delta', value: 500 },\n    queryTtl: { type: 'delta', value: 10 },\n    responseTtl: { type: 'delta', value: 10 }\n  } } }\n})\n\nexport default Oracle\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/aepp'\n */\n\nimport Ae from './'\nimport Aens from './aens'\nimport Rpc from '../rpc/client'\nimport { ContractAPI } from './contract'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\n\n/**\n * Aepp Stamp\n *\n * Aepp provides Ae base functionality with Contract and Aens.\n * This stamp can be used only with Wallet, all Aepp method's going through RPC to Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\nconst Aepp = Ae.compose(ContractAPI, Aens, Oracle, GeneralizeAccount, Rpc)\n\nexport default Aepp\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\nimport { EventEmitter } from 'events'\nimport * as R from 'ramda'\nimport JSONBig from '../utils/json-big'\nimport { pascalToSnake } from '../utils/string'\nimport { awaitingConnection } from './handlers'\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000\n\nconst options = new WeakMap()\nconst status = new WeakMap()\nconst state = new WeakMap()\nconst fsm = new WeakMap()\nconst websockets = new WeakMap()\nconst eventEmitters = new WeakMap()\nconst messageQueue = new WeakMap()\nconst messageQueueLocked = new WeakMap()\nconst actionQueue = new WeakMap()\nconst actionQueueLocked = new WeakMap()\nconst sequence = new WeakMap()\nconst channelId = new WeakMap()\nconst rpcCallbacks = new WeakMap()\nconst pingTimeoutId = new WeakMap()\nconst pongTimeoutId = new WeakMap()\n\nfunction channelURL (url, params) {\n  const paramString = R.join('&', R.values(R.mapObjIndexed((value, key) =>\n    `${pascalToSnake(key)}=${encodeURIComponent(value)}`, params)))\n\n  return `${url}?${paramString}`\n}\n\nfunction emit (channel, ...args) {\n  eventEmitters.get(channel).emit(...args)\n}\n\nfunction enterState (channel, nextState) {\n  if (!nextState) {\n    throw new Error('State Channels FSM entered unknown state')\n  }\n  fsm.set(channel, nextState)\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel)\n  }\n  dequeueAction(channel)\n}\n\nfunction changeStatus (channel, newStatus) {\n  const prevStatus = status.get(channel)\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus)\n    emit(channel, 'statusChanged', newStatus)\n  }\n}\n\nfunction changeState (channel, newState) {\n  state.set(channel, newState)\n  emit(channel, 'stateChanged', newState)\n}\n\nfunction send (channel, message) {\n  websockets.get(channel).send(JSONBig.stringify(message))\n}\n\nfunction enqueueAction (channel, guard, action) {\n  actionQueue.set(channel, [\n    ...actionQueue.get(channel) || [],\n    { guard, action }\n  ])\n  dequeueAction(channel)\n}\n\nasync function dequeueAction (channel) {\n  const locked = actionQueueLocked.get(channel)\n  const queue = actionQueue.get(channel) || []\n  if (locked || !queue.length) {\n    return\n  }\n  const state = fsm.get(channel)\n  const index = queue.findIndex(item => item.guard(channel, state))\n  if (index === -1) {\n    return\n  }\n  actionQueue.set(channel, queue.filter((_, i) => index !== i))\n  actionQueueLocked.set(channel, true)\n  const nextState = await Promise.resolve(queue[index].action(channel, state))\n  actionQueueLocked.set(channel, false)\n  enterState(channel, nextState)\n}\n\nasync function handleMessage (channel, message) {\n  const { handler, state } = fsm.get(channel)\n  enterState(channel, await Promise.resolve(handler(channel, message, state)))\n}\n\nasync function dequeueMessage (channel) {\n  const queue = messageQueue.get(channel)\n  if (messageQueueLocked.get(channel) || !queue.length) {\n    return\n  }\n  const [message, ...remaining] = queue\n  messageQueue.set(channel, remaining || [])\n  messageQueueLocked.set(channel, true)\n  await handleMessage(channel, message)\n  messageQueueLocked.set(channel, false)\n  dequeueMessage(channel)\n}\n\nfunction ping (channel) {\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    })\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel)\n      emit(channel, 'error', Error('Server pong timed out'))\n    }, PONG_TIMEOUT_MS))\n  }, PING_TIMEOUT_MS))\n}\n\nfunction onMessage (channel, data) {\n  const message = JSONBig.parse(data)\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id)\n    try {\n      callback(message)\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id)\n    }\n  } else if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message)\n  } else if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel)) ||\n      // Skip channelId check if channelId is not known yet\n      (channelId.get(channel) == null)\n    ) {\n      ping(channel)\n    }\n  } else {\n    messageQueue.set(channel, [...(messageQueue.get(channel) || []), message])\n    dequeueMessage(channel)\n  }\n}\n\nfunction wrapCallErrorMessage (message) {\n  const [{ message: details } = {}] = message.error.data || []\n  if (details) {\n    return Error(`${message.error.message}: ${details}`)\n  }\n  return Error(message.error.message)\n}\n\nfunction call (channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel)\n    rpcCallbacks.get(channel).set(id, (message) => {\n      if (message.result) return resolve(message.result)\n      if (message.error) return reject(wrapCallErrorMessage(message))\n    })\n    send(channel, { jsonrpc: '2.0', method, id, params })\n  })\n}\n\nfunction disconnect (channel) {\n  websockets.get(channel).close()\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n}\n\nfunction WebSocket (url, callbacks) {\n  function fireOnce (target, key, fn) {\n    const once = R.once(fn)\n    const original = target[key]\n    target[key] = (...args) => {\n      once(...args)\n      if (typeof original === 'function') {\n        original(...args)\n      }\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const ws = new W3CWebSocket(url)\n    // eslint-disable-next-line no-return-assign\n    Object.entries(callbacks).forEach(([key, callback]) => ws[key] = callback)\n    fireOnce(ws, 'onopen', () => resolve(ws))\n    fireOnce(ws, 'onerror', (err) => reject(err))\n  })\n}\n\nasync function initialize (channel, channelOptions) {\n  const optionsKeys = ['sign', 'url']\n  const params = R.pickBy((_, key) => !optionsKeys.includes(key), channelOptions)\n  const { url } = channelOptions\n  const wsUrl = channelURL(url, { ...params, protocol: 'json-rpc' })\n\n  options.set(channel, channelOptions)\n  fsm.set(channel, { handler: awaitingConnection })\n  eventEmitters.set(channel, new EventEmitter())\n  sequence.set(channel, 0)\n  rpcCallbacks.set(channel, new Map())\n  const ws = await WebSocket(wsUrl, {\n    onopen: () => {\n      changeStatus(channel, 'connected')\n      ping(channel)\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected')\n      clearTimeout(pingTimeoutId.get(channel))\n      clearTimeout(pongTimeoutId.get(channel))\n    },\n    onmessage: ({ data }) => onMessage(channel, data)\n  })\n  websockets.set(channel, ws)\n}\n\nexport {\n  initialize,\n  options,\n  status,\n  state,\n  eventEmitters,\n  emit,\n  changeStatus,\n  changeState,\n  send,\n  enqueueAction,\n  channelId,\n  call,\n  disconnect\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { generateKeyPair, encodeContractAddress, encodeBase64Check } from '../utils/crypto'\nimport {\n  options,\n  changeStatus,\n  changeState,\n  send,\n  emit,\n  channelId,\n  disconnect\n} from './internal'\nimport { unpackTx, buildTx } from '../tx/builder'\n\nfunction encodeRlpTx (rlpBinary) {\n  return `tx_${encodeBase64Check(rlpBinary)}`\n}\n\nasync function appendSignature (tx, signFn) {\n  const { signatures, encodedTx } = unpackTx(tx).tx\n  const result = await signFn(encodeRlpTx(encodedTx.rlpEncoded))\n  if (result) {\n    const { tx: signedTx, txType } = unpackTx(result)\n    return encodeRlpTx(buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).rlpEncoded)\n  }\n}\n\nfunction handleUnexpectedMessage (channel, message, state) {\n  if (state.reject) {\n    state.reject(Object.assign(\n      Error(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n      { wsMessage: message }\n    ))\n  }\n  return { handler: channelOpen }\n}\n\nexport function awaitingConnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event])\n      return { handler: awaitingChannelCreateTx }\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation }\n    }\n    return { handler: awaitingConnection }\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new Error(message.payload.message))\n    return { handler: channelClosed }\n  }\n}\n\nexport async function awaitingChannelCreateTx (channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role]\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n      return { handler: awaitingOnChainTx }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx))\n    send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (\n      message.params.data.info === 'funding_signed' &&\n      options.get(channel).role === 'initiator'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n    if (\n      message.params.data.info === 'funding_created' &&\n      options.get(channel).role === 'responder'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    options.get(channel).role === 'initiator'\n  ) {\n    changeStatus(channel, 'signed')\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingBlockInclusion (channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event]\n    if (handler) {\n      return { handler }\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    return { handler: awaitingBlockInclusion }\n  }\n}\n\nexport function awaitingOpenConfirmation (channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id)\n    return { handler: awaitingInitialState }\n  }\n}\n\nexport function awaitingInitialState (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    return { handler: channelOpen }\n  }\n}\n\nexport async function channelOpen (channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest }\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n          emit(channel, message.params.data.event)\n          return { handler: channelOpen }\n        case 'close_mutual':\n          return { handler: channelOpen }\n        case 'closing':\n          changeStatus(channel, 'closing')\n          return { handler: channelOpen }\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed')\n          return { handler: channelClosed }\n        case 'died':\n          changeStatus(channel, 'died')\n          return { handler: channelClosed }\n      }\n      break\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      })\n      return { handler: channelOpen }\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen }\n    case 'channels.update':\n      changeState(channel, message.params.data.state)\n      return { handler: channelOpen }\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state)\n  }\n}\nchannelOpen.enter = (channel) => {\n  changeStatus(channel, 'open')\n}\n\nexport async function awaitingOffChainTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingOffChainUpdate, state }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    const { data = [] } = message.error\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new Error('Insufficient balance'))\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new Error('Amount cannot be negative'))\n    } else {\n      state.reject(new Error(message.error.message))\n    }\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingOffChainUpdate (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    state.reject(new Error(message.error.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingTxSignRequest (channel, message, state) {\n  // eslint-disable-next-line no-useless-escape\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^\\.]+)$/) || []\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      })\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n        options.get(channel).sign(tag, tx, { updates: message.params.data.updates })\n      )\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    })\n    return { handler: awaitingUpdateConflict }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingUpdateConflict (channel, message, state) {\n  if (message.error) {\n    return { handler: awaitingUpdateConflict }\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingShutdownTx (channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } })\n      return { handler: awaitingShutdownOnChainTx, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingShutdownOnChainTx, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingShutdownOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    state.resolve(message.params.data.tx)\n    return { handler: channelClosed }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingLeave (channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state })\n    disconnect(channel)\n    return { handler: channelClosed }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingWithdrawTx (channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingWithdrawCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingDepositTx (channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingDepositCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingDepositCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingDepositCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingNewContractTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingNewContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingNewContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state).tx.encodedTx.tx\n    // eslint-disable-next-line standard/computed-property-even-spacing\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]]\n    changeState(channel, message.params.data.state)\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractUpdateTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingCallContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallsPruned (channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve()\n    return { handler: channelOpen }\n  }\n  state.reject(new Error('Unexpected message received'))\n  return { handler: channelClosed }\n}\n\nexport function channelClosed (channel, message, state) {\n  return { handler: channelClosed }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import Channel from '@aeternity/aepp-sdk/es/channel/index'\n */\n\nimport AsyncInit from '../utils/async-init'\nimport { snakeToPascal } from '../utils/string'\nimport * as handlers from './handlers'\nimport {\n  eventEmitters,\n  status as channelStatus,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect\n} from './internal'\nimport * as R from 'ramda'\n\nfunction snakeToPascalObjKeys (obj) {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val\n  }), {})\n}\n\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction on (event, callback) {\n  eventEmitters.get(this).on(event, callback)\n}\n\n/**\n * Close the connection\n */\nfunction disconnect () {\n  return channelDisconnect(this)\n}\n\n/**\n * Get current status\n *\n * @return {String}\n */\nfunction status () {\n  return channelStatus.get(this)\n}\n\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\nasync function state () {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}))\n}\n\n/**\n * Get channel id\n *\n * @return {String}\n */\nfunction id () {\n  return channelId.get(this)\n}\n\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\nfunction update (from, to, amount, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new',\n          params: { from, to, amount }\n        })\n        return {\n          handler: handlers.awaitingOffChainTx,\n          state: {\n            resolve,\n            reject,\n            sign\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\nasync function poi ({ accounts, contracts }) {\n  return (await call(this, 'channels.get.poi', { accounts, contracts })).poi\n}\n\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\nasync function balances (accounts) {\n  return R.reduce((acc, item) => ({\n    ...acc,\n    [item.account]: item.balance\n  }), {}, await call(this, 'channels.get.balances', { accounts }))\n}\n\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\nfunction leave () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} })\n        return {\n          handler: handlers.awaitingLeave,\n          state: { resolve, reject }\n        }\n      })\n  })\n}\n\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\nfunction shutdown (sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} })\n        return {\n          handler: handlers.awaitingShutdownTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\nfunction withdraw (amount, sign, { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } })\n        return {\n          handler: handlers.awaitingWithdrawTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnWithdrawLocked,\n            onWithdrawLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\nfunction deposit (amount, sign, { onOnChainTx, onOwnDepositLocked, onDepositLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } })\n        return {\n          handler: handlers.awaitingDepositTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnDepositLocked,\n            onDepositLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the AEVM\n * @param {Number} options.abiVersion - Version of the ABI\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\nfunction createContract ({ code, callData, deposit, vmVersion, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new_contract',\n          params: {\n            code,\n            call_data: callData,\n            deposit,\n            vm_version: vmVersion,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingNewContractTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\nfunction callContract ({ amount, callData, contract, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.call_contract',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractUpdateTx,\n          state: { resolve, reject, sign }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\nasync function callContractStatic ({ amount, callData, contract, abiVersion }) {\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }))\n}\n\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\nasync function getContractCall ({ caller, contract, round }) {\n  return snakeToPascalObjKeys(\n    await call(this, 'channels.get.contract_call', {\n      caller_id: caller,\n      contract_id: contract,\n      round\n    })\n  )\n}\n\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\nasync function getContractState (contract) {\n  const result = await call(this, 'channels.get.contract', { pubkey: contract })\n  return snakeToPascalObjKeys({\n    ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  })\n}\n\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\nfunction cleanContractCalls () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.clean_contract_calls',\n          params: {}\n        })\n        return {\n          handler: handlers.awaitingCallsPruned,\n          state: { resolve, reject }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\nfunction sendMessage (message, recipient) {\n  let info = message\n  if (typeof message === 'object') {\n    info = JSON.stringify(message)\n  }\n  send(this, { jsonrpc: '2.0', method: 'channels.message', params: { info, to: recipient } })\n}\n\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an off-chain update after our client had initiated and signed it. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an on-chain transaction reaching maturity (passing minimum depth) after the local node has detected this. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an event. This applies for all off-chain updates that are not meant to land on-chain, as well as some special cases: opening a noise connection, mutual closing acknowledgement and reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an outgoing noise session to the responder's node. Applicable only for responder (default: timeout_idle's value)\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\nconst Channel = AsyncInit.compose({\n  async init (options) {\n    initialize(this, options)\n  },\n  methods: {\n    on,\n    status,\n    state,\n    id,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls\n  }\n})\n\nexport default Channel\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/universal'\n */\n\nimport Ae from './'\nimport Chain from '../chain/node'\nimport Aens from './aens'\nimport Transaction from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\nimport Accounts from '../accounts'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\n\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\nexport const Universal = Ae.compose(Accounts, Chain, NodePool, Transaction, Aens, Contract, Oracle, GeneralizeAccount, {\n  init () {},\n  props: { process: {} }\n})\nexport const UniversalWithAccounts = Universal\nexport default Universal\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as Crypto from './utils/crypto'\nimport * as Bytes from './utils/bytes'\nimport * as TxBuilder from './tx/builder'\nimport * as TxBuilderHelper from './tx/builder/helpers'\nimport HdWallet from './utils/hd-wallet'\n\nimport Ae from './ae'\nimport Chain from './chain'\nimport ChainNode from './chain/node'\nimport Node from './node'\nimport NodePool from './node-pool'\nimport Tx from './tx'\nimport Transaction from './tx/tx'\nimport TransactionValidator from './tx/validator'\nimport Account from './account'\nimport Accounts from './accounts'\nimport MemoryAccount from './account/memory'\nimport Aens from './ae/aens'\nimport Contract from './ae/contract'\nimport GeneralizeAccount from './contract/ga'\nimport ContractCompilerAPI from './contract/compiler'\nimport Wallet from './ae/wallet'\nimport Aepp from './ae/aepp'\nimport Oracle from './ae/oracle'\nimport OracleNodeAPI from './oracle/node'\nimport Selector from './account/selector'\nimport Channel from './channel'\nimport Universal from './ae/universal'\nimport ContractACI from './contract/aci'\n\nexport {\n  Account,\n  Accounts,\n  Ae,\n  Aens,\n  Aepp,\n  Bytes,\n  Contract,\n  ContractCompilerAPI,\n  ContractACI,\n  ChainNode,\n  Channel,\n  Crypto,\n  Chain,\n  GeneralizeAccount,\n  HdWallet,\n  MemoryAccount,\n  Node,\n  NodePool,\n  Oracle,\n  OracleNodeAPI,\n  Selector,\n  Transaction,\n  TransactionValidator,\n  Tx,\n  TxBuilder,\n  TxBuilderHelper,\n  Universal,\n  Wallet\n}\n"],"sourceRoot":""}